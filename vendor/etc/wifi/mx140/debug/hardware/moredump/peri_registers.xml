<?xml version="1.0" encoding="utf-8"?>

<!--
(c) SCSC 2015-2016 autogenerated by moredump.py as part of 'drun prep'.
  Changes made to this file may cause incorrect behaviour and will be lost if it is regenerated.

  XML file defining registers for peri subsystem moredump
  Chip hash: f568


-->

<subsystem xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.samsung.com Registers.xsd"
  name="peri">
  <block name="bbic_pad_control" comment="">
    <register addr="54000000" rw_flags="RW" width="1" name="BBIC_PAD_CONTROL_RFIC_CTRL0" comment="Control register for pad RFIC_CTRL0"/>
    <register addr="54000004" rw_flags="RW" width="1" name="BBIC_PAD_CONTROL_RFIC_CTRL1" comment="Control register for pad RFIC_CTRL1"/>
    <register addr="54000008" rw_flags="RW" width="1" name="BBIC_PAD_CONTROL_RFIC_CTRL2" comment="Control register for pad RFIC_CTRL2"/>
    <register addr="5400000c" rw_flags="RW" width="1" name="BBIC_PAD_CONTROL_RFIC_CTRL3" comment="Control register for pad RFIC_CTRL3"/>
  </block>
  <block name="bt_bb_bsp" comment="">
    <register addr="56001000" rw_flags="R" width="4" name="BT_DEBUG" comment="BT Debug readback."/>
    <register addr="56001004" rw_flags="RW" width="4" name="BT_DEBUG_MUX" comment="BT Debug Mux Selection."/>
    <register addr="56001008" rw_flags="RW" width="4" name="BT_WBREE_CONFIG" comment="Enables Wibree featues."/>
    <register addr="5600100c" rw_flags="RW" width="4" name="BT_WBREE_CONFIG_EXT" comment="Extra Wibree controls."/>
    <register addr="56001010" rw_flags="RW" width="2" name="BT_WBREE_CONFIG_2M" comment="2M Wibree controls."/>
    <register addr="56001014" rw_flags="RW" width="1" name="BT_WBREE_CONFIG_LR" comment="LR Wibree controls."/>
    <register addr="56001018" rw_flags="RW" width="4" name="BT_WBREE_CONFIG_ANGLE" comment="AOD /AOAWibree controls."/>
    <register addr="5600101c" rw_flags="RW" width="4" name="BT_WBREE_SUPP_ENABLES" comment="More AOD /AOA Wibree controls."/>
    <register addr="56001020" rw_flags="RW" width="4" name="BT_WBREE_LEN_PARAMS" comment="Configure BLE length paramters"/>
    <register addr="56001024" rw_flags="RW" width="2" name="BT_LEN_PARAMS" comment="Configure BR, EDR length paramters"/>
    <register addr="56001028" rw_flags="RW" width="2" name="BT_ANTPLUS_CONFIG" comment="Enables ANT+ featues."/>
    <register addr="5600102c" rw_flags="RW" width="4" name="BT_LLR_TRIGGER_LSW" comment="LLR Access Code to transmit or receive LSW"/>
    <register addr="56001030" rw_flags="RW" width="4" name="BT_LLR_TRIGGER_MSW" comment="LLR Access Code to transmit or receive MSW"/>
    <register addr="56001034" rw_flags="RW" width="4" name="BT_AES_ACL_CFG_1" comment="Enable BT AES and AES CCM modes on ACL packets"/>
    <register addr="56001038" rw_flags="RW" width="4" name="BT_AES_ACL_CFG_2" comment="Enable BT AES and AES CCM modes on ACL packets"/>
    <register addr="5600103c" rw_flags="RW" width="4" name="BT_AES_ACL_CFG_3" comment="Enable BT AES and AES CCM modes on ACL packets"/>
    <register addr="56001040" rw_flags="RW" width="4" name="BT_AES_ACL23_CFG_1" comment="Enable BT AES and AES CCM modes on EDR ACL packets"/>
    <register addr="56001044" rw_flags="RW" width="4" name="BT_AES_ACL23_CFG_2" comment="Enable BT AES and AES CCM modes on EDR ACL packets"/>
    <register addr="56001048" rw_flags="RW" width="4" name="BT_AES_ACL23_CFG_3" comment="Enable BT AES and AES CCM modes on EDR ACL packets"/>
    <register addr="5600104c" rw_flags="RW" width="2" name="BT_AES_ACL23_CFG_4" comment="Enable BT AES and AES CCM modes on EDR ACL packets"/>
    <register addr="56001050" rw_flags="RW" width="4" name="BT_AES_ESCO_CFG" comment="Enable BT AES modes on ESCO packets"/>
    <register addr="56001054" rw_flags="RW" width="4" name="BT_AES_ESCO23_CFG" comment="Enable BT AES modes on EDR ESCO packets"/>
    <register addr="56001058" rw_flags="RW" width="4" name="BT_AES_MISC_CFG" comment="Miscellaneous BT AES config"/>
    <register addr="5600105c" rw_flags="RW" width="4" name="BT_CONFIG_TX" comment="BT Config TX on Bitstream processing control"/>
    <register addr="56001060" rw_flags="RW" width="2" name="BT_CONFIG_TX2" comment="BT Config TX on Bitstream processing control"/>
    <register addr="56001064" rw_flags="RW" width="4" name="BT_TX_AUTO_START_TIME" comment="Automatically turn on the Tx Bitstream digital at this time when TX_AUTO_START_EN is set."/>
    <register addr="56001068" rw_flags="RW" width="4" name="BT_CONFIG_RX" comment="BT Config RX on Bitstream processing control"/>
    <register addr="5600106c" rw_flags="RW" width="4" name="BT_RX_AUTO_START_TIME" comment="Automatically turn on the Rx Bitstream digital at this time when RX_AUTO_START_EN is set."/>
    <register addr="56001070" rw_flags="RW" width="2" name="BT_CONFIG_COEX" comment="BT Config Coex Masking "/>
    <register addr="56001074" rw_flags="RW" width="1" name="BT_SPEEDY_RST" comment="BT reset on Bitstream processing control"/>
    <register addr="56001078" rw_flags="RW" width="4" name="BT_SPEEDY_S_MON_CTRL" comment="BT Speedy Slave Monitor Ctrl"/>
    <register addr="5600107c" rw_flags="RW" width="4" name="BT_SPEEDY_M_MON_CTRL" comment="BT Speedy Master Monitor Ctrl"/>
    <register addr="56001080" rw_flags="R" width="4" name="BT_SPEEDY_MON_STATUS" comment="BT Speedy Monitor Status"/>
    <register addr="56001084" rw_flags="R" width="1" name="BT_SPEEDY_INT_STATUS" comment="BT Speedy Monitor Status"/>
    <register addr="56001088" rw_flags="RW" width="2" name="BT_BUF_CTRL" comment="BT Axi Buffer Ctrl"/>
    <register addr="5600108c" rw_flags="R" width="4" name="BT_BUF_STATUS" comment="BT Axi Buffer Status"/>
    <register addr="56001090" rw_flags="R" width="4" name="BT_BUF_STATUS2" comment="BT Axi Buffer Status bits"/>
    <register addr="56001094" rw_flags="RW" width="1" name="BT_TX_LINK_TYPE" comment=""/>
    <register addr="56001098" rw_flags="RW" width="1" name="BT_TX_CORRUPT_CRC" comment="Corrupt transmitted CRC by inverting for BLE/BDR/EDR"/>
    <register addr="5600109c" rw_flags="R" width="2" name="BT_TX_CRC" comment="Transmitted BR/EDR CRC"/>
    <register addr="560010a0" rw_flags="RW" width="2" name="BT_TX_PACKET_HEADER" comment="Bluetooth packet header data."/>
    <register addr="560010a4" rw_flags="RW" width="2" name="BT_TX_PAYLOAD_HEADER" comment="Bluetooth payload header data."/>
    <register addr="560010a8" rw_flags="RW" width="2" name="BT_TX_PAYLOAD_LENGTH" comment="Bluetooth payload length, used by the state machine to seperate from payload_header field changes"/>
    <register addr="560010ac" rw_flags="RW" width="4" name="BT_TX_VOICE_BUFFER" comment="Buffer Handle for voice data"/>
    <register addr="560010b0" rw_flags="RW" width="4" name="BT_TX_DATA_BUFFER" comment="Buffer Handle for data"/>
    <register addr="560010b4" rw_flags="RW" width="4" name="BT_TX_PACKET_CONFIG1" comment=""/>
    <register addr="560010b8" rw_flags="RW" width="4" name="BT_TX_WBREE_SUPP" comment="Supplemental field for AoA Data packets."/>
    <register addr="560010bc" rw_flags="RW" width="2" name="BT_TX_WBREE_EXT_HEADER" comment="Advertising extensions field and supplemental field for Data packets."/>
    <register addr="560010c0" rw_flags="RW" width="2" name="BT_TX_ESCO_NUM_VOICE_BYTES" comment=""/>
    <register addr="560010c4" rw_flags="R" width="1" name="BT_TX_STATE" comment=""/>
    <register addr="560010c8" rw_flags="R" width="1" name="BT_TX_EVENT_TYPE" comment="Status of last transmitted packet"/>
    <register addr="560010cc" rw_flags="R" width="1" name="BT_TX_EVENT_TYPE_BIT" comment="Latch of Status/Errors of last transmitted packet - each bit corresponds to event type value"/>
    <register addr="560010d0" rw_flags="R" width="4" name="BT_TX_STATE_STATUS_BIT" comment="Latch of TX State Status - each bit corresponds to state we've transitioned through"/>
    <register addr="560010d4" rw_flags="RW" width="4" name="BT_TX_WBREE_ACCESS_ADDR" comment="Wibree transmit sync word"/>
    <register addr="560010d8" rw_flags="RW" width="2" name="BT_TX_WBREE_HDR_DATA" comment="Wibree tranamit header - this is what is sent on air"/>
    <register addr="560010dc" rw_flags="RW" width="1" name="BT_TX_WBREE_LENGTH" comment="Seoerate the length field (use for ctrl), in case field moves"/>
    <register addr="560010e0" rw_flags="RW" width="4" name="BT_TX_WBREE_AD_ADDR_LSW" comment="Wibree Advertiser address - transmitted by master in an advertising packet LSW"/>
    <register addr="560010e4" rw_flags="RW" width="2" name="BT_TX_WBREE_AD_ADDR_MSW" comment="Wibree Advertiser address - transmitted by master in an advertising packet MSW"/>
    <register addr="560010e8" rw_flags="RW" width="4" name="BT_TX_WBREE_CRC_SEED" comment="Seed value for Wibree CRC and ICV checksum"/>
    <register addr="560010ec" rw_flags="RW" width="4" name="BT_TX_WBREE_BUFFER" comment="Buffer handle for Wibree data"/>
    <register addr="560010f0" rw_flags="R" width="4" name="BT_TX_WBREE_CRC" comment="Transmitted Wibree CRC/ICV"/>
    <register addr="560010f4" rw_flags="RW" width="1" name="BT_TX_ANTPLUS_LENGTH" comment="Length of ANT+ frame to transmit in bytes (including access code, etc.). For example, a standard fixed frame length should be 18."/>
    <register addr="560010f8" rw_flags="RW" width="2" name="BT_TX_LLR_CONFIG" comment="Transmit LLR config : "/>
    <register addr="560010fc" rw_flags="RW" width="2" name="BT_TX_LLR_REPETTIONS" comment="Number of times to repeat the LLR Trigger code"/>
    <register addr="56001100" rw_flags="RW" width="4" name="BT_TX_WBREE_HDR_ADV_MASK" comment="Wibree transmit common adv extended header decoding masks"/>
    <register addr="56001104" rw_flags="RW" width="4" name="BT_TX_WBREE_HDR_ADV_TYPE_DECODE" comment="Wibree transmit common adv extended header type values"/>
    <register addr="56001108" rw_flags="RW" width="1" name="BT_TX_WAIT_FOR_RFIC_DONE" comment="Wait for the TxDone acknowledgement to come back from the RFIC before firing the end of packet interrupt"/>
    <register addr="5600110c" rw_flags="RW" width="4" name="BT_TX_DATA_FETCH" comment="BT Config Data Fetch for TX on Bitstream processing control"/>
    <register addr="56001110" rw_flags="RW" width="1" name="BT_RX_MEMBER_ADDRESS" comment="Receive member address"/>
    <register addr="56001114" rw_flags="RW" width="2" name="BT_RX_LINK_TYPE" comment="Bluetooth link type"/>
    <register addr="56001118" rw_flags="RW" width="4" name="BT_RX_FHS_BUFFER" comment="MMU FHS buffer handle"/>
    <register addr="5600111c" rw_flags="RW" width="4" name="BT_RX_LMP_BUFFER" comment="MMU LMP  buffer handle"/>
    <register addr="56001120" rw_flags="RW" width="4" name="BT_RX_VOICE_BUFFER" comment="MMU Voice buffer handle"/>
    <register addr="56001124" rw_flags="RW" width="4" name="BT_RX_DATA_BUFFER" comment="MMU Data buffer handle"/>
    <register addr="56001128" rw_flags="RW" width="2" name="BT_RX_FHS_BUF_SIZE" comment="MMU FHS buffer size  "/>
    <register addr="5600112c" rw_flags="RW" width="2" name="BT_RX_LMP_BUF_SIZE" comment="MMU LMP buffer size  "/>
    <register addr="56001130" rw_flags="RW" width="2" name="BT_RX_VOICE_BUF_SIZE" comment="MMU Voice buffer size"/>
    <register addr="56001134" rw_flags="RW" width="2" name="BT_RX_DATA_BUF_SIZE" comment="MMU Data buffer size"/>
    <register addr="56001138" rw_flags="RW" width="4" name="BT_RX_CONFIG" comment=""/>
    <register addr="5600113c" rw_flags="RW" width="4" name="BT_RX_PACKET_CONFIG1" comment="Receive packet configuration - part1"/>
    <register addr="56001140" rw_flags="RW" width="2" name="BT_RX_ESCO_NUM_VOICE_BYTES" comment=""/>
    <register addr="56001144" rw_flags="RW" width="1" name="BT_RX_MR_DEBUG_CONFIG" comment="Enable EDR debug - non zero"/>
    <register addr="56001148" rw_flags="R" width="1" name="BT_RX_STATE" comment="Debug register - current state of rx_control"/>
    <register addr="5600114c" rw_flags="R" width="1" name="BT_RX_FEC_NUM_CORR_HEADER_ERRORS" comment="FEC correctable header error count"/>
    <register addr="56001150" rw_flags="R" width="2" name="BT_RX_PACKET_HEADER" comment="Received packet header"/>
    <register addr="56001154" rw_flags="R" width="2" name="BT_RX_PAYLOAD_HEADER" comment="Received payload header"/>
    <register addr="56001158" rw_flags="RW" width="1" name="BT_RX_PAYLOAD_LENGTH_FIELD" comment="ctrl to determine length field in received payload header, Reset to standard payload header length field being bits 12:3"/>
    <register addr="5600115c" rw_flags="R" width="2" name="BT_RX_PAYLOAD_NUM_VOICE_BYTES" comment="Number of voice bytes received"/>
    <register addr="56001160" rw_flags="R" width="2" name="BT_RX_PAYLOAD_NUM_DATA_BYTES" comment="Number of data bytes received"/>
    <register addr="56001164" rw_flags="R" width="1" name="BT_RX_FEC_NUM_CORR_ERRORS" comment="FEC correctable error count"/>
    <register addr="56001168" rw_flags="R" width="1" name="BT_RX_FEC_NUM_UNCORR_ERRORS" comment="FEC un-correctable error count"/>
    <register addr="5600116c" rw_flags="W" width="1" name="BT_RX_EVENT_CLEAR" comment="Write to clear receive event and interrupt without disabling the RX - Write sensitive"/>
    <register addr="56001170" rw_flags="R" width="1" name="BT_RX_EVENT_TYPE" comment="Received event type"/>
    <register addr="56001174" rw_flags="R" width="4" name="BT_RX_EVENT_TYPE_BIT" comment="Received event type - Latch of bits for each error/event type"/>
    <register addr="56001178" rw_flags="R" width="4" name="BT_RX_STATE_STATUS_BIT" comment="Latch of RX State Status - each bit corresponds to state we've transitioned through"/>
    <register addr="5600117c" rw_flags="R" width="4" name="BT_RX_WBREE_HDR_DATA" comment="Wibree received header"/>
    <register addr="56001180" rw_flags="RW" width="2" name="BT_RX_WBREE_HDR_STP" comment="Wibree received header SP field decoding"/>
    <register addr="56001184" rw_flags="RW" width="4" name="BT_RX_WBREE_HDR_ADV_MASK" comment="Wibree received common adv extended header decoding masks"/>
    <register addr="56001188" rw_flags="RW" width="4" name="BT_RX_WBREE_HDR_ADV_TYPE_DECODE" comment="Wibree received common adv extended header type values"/>
    <register addr="5600118c" rw_flags="RW" width="1" name="BT_RX_WBREE_LENGTH_FIELD" comment="ctrl to determine where to look for length field in received payload header, Reset to standard payload header length field being bits 8:0"/>
    <register addr="56001190" rw_flags="R" width="1" name="BT_RX_WBREE_SUPP_DATA" comment="Wibree received SuppInfo"/>
    <register addr="56001194" rw_flags="R" width="4" name="BT_RX_WBREE_AD_ADDR_LSW" comment="Received Advertiser address - applicable to adverting packets only LSW"/>
    <register addr="56001198" rw_flags="R" width="2" name="BT_RX_WBREE_AD_ADDR_MSW" comment="Received Advertiser address - applicable to adverting packets only MSW"/>
    <register addr="5600119c" rw_flags="RW" width="4" name="BT_RX_WBREE_CRC_SEED" comment="Wibree CRC seed"/>
    <register addr="560011a0" rw_flags="RW" width="4" name="BT_RX_WBREE_BUFFER" comment="Wibree receive buffer handle"/>
    <register addr="560011a4" rw_flags="RW" width="2" name="BT_RX_WBREE_BUF_SIZE" comment="Wibree receive buffer size"/>
    <register addr="560011a8" rw_flags="RW" width="4" name="BT_RX_WBREE_SUPP_BUFFER" comment="Wibree receive Supplemental buffer handle"/>
    <register addr="560011ac" rw_flags="RW" width="4" name="BT41_ZL_NONCE_CFG" comment="Set zero flag on Rcv Nonce for zero length packets received with following types:"/>
    <register addr="560011b0" rw_flags="R" width="4" name="AES_CCM_DATA" comment="Received encrypted MIC"/>
    <register addr="560011b4" rw_flags="R" width="4" name="AES_EXP_CCM_DATA" comment="Expected encrypted MIC"/>
    <register addr="560011b8" rw_flags="RW" width="1" name="BT41_SNIFF_MODE" comment="Prevent decryption of incoming data stream"/>
    <register addr="560011bc" rw_flags="RW" width="1" name="BT_RX_ANTPLUS_LENGTH" comment="ANT plus packet length (for receive state machine)"/>
    <register addr="560011c0" rw_flags="RW" width="1" name="BT_RX_WAIT_FOR_RFIC_DONE" comment="Wait for the RxDone acknowledgement to come back from the RFIC before firing the end of packet interrupt"/>
    <register addr="560011c4" rw_flags="RW" width="1" name="BT_RX_DISABLE_RF_PAYLOAD_MSG" comment="Option to allow the disabling of the payload length being sent for MLSE/MLE"/>
    <register addr="560011c8" rw_flags="RW" width="1" name="BT_RX_BDR_SYNC_INT_EN" comment="Enable generation of interrupt on BDR Sync"/>
    <register addr="560011cc" rw_flags="RW" width="1" name="BT_RX_MLE_ACL_PAYLOAD_DELAY" comment="Number of clock cycles to delay sending the ACL payload to the RFIC. This is used to correct a potential timing issue (see SB-17048)"/>
    <register addr="560011d0" rw_flags="RW" width="4" name="BT_TXRX_MASTER_CLOCK" comment="Master clock seed for BT encryption LSFR"/>
    <register addr="560011d4" rw_flags="RW" width="4" name="BT_TXRX_MASTER_ADDRESS_LSW" comment="Master address seed for BT encryption LSFR"/>
    <register addr="560011d8" rw_flags="RW" width="2" name="BT_TXRX_MASTER_ADDRESS_MSW" comment="Master address seed for BT encryption LSFR"/>
    <register addr="560011dc" rw_flags="RW" width="4" name="BT_TXRX_ACCESS_CODE_LAP" comment="Lower 24 bits of BT address to generate access code"/>
    <register addr="560011e0" rw_flags="RW" width="1" name="BT_TXRX_WHITEN_ACTIVE" comment="Enable data whitening"/>
    <register addr="560011e4" rw_flags="RW" width="1" name="BT_TXRX_WHITEN_SEED" comment="Whitener seed for BT and Wibree packets"/>
    <register addr="560011e8" rw_flags="RW" width="1" name="BT_TXRX_ENCRYPT_ACTIVE" comment="Enable BT encryption"/>
    <register addr="560011ec" rw_flags="RW" width="4" name="BT_TXRX_ENCRYPT_KEY[0]" comment="BT encryption key"/>
    <register addr="560011f0" rw_flags="RW" width="4" name="BT_TXRX_ENCRYPT_KEY[1]" comment="BT encryption key"/>
    <register addr="560011f4" rw_flags="RW" width="4" name="BT_TXRX_ENCRYPT_KEY[2]" comment="BT encryption key"/>
    <register addr="560011f8" rw_flags="RW" width="4" name="BT_TXRX_ENCRYPT_KEY[3]" comment="BT encryption key"/>
    <register addr="560011fc" rw_flags="RW" width="1" name="BT_TXRX_HEC_CRC_SEED" comment="Transmit and receive Header Error CRC seed"/>
    <register addr="56001200" rw_flags="RW" width="1" name="BT_TXRX_AES_DBG_ADDR" comment="Select data to be read in AES_DBG_DATA"/>
    <register addr="56001204" rw_flags="R" width="2" name="BT_TXRX_AES_DBG_DATA" comment="P  and  K debug data"/>
    <register addr="56001208" rw_flags="RW" width="4" name="BT_TXRX_AES_KEY[0]" comment="AES key"/>
    <register addr="5600120c" rw_flags="RW" width="4" name="BT_TXRX_AES_KEY[1]" comment="AES key"/>
    <register addr="56001210" rw_flags="RW" width="4" name="BT_TXRX_AES_KEY[2]" comment="AES key"/>
    <register addr="56001214" rw_flags="RW" width="4" name="BT_TXRX_AES_KEY[3]" comment="AES key"/>
    <register addr="56001218" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE[0]" comment="AES Nonce to be encrypted"/>
    <register addr="5600121c" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE[1]" comment="AES Nonce to be encrypted"/>
    <register addr="56001220" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE[2]" comment="AES Nonce to be encrypted"/>
    <register addr="56001224" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE[3]" comment="AES Nonce to be encrypted"/>
    <register addr="56001228" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE[4]" comment="AES Nonce to be encrypted"/>
    <register addr="5600122c" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE[5]" comment="AES Nonce to be encrypted"/>
    <register addr="56001230" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE[6]" comment="AES Nonce to be encrypted"/>
    <register addr="56001234" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE[7]" comment="AES Nonce to be encrypted"/>
    <register addr="56001238" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE[8]" comment="AES Nonce to be encrypted"/>
    <register addr="5600123c" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE[9]" comment="AES Nonce to be encrypted"/>
    <register addr="56001240" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE[10]" comment="AES Nonce to be encrypted"/>
    <register addr="56001244" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE[11]" comment="AES Nonce to be encrypted"/>
    <register addr="56001248" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE[12]" comment="AES Nonce to be encrypted"/>
    <register addr="5600124c" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE2[0]" comment="AES Additional Nonce to be encrypted"/>
    <register addr="56001250" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE2[1]" comment="AES Additional Nonce to be encrypted"/>
    <register addr="56001254" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE2[2]" comment="AES Additional Nonce to be encrypted"/>
    <register addr="56001258" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE2[3]" comment="AES Additional Nonce to be encrypted"/>
    <register addr="5600125c" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE2[4]" comment="AES Additional Nonce to be encrypted"/>
    <register addr="56001260" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE2[5]" comment="AES Additional Nonce to be encrypted"/>
    <register addr="56001264" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE2[6]" comment="AES Additional Nonce to be encrypted"/>
    <register addr="56001268" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE2[7]" comment="AES Additional Nonce to be encrypted"/>
    <register addr="5600126c" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE2[8]" comment="AES Additional Nonce to be encrypted"/>
    <register addr="56001270" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE2[9]" comment="AES Additional Nonce to be encrypted"/>
    <register addr="56001274" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE2[10]" comment="AES Additional Nonce to be encrypted"/>
    <register addr="56001278" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE2[11]" comment="AES Additional Nonce to be encrypted"/>
    <register addr="5600127c" rw_flags="RW" width="1" name="BT_TXRX_AES_NONCE2[12]" comment="AES Additional Nonce to be encrypted"/>
    <register addr="56001280" rw_flags="RW" width="2" name="BT_TXRX_AES_CCM_HDR_EN1" comment="Select which bits of header make up B0 key for AES-CCM"/>
    <register addr="56001284" rw_flags="RW" width="2" name="BT_TXRX_AES_CCM_HDR_EN2" comment="Select which bits of header make up B0 key for AES-CCM"/>
    <register addr="56001288" rw_flags="RW" width="1" name="BT_TXRX_AES_CCM_FLAG_B0" comment="Aes-Ccm B0 flag"/>
    <register addr="5600128c" rw_flags="RW" width="1" name="BT_TXRX_AES_CCM_FLAG_C0" comment="Aes-Ccm C0 flag"/>
    <register addr="56001290" rw_flags="RW" width="2" name="BT_TXRX_AES_CONFIG" comment="AES config CMM select / Nonce Select"/>
    <register addr="56001294" rw_flags="RW" width="4" name="BT_TXRX_STANDALONE_AES_KEY[0]" comment="AES key for standalone engine"/>
    <register addr="56001298" rw_flags="RW" width="4" name="BT_TXRX_STANDALONE_AES_KEY[1]" comment="AES key for standalone engine"/>
    <register addr="5600129c" rw_flags="RW" width="4" name="BT_TXRX_STANDALONE_AES_KEY[2]" comment="AES key for standalone engine"/>
    <register addr="560012a0" rw_flags="RW" width="4" name="BT_TXRX_STANDALONE_AES_KEY[3]" comment="AES key for standalone engine"/>
    <register addr="560012a4" rw_flags="RW" width="4" name="BT_TXRX_STANDALONE_AES_PLAINTEXT[0]" comment="Plaintext for standalone AES engine"/>
    <register addr="560012a8" rw_flags="RW" width="4" name="BT_TXRX_STANDALONE_AES_PLAINTEXT[1]" comment="Plaintext for standalone AES engine"/>
    <register addr="560012ac" rw_flags="RW" width="4" name="BT_TXRX_STANDALONE_AES_PLAINTEXT[2]" comment="Plaintext for standalone AES engine"/>
    <register addr="560012b0" rw_flags="RW" width="4" name="BT_TXRX_STANDALONE_AES_PLAINTEXT[3]" comment="Plaintext for standalone AES engine"/>
    <register addr="560012b4" rw_flags="R" width="4" name="BT_TXRX_STANDALONE_AES_CRYPTTEXT[0]" comment="Enciphered text for standalone AES engine"/>
    <register addr="560012b8" rw_flags="R" width="4" name="BT_TXRX_STANDALONE_AES_CRYPTTEXT[1]" comment="Enciphered text for standalone AES engine"/>
    <register addr="560012bc" rw_flags="R" width="4" name="BT_TXRX_STANDALONE_AES_CRYPTTEXT[2]" comment="Enciphered text for standalone AES engine"/>
    <register addr="560012c0" rw_flags="R" width="4" name="BT_TXRX_STANDALONE_AES_CRYPTTEXT[3]" comment="Enciphered text for standalone AES engine"/>
    <register addr="560012c4" rw_flags="RW" width="2" name="BT_TXRX_STANDALONE_AES_CONTROL" comment="Write to start standalone AES engine"/>
    <register addr="560012c8" rw_flags="R" width="1" name="BT_TXRX_STANDALONE_AES_BUSY" comment="Indicates that the AES engine is currently busy. Goes high immediately when BT_TXRX_STANDALONE_AES_START is written. BT_TXRX_STANDALONE_AES_CRYPTTEXT is not valid until it goes low."/>
    <register addr="560012cc" rw_flags="W" width="4" name="BT_CVSD_OLD_STATE[0]" comment="Update the CVSD codec state 279:0"/>
    <register addr="560012d0" rw_flags="W" width="4" name="BT_CVSD_OLD_STATE[1]" comment="Update the CVSD codec state 279:0"/>
    <register addr="560012d4" rw_flags="W" width="4" name="BT_CVSD_OLD_STATE[2]" comment="Update the CVSD codec state 279:0"/>
    <register addr="560012d8" rw_flags="W" width="4" name="BT_CVSD_OLD_STATE[3]" comment="Update the CVSD codec state 279:0"/>
    <register addr="560012dc" rw_flags="W" width="4" name="BT_CVSD_OLD_STATE[4]" comment="Update the CVSD codec state 279:0"/>
    <register addr="560012e0" rw_flags="W" width="4" name="BT_CVSD_OLD_STATE[5]" comment="Update the CVSD codec state 279:0"/>
    <register addr="560012e4" rw_flags="W" width="4" name="BT_CVSD_OLD_STATE[6]" comment="Update the CVSD codec state 279:0"/>
    <register addr="560012e8" rw_flags="W" width="4" name="BT_CVSD_OLD_STATE[7]" comment="Update the CVSD codec state 279:0"/>
    <register addr="560012ec" rw_flags="W" width="4" name="BT_CVSD_OLD_STATE[8]" comment="Update the CVSD codec state 279:0"/>
    <register addr="560012f0" rw_flags="R" width="4" name="BT_CVSD_NEW_STATE[0]" comment="Current voice codec state bits 279:0 "/>
    <register addr="560012f4" rw_flags="R" width="4" name="BT_CVSD_NEW_STATE[1]" comment="Current voice codec state bits 279:0 "/>
    <register addr="560012f8" rw_flags="R" width="4" name="BT_CVSD_NEW_STATE[2]" comment="Current voice codec state bits 279:0 "/>
    <register addr="560012fc" rw_flags="R" width="4" name="BT_CVSD_NEW_STATE[3]" comment="Current voice codec state bits 279:0 "/>
    <register addr="56001300" rw_flags="R" width="4" name="BT_CVSD_NEW_STATE[4]" comment="Current voice codec state bits 279:0 "/>
    <register addr="56001304" rw_flags="R" width="4" name="BT_CVSD_NEW_STATE[5]" comment="Current voice codec state bits 279:0 "/>
    <register addr="56001308" rw_flags="R" width="4" name="BT_CVSD_NEW_STATE[6]" comment="Current voice codec state bits 279:0 "/>
    <register addr="5600130c" rw_flags="R" width="4" name="BT_CVSD_NEW_STATE[7]" comment="Current voice codec state bits 279:0 "/>
    <register addr="56001310" rw_flags="R" width="4" name="BT_CVSD_NEW_STATE[8]" comment="Current voice codec state bits 279:0 "/>
    <register addr="56001314" rw_flags="RW" width="2" name="BT_VOICE_SETTING" comment="SCO voice setting"/>
    <register addr="56001318" rw_flags="RW" width="1" name="BT_TXRX_HOP_SEQ_TYPE" comment="Configure HOP sequence type"/>
    <register addr="5600131c" rw_flags="RW" width="4" name="BT_TXRX_HOP_UAP_LAP" comment="Upper and Lower BT address to determine frequecy hopping sequence"/>
    <register addr="56001320" rw_flags="RW" width="4" name="BT_TXRX_HOP_CLOCK" comment="Master clock"/>
    <register addr="56001324" rw_flags="RW" width="1" name="BT_TXRX_HOP_Y1" comment="Y1 from BT specification,"/>
    <register addr="56001328" rw_flags="RW" width="1" name="BT_TXRX_HOP_K_SEL" comment="K from BT specification, 0: Koffset=24, 1: Koffset=8"/>
    <register addr="5600132c" rw_flags="RW" width="1" name="BT_TXRX_HOP_N" comment="Number of channels in adapted hop sequence"/>
    <register addr="56001330" rw_flags="RW" width="1" name="BT_TXRX_HOP_F" comment="Adapted Hop sequence mapping (F from BT specification)"/>
    <register addr="56001334" rw_flags="R" width="2" name="BT_TXRX_HOP_INDEX_PRE_MOD" comment="Index of required hop before final modulus"/>
    <register addr="56001338" rw_flags="R" width="1" name="BT_TXRX_HOP_INDEX" comment="Index of required hop (0 to 78 or 0 to 22)"/>
  </block>
  <block name="bt_bb_clkgen" comment="">
    <register addr="56000000" rw_flags="R" width="4" name="BT_CLKGEN_SYSTEM_TIME" comment="The current microsecond system time."/>
    <register addr="56000004" rw_flags="RW" width="4" name="BT_CLKGEN_ENABLES" comment="This register enables the core clocks on the chip. When a corresponding bit is set, the clock is enabled, regardless of any corresponding clock request"/>
    <register addr="56000008" rw_flags="RW" width="4" name="BT_AUDIO_CLOCK0" comment="Audio clock 0 configuration"/>
    <register addr="5600000c" rw_flags="RW" width="4" name="BT_AUDIO_CLOCK1" comment="Audio clock 1 configuration"/>
    <register addr="56000010" rw_flags="RW" width="2" name="BT_AUDIO_CLOCK_EN" comment="Audio clock En"/>
  </block>
  <block name="bt_speedy" comment="">
    <register addr="56002000" rw_flags="RW" width="4" name="BT_SPEEDY_ADDR_CTRL" comment="Address and control flags for a Speedy transaction. Write this register to create an APB cycle on the remote chip (set up the write data first for write cycles)"/>
    <register addr="56002004" rw_flags="RW" width="4" name="BT_SPEEDY_WRITE_DATA" comment="Data to write to APB over Speedy"/>
    <register addr="56002008" rw_flags="R" width="4" name="BT_SPEEDY_READ_DATA" comment="Data read back for APB over Speedy"/>
    <register addr="5600200c" rw_flags="R" width="1" name="BT_SPEEDY_APB_STATUS" comment="Status of the current APB cycle"/>
    <register addr="56002010" rw_flags="RW" width="1" name="BT_SPEEDY_ERROR_RECOVERY" comment="Write this register to clear a timeout or APB access error that has been triggered by an earlier cycle"/>
  </block>
  <block name="coex_bb" comment="">
    <register addr="56200000" rw_flags="RW" width="1" name="COEX_BB_DEBUG_SEL" comment=""/>
  </block>
  <block name="coex_bb_bt" comment="">
    <register addr="56210000" rw_flags="RW" width="1" name="COEX_BT_CFG" comment=""/>
    <register addr="56210004" rw_flags="RW" width="1" name="COEX_BT_DEBUG_SEL" comment=""/>
    <register addr="56210008" rw_flags="RW" width="1" name="COEX_BT_SW_IF_DEBUG_SEL" comment=""/>
    <register addr="5621000c" rw_flags="RW" width="1" name="COEX_BT_CDL_DEBUG_SEL" comment=""/>
    <register addr="56210010" rw_flags="RW" width="1" name="COEX_BT_SW_RESET" comment="Write a 1 to reset BT Coexistence digital on BBIC."/>
    <register addr="56210014" rw_flags="RW" width="1" name="COEX_BT_ALLOWED_ORIDE" comment="Software overrides for the WLAN/BT Coex radio enables. Forcing these bits on will allow BT/WLAN Tx/Rx activity to start. Shouldn't really be used!"/>
    <register addr="56210018" rw_flags="RW" width="4" name="COEX_BT_TX_COL[0]" comment=""/>
    <register addr="5621001c" rw_flags="RW" width="4" name="COEX_BT_TX_COL[1]" comment=""/>
    <register addr="56210020" rw_flags="RW" width="4" name="COEX_BT_RX_COL[0]" comment=""/>
    <register addr="56210024" rw_flags="RW" width="4" name="COEX_BT_RX_COL[1]" comment=""/>
    <register addr="56210028" rw_flags="RW" width="4" name="COEX_BT_ASTX" comment="BT ASTX configuration."/>
    <register addr="5621002c" rw_flags="RW" width="4" name="COEX_BT_ASTX1" comment="BT ASTX configuration."/>
    <register addr="56210030" rw_flags="RW" width="4" name="COEX_BT_ASTX_START_TIME" comment="BT ASTX Start Time (with respect to microsecond system time)."/>
    <register addr="56210034" rw_flags="RW" width="1" name="COEX_BT_ASTX_UPDATE" comment="BT ASTX control: Simply write a 1 to this register to refresh ASTX contents and advertise it, or write a 0 to invalidate ASTX."/>
    <register addr="56210038" rw_flags="R" width="1" name="COEX_BT_ASTX_STICKY_STATUS" comment="BT ASTX status register. Contents are cleared when a 1 is written to COEX_BT_ASTX_UPDATE."/>
    <register addr="5621003c" rw_flags="R" width="1" name="COEX_BT_ASTX_DEFER_COUNT" comment="BT ASTX defer counter. An accumulative count showing the number of times BT ASTX has been deferred."/>
    <register addr="56210040" rw_flags="RW" width="1" name="COEX_BT_ASTX_CLR_DEFER_COUNT" comment="BT ASTX defer count clear - write a 1 in order to clear COEX_BT_ASTX_DEFER_COUNT."/>
    <register addr="56210044" rw_flags="RW" width="4" name="COEX_BT_ASRX" comment="BT ASRX configuration."/>
    <register addr="56210048" rw_flags="RW" width="4" name="COEX_BT_ASRX1" comment="BT ASTX configuration."/>
    <register addr="5621004c" rw_flags="RW" width="4" name="COEX_BT_ASRX_START_TIME" comment="BT ASRX Start Time (with respect to microsecond system time)."/>
    <register addr="56210050" rw_flags="RW" width="1" name="COEX_BT_ASRX_UPDATE" comment="BT ASRX control: Simply write a 1 to this register to refresh ASRX contents and advertise it, or write a 0 to invalidate ASRX."/>
    <register addr="56210054" rw_flags="R" width="1" name="COEX_BT_ASRX_STICKY_STATUS" comment="BT ASRX status register. Contents are cleared when a 1 is written to COEX_BT_ASRX_UPDATE."/>
    <register addr="56210058" rw_flags="R" width="1" name="COEX_BT_ASRX_DEFER_COUNT" comment="BT ASRX defer counter. An accumulative count showing the number of times BT ASRX has been deferred."/>
    <register addr="5621005c" rw_flags="RW" width="1" name="COEX_BT_ASRX_CLR_DEFER_COUNT" comment="BT ASRX defer count clear - write a 1 in order to clear COEX_BT_ASRX_DEFER_COUNT."/>
  </block>
  <block name="coex_bb_wl_0" comment="">
    <register addr="56220000" rw_flags="RW" width="1" name="COEX_WL_CFG_I0" comment=""/>
    <register addr="56220004" rw_flags="RW" width="1" name="COEX_WL_DEBUG_SEL_I0" comment=""/>
    <register addr="56220008" rw_flags="RW" width="1" name="COEX_WL_MAC_IF_DEBUG_SEL_I0" comment=""/>
    <register addr="5622000c" rw_flags="RW" width="1" name="COEX_WL_SW_IF_DEBUG_SEL_I0" comment=""/>
    <register addr="56220010" rw_flags="RW" width="1" name="COEX_WL_CDL_DEBUG_SEL_I0" comment=""/>
    <register addr="56220014" rw_flags="RW" width="1" name="COEX_WL_SW_RESET_I0" comment="Set in order to force a software reset of the WL Coexistence digital."/>
    <register addr="56220018" rw_flags="RW" width="1" name="COEX_WL_ALLOWED_ORIDE_I0" comment="Software overrides for the WLAN/BT Coex radio enables. Forcing these bits on will allow BT/WLAN Tx/Rx activity to start. Shouldn't really be used!"/>
    <register addr="5622001c" rw_flags="RW" width="4" name="COEX_WL_TX_COL_I0" comment=""/>
    <register addr="56220020" rw_flags="RW" width="4" name="COEX_WL_RX_COL_I0" comment=""/>
    <register addr="56220024" rw_flags="RW" width="1" name="COEX_WL_DELAY_DEFERS_EN_I0" comment="When set to 1, the CDL defer is gated until the remote Activity Set is in progress."/>
    <register addr="56220028" rw_flags="RW" width="2" name="COEX_WL_TRAN_CTRL_CFG_I0" comment="Coexistence Transition Control configuration."/>
    <register addr="5622002c" rw_flags="RW" width="2" name="COEX_WL_FEC_CFG_I0[0]" comment="5G RF Switch Configurations"/>
    <register addr="56220030" rw_flags="RW" width="2" name="COEX_WL_FEC_CFG_I0[1]" comment="5G RF Switch Configurations"/>
    <register addr="56220034" rw_flags="RW" width="1" name="COEX_WL_TX_ACK_PRIORITY_I0" comment="The WLAN priority to use for transmitted Acks."/>
    <register addr="56220038" rw_flags="RW" width="1" name="COEX_WL_TX_DATA_DUR_OFFSET_I0" comment="An optional number of microseconds to add onto the duration of a transmitted Data frame. (should not be required)."/>
    <register addr="5622003c" rw_flags="RW" width="1" name="COEX_WL_TX_ACK_DUR_OFFSET_I0" comment="An optional number of microseconds to add onto the duration of a transmitted Ack (should not be required)."/>
    <register addr="56220040" rw_flags="RW" width="2" name="COEX_WL_TX_START_CHANNEL_I0" comment=""/>
    <register addr="56220044" rw_flags="RW" width="2" name="COEX_WL_TX_END_CHANNEL_I0" comment=""/>
    <register addr="56220048" rw_flags="RW" width="2" name="COEX_WL_TX_MISC_CFG_I0" comment="Misc WLAN Tx configuration."/>
    <register addr="5622004c" rw_flags="R" width="1" name="COEX_WL_TX_STICKY_STATUS_I0" comment="WLAN ASTX status register. Contents are cleared when the MAC Acc makes a new Tx request."/>
    <register addr="56220050" rw_flags="R" width="1" name="COEX_WL_TX_DEFER_COUNT_I0" comment="WLAN ASTX defer counter. An accumulative count showing the number of times WLAN ASTX has been deferred."/>
    <register addr="56220054" rw_flags="RW" width="1" name="COEX_WL_TX_CLR_DEFER_COUNT_I0" comment="WLAN ASTX defer count clear - write a 1 in order to clear COEX_WL_ASTX_DEFER_COUNT."/>
    <register addr="56220058" rw_flags="RW" width="2" name="COEX_WL_RX_LISTEN_DURATION_I0" comment="The advertised ASRX duration when WLAN is listening. ASRX is automatically updated when this time expires."/>
    <register addr="5622005c" rw_flags="RW" width="1" name="COEX_WL_RX_LISTEN_PRIORITY_I0" comment="The WLAN priority when WLAN is listening."/>
    <register addr="56220060" rw_flags="RW" width="1" name="COEX_WL_RX_PHYACT_PRIORITY_I0" comment="The WLAN priority when the PHY is actively receiving (but Rx is not confirmed by MAC Acc)."/>
    <register addr="56220064" rw_flags="RW" width="1" name="COEX_WL_RX_MAC_PRIORITY_I0" comment="The WLAN priority when MAC Acc confirms Rx."/>
    <register addr="56220068" rw_flags="RW" width="1" name="COEX_WL_RX_ACK_PRIORITY_I0" comment="The WLAN priority for Rx acknowledgements."/>
    <register addr="5622006c" rw_flags="RW" width="1" name="COEX_WL_RX_DATA_DUR_OFFSET_I0" comment="An optional number of microseconds to add onto the duration of a received Data frame. (should not be required)."/>
    <register addr="56220070" rw_flags="RW" width="1" name="COEX_WL_RX_ACK_DUR_OFFSET_I0" comment="An optional number of microseconds to add onto the duration of a received Ack. (should not be required)."/>
    <register addr="56220074" rw_flags="RW" width="1" name="COEX_WL_RX_MIN_ANT_SEL_I0" comment="Select minimum number of antenna(s) to use for Rx."/>
    <register addr="56220078" rw_flags="RW" width="2" name="COEX_WL_RX_START_CHANNEL_I0" comment=""/>
    <register addr="5622007c" rw_flags="RW" width="2" name="COEX_WL_RX_END_CHANNEL_I0" comment=""/>
    <register addr="56220080" rw_flags="RW" width="1" name="COEX_WL_RX_MISC_CFG_I0" comment="Misc WLAN Rx configuration"/>
    <register addr="56220084" rw_flags="R" width="1" name="COEX_WL_RX_STICKY_STATUS_I0" comment="WLAN ASRX status register. Contents are cleared when the MAC Acc makes a new Rx request."/>
    <register addr="56220088" rw_flags="R" width="1" name="COEX_WL_RX_DEFER_COUNT_I0" comment="WLAN ASRX defer counter. An accumulative count showing the number of times WLAN ASRX has been deferred."/>
    <register addr="5622008c" rw_flags="RW" width="1" name="COEX_WL_RX_CLR_DEFER_COUNT_I0" comment="WLAN ASRX defer count clear - write a 1 in order to clear COEX_WL_ASRX_DEFER_COUNT."/>
    <register addr="56220090" rw_flags="RW" width="4" name="COEX_WL_SW_ASTX_I0" comment="WLAN Software ASTX configuration."/>
    <register addr="56220094" rw_flags="RW" width="4" name="COEX_WL_SW_ASTX1_I0" comment="WLAN Software ASTX configuration."/>
    <register addr="56220098" rw_flags="RW" width="4" name="COEX_WL_SW_ASTX_START_TIME_I0" comment="WLAN Software ASTX Start Time (with respect to microsecond system time)."/>
    <register addr="5622009c" rw_flags="RW" width="1" name="COEX_WL_SW_ASTX_UPDATE_I0" comment="WLAN Software ASTX control: Simply write a 1 to this register to refresh ASTX contents and advertise it, or write a 0 to invalidate ASTX."/>
    <register addr="562200a0" rw_flags="R" width="1" name="COEX_WL_SW_ASTX_STICKY_STATUS_I0" comment="WLAN Software ASTX status register. Contents are cleared when a 1 is written to COEX_WL_SW_ASTX_UPDATE"/>
    <register addr="562200a4" rw_flags="R" width="1" name="COEX_WL_SW_ASTX_DEFER_COUNT_I0" comment="WLAN Software ASTX defer counter. An accumulative count showing the number of times WLAN Software ASTX has been deferred."/>
    <register addr="562200a8" rw_flags="RW" width="1" name="COEX_WL_SW_ASTX_CLR_DEFER_COUNT_I0" comment="WLAN Software ASTX defer count clear - write a 1 in order to clear COEX_WL_SW_ASTX_DEFER_COUNT"/>
    <register addr="562200ac" rw_flags="RW" width="4" name="COEX_WL_SW_ASRX_I0" comment="WLAN Software ASRX configuration."/>
    <register addr="562200b0" rw_flags="RW" width="4" name="COEX_WL_SW_ASRX1_I0" comment="WLAN Software ASRX configuration."/>
    <register addr="562200b4" rw_flags="RW" width="4" name="COEX_WL_SW_ASRX_START_TIME_I0" comment="WLAN Software ASRX Start Time (with respect to microsecond system time)."/>
    <register addr="562200b8" rw_flags="RW" width="1" name="COEX_WL_SW_ASRX_UPDATE_I0" comment="WLAN Software ASRX control: Simply write a 1 to this register to refresh ASRX contents and advertise it, or write a 0 to invalidate ASRX."/>
    <register addr="562200bc" rw_flags="R" width="1" name="COEX_WL_SW_ASRX_STICKY_STATUS_I0" comment="WLAN Software ASRX status register. Contents are cleared when a 1 is written to COEX_WL_SW_ASRX_UPDATE"/>
    <register addr="562200c0" rw_flags="R" width="1" name="COEX_WL_SW_ASRX_DEFER_COUNT_I0" comment="WLAN Software ASRX defer counter. An accumulative count showing the number of times WLAN Software ASRX has been deferred."/>
    <register addr="562200c4" rw_flags="RW" width="1" name="COEX_WL_SW_ASRX_CLR_DEFER_COUNT_I0" comment="WLAN Software ASRX defer count clear - write a 1 in order to clear COEX_WL_SW_ASRX_DEFER_COUNT"/>
  </block>
  <block name="coex_bb_wl_1" comment="">
    <register addr="56230000" rw_flags="RW" width="1" name="COEX_WL_CFG_I1" comment=""/>
    <register addr="56230004" rw_flags="RW" width="1" name="COEX_WL_DEBUG_SEL_I1" comment=""/>
    <register addr="56230008" rw_flags="RW" width="1" name="COEX_WL_MAC_IF_DEBUG_SEL_I1" comment=""/>
    <register addr="5623000c" rw_flags="RW" width="1" name="COEX_WL_SW_IF_DEBUG_SEL_I1" comment=""/>
    <register addr="56230010" rw_flags="RW" width="1" name="COEX_WL_CDL_DEBUG_SEL_I1" comment=""/>
    <register addr="56230014" rw_flags="RW" width="1" name="COEX_WL_SW_RESET_I1" comment="Set in order to force a software reset of the WL Coexistence digital."/>
    <register addr="56230018" rw_flags="RW" width="1" name="COEX_WL_ALLOWED_ORIDE_I1" comment="Software overrides for the WLAN/BT Coex radio enables. Forcing these bits on will allow BT/WLAN Tx/Rx activity to start. Shouldn't really be used!"/>
    <register addr="5623001c" rw_flags="RW" width="4" name="COEX_WL_TX_COL_I1" comment=""/>
    <register addr="56230020" rw_flags="RW" width="4" name="COEX_WL_RX_COL_I1" comment=""/>
    <register addr="56230024" rw_flags="RW" width="1" name="COEX_WL_DELAY_DEFERS_EN_I1" comment="When set to 1, the CDL defer is gated until the remote Activity Set is in progress."/>
    <register addr="56230028" rw_flags="RW" width="2" name="COEX_WL_TRAN_CTRL_CFG_I1" comment="Coexistence Transition Control configuration."/>
    <register addr="5623002c" rw_flags="RW" width="2" name="COEX_WL_FEC_CFG_I1[0]" comment="5G RF Switch Configurations"/>
    <register addr="56230030" rw_flags="RW" width="2" name="COEX_WL_FEC_CFG_I1[1]" comment="5G RF Switch Configurations"/>
    <register addr="56230034" rw_flags="RW" width="1" name="COEX_WL_TX_ACK_PRIORITY_I1" comment="The WLAN priority to use for transmitted Acks."/>
    <register addr="56230038" rw_flags="RW" width="1" name="COEX_WL_TX_DATA_DUR_OFFSET_I1" comment="An optional number of microseconds to add onto the duration of a transmitted Data frame. (should not be required)."/>
    <register addr="5623003c" rw_flags="RW" width="1" name="COEX_WL_TX_ACK_DUR_OFFSET_I1" comment="An optional number of microseconds to add onto the duration of a transmitted Ack (should not be required)."/>
    <register addr="56230040" rw_flags="RW" width="2" name="COEX_WL_TX_START_CHANNEL_I1" comment=""/>
    <register addr="56230044" rw_flags="RW" width="2" name="COEX_WL_TX_END_CHANNEL_I1" comment=""/>
    <register addr="56230048" rw_flags="RW" width="2" name="COEX_WL_TX_MISC_CFG_I1" comment="Misc WLAN Tx configuration."/>
    <register addr="5623004c" rw_flags="R" width="1" name="COEX_WL_TX_STICKY_STATUS_I1" comment="WLAN ASTX status register. Contents are cleared when the MAC Acc makes a new Tx request."/>
    <register addr="56230050" rw_flags="R" width="1" name="COEX_WL_TX_DEFER_COUNT_I1" comment="WLAN ASTX defer counter. An accumulative count showing the number of times WLAN ASTX has been deferred."/>
    <register addr="56230054" rw_flags="RW" width="1" name="COEX_WL_TX_CLR_DEFER_COUNT_I1" comment="WLAN ASTX defer count clear - write a 1 in order to clear COEX_WL_ASTX_DEFER_COUNT."/>
    <register addr="56230058" rw_flags="RW" width="2" name="COEX_WL_RX_LISTEN_DURATION_I1" comment="The advertised ASRX duration when WLAN is listening. ASRX is automatically updated when this time expires."/>
    <register addr="5623005c" rw_flags="RW" width="1" name="COEX_WL_RX_LISTEN_PRIORITY_I1" comment="The WLAN priority when WLAN is listening."/>
    <register addr="56230060" rw_flags="RW" width="1" name="COEX_WL_RX_PHYACT_PRIORITY_I1" comment="The WLAN priority when the PHY is actively receiving (but Rx is not confirmed by MAC Acc)."/>
    <register addr="56230064" rw_flags="RW" width="1" name="COEX_WL_RX_MAC_PRIORITY_I1" comment="The WLAN priority when MAC Acc confirms Rx."/>
    <register addr="56230068" rw_flags="RW" width="1" name="COEX_WL_RX_ACK_PRIORITY_I1" comment="The WLAN priority for Rx acknowledgements."/>
    <register addr="5623006c" rw_flags="RW" width="1" name="COEX_WL_RX_DATA_DUR_OFFSET_I1" comment="An optional number of microseconds to add onto the duration of a received Data frame. (should not be required)."/>
    <register addr="56230070" rw_flags="RW" width="1" name="COEX_WL_RX_ACK_DUR_OFFSET_I1" comment="An optional number of microseconds to add onto the duration of a received Ack. (should not be required)."/>
    <register addr="56230074" rw_flags="RW" width="1" name="COEX_WL_RX_MIN_ANT_SEL_I1" comment="Select minimum number of antenna(s) to use for Rx."/>
    <register addr="56230078" rw_flags="RW" width="2" name="COEX_WL_RX_START_CHANNEL_I1" comment=""/>
    <register addr="5623007c" rw_flags="RW" width="2" name="COEX_WL_RX_END_CHANNEL_I1" comment=""/>
    <register addr="56230080" rw_flags="RW" width="1" name="COEX_WL_RX_MISC_CFG_I1" comment="Misc WLAN Rx configuration"/>
    <register addr="56230084" rw_flags="R" width="1" name="COEX_WL_RX_STICKY_STATUS_I1" comment="WLAN ASRX status register. Contents are cleared when the MAC Acc makes a new Rx request."/>
    <register addr="56230088" rw_flags="R" width="1" name="COEX_WL_RX_DEFER_COUNT_I1" comment="WLAN ASRX defer counter. An accumulative count showing the number of times WLAN ASRX has been deferred."/>
    <register addr="5623008c" rw_flags="RW" width="1" name="COEX_WL_RX_CLR_DEFER_COUNT_I1" comment="WLAN ASRX defer count clear - write a 1 in order to clear COEX_WL_ASRX_DEFER_COUNT."/>
    <register addr="56230090" rw_flags="RW" width="4" name="COEX_WL_SW_ASTX_I1" comment="WLAN Software ASTX configuration."/>
    <register addr="56230094" rw_flags="RW" width="4" name="COEX_WL_SW_ASTX1_I1" comment="WLAN Software ASTX configuration."/>
    <register addr="56230098" rw_flags="RW" width="4" name="COEX_WL_SW_ASTX_START_TIME_I1" comment="WLAN Software ASTX Start Time (with respect to microsecond system time)."/>
    <register addr="5623009c" rw_flags="RW" width="1" name="COEX_WL_SW_ASTX_UPDATE_I1" comment="WLAN Software ASTX control: Simply write a 1 to this register to refresh ASTX contents and advertise it, or write a 0 to invalidate ASTX."/>
    <register addr="562300a0" rw_flags="R" width="1" name="COEX_WL_SW_ASTX_STICKY_STATUS_I1" comment="WLAN Software ASTX status register. Contents are cleared when a 1 is written to COEX_WL_SW_ASTX_UPDATE"/>
    <register addr="562300a4" rw_flags="R" width="1" name="COEX_WL_SW_ASTX_DEFER_COUNT_I1" comment="WLAN Software ASTX defer counter. An accumulative count showing the number of times WLAN Software ASTX has been deferred."/>
    <register addr="562300a8" rw_flags="RW" width="1" name="COEX_WL_SW_ASTX_CLR_DEFER_COUNT_I1" comment="WLAN Software ASTX defer count clear - write a 1 in order to clear COEX_WL_SW_ASTX_DEFER_COUNT"/>
    <register addr="562300ac" rw_flags="RW" width="4" name="COEX_WL_SW_ASRX_I1" comment="WLAN Software ASRX configuration."/>
    <register addr="562300b0" rw_flags="RW" width="4" name="COEX_WL_SW_ASRX1_I1" comment="WLAN Software ASRX configuration."/>
    <register addr="562300b4" rw_flags="RW" width="4" name="COEX_WL_SW_ASRX_START_TIME_I1" comment="WLAN Software ASRX Start Time (with respect to microsecond system time)."/>
    <register addr="562300b8" rw_flags="RW" width="1" name="COEX_WL_SW_ASRX_UPDATE_I1" comment="WLAN Software ASRX control: Simply write a 1 to this register to refresh ASRX contents and advertise it, or write a 0 to invalidate ASRX."/>
    <register addr="562300bc" rw_flags="R" width="1" name="COEX_WL_SW_ASRX_STICKY_STATUS_I1" comment="WLAN Software ASRX status register. Contents are cleared when a 1 is written to COEX_WL_SW_ASRX_UPDATE"/>
    <register addr="562300c0" rw_flags="R" width="1" name="COEX_WL_SW_ASRX_DEFER_COUNT_I1" comment="WLAN Software ASRX defer counter. An accumulative count showing the number of times WLAN Software ASRX has been deferred."/>
    <register addr="562300c4" rw_flags="RW" width="1" name="COEX_WL_SW_ASRX_CLR_DEFER_COUNT_I1" comment="WLAN Software ASRX defer count clear - write a 1 in order to clear COEX_WL_SW_ASRX_DEFER_COUNT"/>
  </block>
  <block name="mif_axi_monitor" comment="">
    <register addr="51200000" rw_flags="RW" width="4" name="MIF_AXI_MON_MASTER_MASK[0]" comment="Bitfield indicating from which bus master(s) to count burst transactions. If multiple bits are set then multiple masters will be counted."/>
    <register addr="51200004" rw_flags="RW" width="4" name="MIF_AXI_MON_MASTER_MASK[1]" comment="Bitfield indicating from which bus master(s) to count burst transactions. If multiple bits are set then multiple masters will be counted."/>
    <register addr="51200008" rw_flags="RW" width="4" name="MIF_AXI_MON_MASTER_MASK[2]" comment="Bitfield indicating from which bus master(s) to count burst transactions. If multiple bits are set then multiple masters will be counted."/>
    <register addr="5120000c" rw_flags="RW" width="4" name="MIF_AXI_MON_MASTER_MASK[3]" comment="Bitfield indicating from which bus master(s) to count burst transactions. If multiple bits are set then multiple masters will be counted."/>
    <register addr="51200010" rw_flags="RW" width="4" name="MIF_AXI_MON_MASTER_MASK[4]" comment="Bitfield indicating from which bus master(s) to count burst transactions. If multiple bits are set then multiple masters will be counted."/>
    <register addr="51200014" rw_flags="RW" width="4" name="MIF_AXI_MON_MASTER_MASK[5]" comment="Bitfield indicating from which bus master(s) to count burst transactions. If multiple bits are set then multiple masters will be counted."/>
    <register addr="51200018" rw_flags="RW" width="4" name="MIF_AXI_MON_MASTER_MASK[6]" comment="Bitfield indicating from which bus master(s) to count burst transactions. If multiple bits are set then multiple masters will be counted."/>
    <register addr="5120001c" rw_flags="RW" width="4" name="MIF_AXI_MON_MASTER_MASK[7]" comment="Bitfield indicating from which bus master(s) to count burst transactions. If multiple bits are set then multiple masters will be counted."/>
    <register addr="51200020" rw_flags="R" width="4" name="MIF_AXI_MON_READ_BURST_COUNT" comment="Count of the number of read burst transactions on the AXI read channel."/>
    <register addr="51200024" rw_flags="R" width="4" name="MIF_AXI_MON_READ_BYTE_COUNT" comment="Count of the number of bytes transferred in the read burst transactions on the AXI read channel."/>
    <register addr="51200028" rw_flags="R" width="4" name="MIF_AXI_MON_WRITE_BURST_COUNT" comment="Count of the number of write burst transactions on the AXI read channel."/>
    <register addr="5120002c" rw_flags="R" width="4" name="MIF_AXI_MON_WRITE_BYTE_COUNT" comment="Count of the number of bytes transferred in the write burst transactions on the AXI write channel."/>
  </block>
  <block name="mildred_sfr_core" comment="">
    <register addr="5200fe04" rw_flags="RW" width="1" name="MILDRED_SP" comment="Stack pointer"/>
    <register addr="5200fe08" rw_flags="RW" width="1" name="MILDRED_DPL" comment="Data pointer low byte"/>
    <register addr="5200fe0c" rw_flags="RW" width="1" name="MILDRED_DPH" comment="Data pointer high byte"/>
    <register addr="5200fe10" rw_flags="RW" width="1" name="MILDRED_CONTROL" comment="Control Mildred"/>
    <register addr="5200fe14" rw_flags="RW" width="1" name="MILDRED_SET_PC_LO" comment="Set Mildred's PC - lower half"/>
    <register addr="5200fe18" rw_flags="RW" width="1" name="MILDRED_SET_PC_HI" comment="Set Mildred's PC - upper half. Setting this register causes the update to occur if Mildred is stopped."/>
    <register addr="5200fe1c" rw_flags="RW" width="1" name="MILDRED_PCON" comment="Power control"/>
    <register addr="5200fe20" rw_flags="RW" width="1" name="MILDRED_TCON" comment="Timer control"/>
    <register addr="5200fe24" rw_flags="RW" width="1" name="MILDRED_TMOD" comment="Timer mode"/>
    <register addr="5200fe28" rw_flags="RW" width="1" name="MILDRED_TL0" comment="Timer low 0"/>
    <register addr="5200fe2c" rw_flags="RW" width="1" name="MILDRED_TL1" comment="Timer low 1"/>
    <register addr="5200fe30" rw_flags="RW" width="1" name="MILDRED_TH0" comment="Timer high 0"/>
    <register addr="5200fe34" rw_flags="RW" width="1" name="MILDRED_TH1" comment="Timer high 1"/>
    <register addr="5200fe60" rw_flags="RW" width="1" name="MILDRED_SCON" comment="Serial interface unit (SIU) control."/>
    <register addr="5200fe64" rw_flags="RW" width="1" name="MILDRED_SBUF" comment="Serial data buffer"/>
    <register addr="5200fe84" rw_flags="RW" width="1" name="MILDRED_TIMER_COUNTER_PRESCALE_INT" comment="Set the integer part of the timer/counter prescaler"/>
    <register addr="5200fe88" rw_flags="RW" width="1" name="MILDRED_TIMER_COUNTER_PRESCALE_FRAC" comment="Set the fractional part of the timer/counter prescaler"/>
    <register addr="5200fe94" rw_flags="R" width="1" name="MILDRED_PROGRAM_COUNTER_LO" comment="Register view of the Mildred program counter"/>
    <register addr="5200fe98" rw_flags="R" width="1" name="MILDRED_PROGRAM_COUNTER_HI" comment="Register view of the Mildred program counter"/>
    <register addr="5200fe9c" rw_flags="RW" width="1" name="MILDRED_READ_WRITE_INTERNAL_INT_STATE" comment="Clear Mildred's internal interrupt status flops. This is a bitfield register."/>
    <register addr="5200fea0" rw_flags="RW" width="1" name="MILDRED_IE" comment="Interrupt enable"/>
    <register addr="5200fee0" rw_flags="RW" width="1" name="MILDRED_IP" comment="Interrupt priority"/>
    <register addr="5200ff40" rw_flags="RW" width="1" name="MILDRED_PSW" comment="Program and status word"/>
    <register addr="5200ff80" rw_flags="RW" width="1" name="MILDRED_ACC" comment="Accumulator"/>
    <register addr="5200ff84" rw_flags="RW" width="1" name="MILDRED_SIU_SDIV" comment="Control the SDIV input to the serial interface unit"/>
    <register addr="5200ffc0" rw_flags="RW" width="1" name="MILDRED_B" comment="B register"/>
  </block>
  <block name="mildred_sfr_pmu" comment="">
    <register addr="5200fe00" rw_flags="RW" width="1" name="MILDRED_P0" comment="PIO 0-7 config/status"/>
    <register addr="5200fe38" rw_flags="RW" width="1" name="MILDRED_P0_RISING" comment="Reads bits 07:00 of the PIO rising edge capture register. When a PIO is high the matching bit is asynchronously set. If low, writing a 1 clears the bit."/>
    <register addr="5200fe3c" rw_flags="RW" width="1" name="MILDRED_P1_RISING" comment="Reads bits 15:08 of the PIO rising edge capture register. When a PIO is high the matching bit is asynchronously set. If low, writing a 1 clears the bit."/>
    <register addr="5200fe40" rw_flags="RW" width="1" name="MILDRED_P1" comment="PIO 8-15 config/status"/>
    <register addr="5200fe44" rw_flags="RW" width="1" name="RESET" comment="Resets for main MXL140 clock generator, WLBT toplevel"/>
    <register addr="5200fe48" rw_flags="RW" width="1" name="CLOCK_ENABLE" comment="Enables for main clock generator"/>
    <register addr="5200fe4c" rw_flags="RW" width="1" name="CLOCK_ENABLE2" comment="Enables for main clock generator"/>
    <register addr="5200fe50" rw_flags="RW" width="1" name="QREQ_OFF_OVR" comment="Q-channel request overrides"/>
    <register addr="5200fe54" rw_flags="R" width="1" name="RANDOM_NUMBER_15_08" comment="Random number."/>
    <register addr="5200fe58" rw_flags="R" width="1" name="RANDOM_NUMBER_07_00" comment="Random number."/>
    <register addr="5200fe5c" rw_flags="RW" width="1" name="PIO" comment="PIO Vdd Alive registers"/>
    <register addr="5200fe68" rw_flags="RW" width="1" name="WPLL_DSM_F_26_24" comment="PLL F controls"/>
    <register addr="5200fe6c" rw_flags="RW" width="1" name="WPLL_DSM_F_23_16" comment="PLL F controls"/>
    <register addr="5200fe70" rw_flags="RW" width="1" name="WPLL_DSM_F_15_08" comment="PLL F controls"/>
    <register addr="5200fe74" rw_flags="RW" width="1" name="WPLL_DSM_F_07_00" comment="PLL F controls"/>
    <register addr="5200fe78" rw_flags="RW" width="1" name="CLOCK_MUX_SEL" comment="Choose which clock to run the PMU on."/>
    <register addr="5200fe7c" rw_flags="RW" width="1" name="MILDRED_P0_FALLING" comment="Reads bits 07:00 of the PIO falling edge capture register. When a PIO is low the matching bit is asynchronously set. If high, writing a 1 clears the bit."/>
    <register addr="5200fe80" rw_flags="RW" width="1" name="MILDRED_RESOURCE_REQ" comment="Outgoing resource requests from WLBT to AP/CP."/>
    <register addr="5200fe8c" rw_flags="RW" width="1" name="MILDRED_TIMER_COUNTER_T0_MUX_SEL" comment="Choose the source for timer/counter 0. 0-15 = PIO[15:0]."/>
    <register addr="5200fe90" rw_flags="RW" width="1" name="MILDRED_TIMER_COUNTER_T1_MUX_SEL" comment="Choose the source for timer/counter 0. 0-15 = PIO[15:0]."/>
    <register addr="5200fea4" rw_flags="RW" width="1" name="CLOCK_MUX_CBUS_SEL" comment="Choose which clock to run the PMU on."/>
    <register addr="5200fea8" rw_flags="RW" width="1" name="CLK_GATE_OVR" comment="Clock Gate overrides"/>
    <register addr="5200feac" rw_flags="R" width="1" name="WPLL_STATUS" comment=""/>
    <register addr="5200feb0" rw_flags="RW" width="1" name="PCH_REQ" comment="PCH Power down request"/>
    <register addr="5200feb4" rw_flags="R" width="1" name="PCH_ACK" comment="PCH Power down acknoledge"/>
    <register addr="5200feb8" rw_flags="RW" width="1" name="MILDRED_IPC_IRQ" comment="Interprocessor communication interrupts "/>
    <register addr="5200febc" rw_flags="RW" width="1" name="MILDRED_EXT_RESET_REQUEST" comment="Requests and status out of WLBT"/>
    <register addr="5200fec0" rw_flags="R" width="1" name="MILDRED_RESOURCE_ACK" comment="Outgoing resource status/acknowledgement"/>
    <register addr="5200fec4" rw_flags="RW" width="1" name="SWEEPER_CONTROL" comment="Controls the DBUS Sweeper module in WLBT."/>
    <register addr="5200fec8" rw_flags="R" width="1" name="SWEEPER_STATUS" comment="Status from the PBUS Sweeper module in WLBT."/>
    <register addr="5200fecc" rw_flags="R" width="1" name="MILDRED_AP2WB_REQ" comment="Incoming requests from AP to WLBT."/>
    <register addr="5200fed0" rw_flags="RW" width="1" name="MILDRED_WB2AP_ACK" comment="Outgoing acknowledgement from WLBT to AP."/>
    <register addr="5200fed4" rw_flags="RW" width="1" name="MILDRED_P1_FALLING" comment="Reads bits 15:08 of the PIO falling edge capture register. When a PIO is low the matching bit is asynchronously set. If high, writing a 1 clears the bit."/>
    <register addr="5200fed8" rw_flags="RW" width="1" name="WATCHDOG_ENABLE" comment="Writing '1' enables the watchdog regardless of its previous state and resets its state machine to 0."/>
    <register addr="5200fedc" rw_flags="RW" width="1" name="WATCHDOG_DISABLE" comment=" NOTE VALUES CHANGED FOR MAXWELL Writing the 3 disable codes in sequence to this register will disable the watchdog. Writing WATCHDOG_DEBUG_CODE3 instead of WATCHDOG_DISABLE_CODE3 will set the watchdog into debug mode. Each correct code written will advance the WATCHDOG_STATUS by 1 until it reaches 3. A status of 3 indicates that the watchdog has been disabled A status of 4 indicates that the watchdog is in debug mode. If an incorrect code is written at any time, the status will revert to 0 (enabled). The watchdog will not stop counting down until all three codes have been written correctly."/>
    <register addr="5200fee4" rw_flags="RW" width="1" name="WATCHDOG_KICK" comment="Writing to this register causes the countdown value to be reset to the value stored in WATCHDOG_DELAY."/>
    <register addr="5200fee8" rw_flags="R" width="1" name="WATCHDOG_KICK_PENDING" comment="This indicates that WATCHDOG_KICK has been written to recently, but has not yet been transferred to the slow clock domain to reset the countdown value."/>
    <register addr="5200feec" rw_flags="R" width="1" name="WATCHDOG_SLOW_KICK_PENDING" comment="This indicates that the WATCHDOG_KICK has got as far as the slow clock domain, and the countdown reset will occur on the next slow clock edge."/>
    <register addr="5200fef0" rw_flags="R" width="1" name="WATCHDOG_STATUS" comment="This indicates the current status of the enable/disable state machine. The states are: 0 - Enabled; 1 - Disable1; 2 - Disable2; 3 - Disabled; 4 - Debug mode. The watchdog is not fully disabled until it is in state 3. In addition, bit 3 is set if the watchdog has fired in debug mode."/>
    <register addr="5200fef4" rw_flags="RW" width="1" name="MILDRED_INT_EN" comment="Interrupt enable."/>
    <register addr="5200fef8" rw_flags="RW" width="1" name="DRCG" comment="Dynamic Root Clock gating "/>
    <register addr="5200fefc" rw_flags="RW" width="1" name="MILDRED_INT_VECTOR_HI" comment="Interrupt vector top 8 bits."/>
    <register addr="5200ff00" rw_flags="RW" width="1" name="MILDRED_INT_STATUS" comment="Interrupt status. Write to clear."/>
    <register addr="5200ff04" rw_flags="RW" width="1" name="WPLL_CONTROLS_0" comment="PLL controls"/>
    <register addr="5200ff08" rw_flags="RW" width="1" name="WPLL_CONTROLS_1" comment="PLL controls"/>
    <register addr="5200ff0c" rw_flags="RW" width="1" name="WPLL_CONTROLS_2" comment="PLL controls"/>
    <register addr="5200ff10" rw_flags="RW" width="1" name="WPLL_CONTROLS_3" comment="PLL controls"/>
    <register addr="5200ff14" rw_flags="RW" width="1" name="WPLL_CONTROLS_4" comment="PLL controls"/>
    <register addr="5200ff18" rw_flags="RW" width="1" name="WPLL_CONTROLS_5" comment="PLL controls"/>
    <register addr="5200ff1c" rw_flags="RW" width="1" name="WPLL_CONTROLS_6" comment="PLL controls"/>
    <register addr="5200ff20" rw_flags="RW" width="1" name="MILDRED_INT_PRIORITIES" comment="Interrupt source priorities."/>
    <register addr="5200ff24" rw_flags="RW" width="1" name="WPLL_DSM_K_26_24" comment="PLL K controls"/>
    <register addr="5200ff28" rw_flags="RW" width="1" name="WPLL_DSM_K_23_16" comment="PLL K controls"/>
    <register addr="5200ff2c" rw_flags="RW" width="1" name="WPLL_DSM_K_15_08" comment="PLL K controls"/>
    <register addr="5200ff30" rw_flags="RW" width="1" name="WPLL_DSM_K_07_00" comment="PLL K controls"/>
    <register addr="5200ff34" rw_flags="RW" width="1" name="PD_CONTROL_WLAN" comment="Controls the state of switches, isolation and reset in WLAN power domain"/>
    <register addr="5200ff38" rw_flags="RW" width="1" name="PD_CONTROL_CORE" comment="Controls the state of switches, isolation and reset in CORE power domain"/>
    <register addr="5200ff3c" rw_flags="R" width="1" name="PD_STATUS" comment="Indicates the status of the switches in each power domain"/>
    <register addr="5200ff44" rw_flags="RW" width="1" name="WPLL_CONTROLS_7" comment="PLL controls"/>
    <register addr="5200ff48" rw_flags="RW" width="1" name="WPLL_CONTROLS_8" comment="PLL controls"/>
    <register addr="5200ff4c" rw_flags="RW" width="1" name="WPLL_CONTROLS_9" comment="PLL controls"/>
    <register addr="5200ff50" rw_flags="RW" width="1" name="WPLL_CONTROLS_10" comment="PLL controls"/>
    <register addr="5200ff54" rw_flags="RW" width="1" name="WPLL_CONTROLS_11" comment="PLL controls"/>
    <register addr="5200ff58" rw_flags="RW" width="1" name="MILDRED_P0_RISING_MASK" comment="Bits 07:00 of the PIO rising edge interrupt mask register. The contents of this register are ANDed with MILDRED_P0_RISING and if any bits are 1 an interrupt is raised."/>
    <register addr="5200ff5c" rw_flags="RW" width="1" name="MILDRED_P1_RISING_MASK" comment="Bits 15:08 of the PIO rising edge interrupt mask register. The contents of this register are ANDed with MILDRED_P1_RISING and if any bits are 1 an interrupt is raised."/>
    <register addr="5200ff60" rw_flags="RW" width="1" name="MILDRED_INT_SOURCES_EN" comment="Interrupt sources enable."/>
    <register addr="5200ff64" rw_flags="RW" width="1" name="MILDRED_P0_FALLING_MASK" comment="Bits 07:00 of the PIO falling edge interrupt mask register. The contents of this register are ANDed with MILDRED_P0_FALLING and if any bits are 1 an interrupt is raised."/>
    <register addr="5200ff68" rw_flags="RW" width="1" name="MILDRED_P1_FALLING_MASK" comment="Bits 15:08 of the PIO falling edge interrupt mask register. The contents of this register are ANDed with MILDRED_P1_FALLING and if any bits are 1 an interrupt is raised."/>
    <register addr="5200ff6c" rw_flags="R" width="1" name="SLOW_CLK_TIMER_STATUS_31_24" comment="This read-only register is 32-bit a free-running slow clock counter"/>
    <register addr="5200ff70" rw_flags="R" width="1" name="SLOW_CLK_TIMER_STATUS_23_16" comment="This read-only register is 32-bit a free-running slow clock counter"/>
    <register addr="5200ff74" rw_flags="R" width="1" name="SLOW_CLK_TIMER_STATUS_15_08" comment="This read-only register is 32-bit a free-running slow clock counter"/>
    <register addr="5200ff78" rw_flags="R" width="1" name="SLOW_CLK_TIMER_STATUS_07_00" comment="This read-only register is 32-bit a free-running slow clock counter"/>
    <register addr="5200ff7c" rw_flags="RW" width="1" name="WPLL_CONTROLS_12" comment="PLL controls"/>
    <register addr="5200ff8c" rw_flags="RW" width="1" name="WATCHDOG_DELAY_31_24" comment="This is the reset value for the watchdog countdown. The reset value is 0xFFFF which allows a countdown period of 2 seconds. The maximum value of 0xFFFFFFFF allows for a sleep time of around 37 hours"/>
    <register addr="5200ff90" rw_flags="RW" width="1" name="WATCHDOG_DELAY_23_16" comment="This is the reset value for the watchdog countdown. The reset value is 0xFFFF which allows a countdown period of 2 seconds. The maximum value of 0xFFFFFFFF allows for a sleep time of around 37 hours"/>
    <register addr="5200ff94" rw_flags="RW" width="1" name="WATCHDOG_DELAY_15_08" comment="This is the reset value for the watchdog countdown. The reset value is 0xFFFF which allows a countdown period of 2 seconds. The maximum value of 0xFFFFFFFF allows for a sleep time of around 37 hours"/>
    <register addr="5200ff98" rw_flags="RW" width="1" name="WATCHDOG_DELAY_07_00" comment="This is the reset value for the watchdog countdown. The reset value is 0xFFFF which allows a countdown period of 2 seconds. The maximum value of 0xFFFFFFFF allows for a sleep time of around 37 hours"/>
    <register addr="5200ff9c" rw_flags="RW" width="1" name="WPLL_CONTROLS_13" comment="PLL controls"/>
    <register addr="5200ffa0" rw_flags="RW" width="1" name="MILDRED_PIO_0700_DRIVE_ENABLE" comment="Bits [ 7: 0] of PIO drive enable bus. These 8 PIO drive enable bits are bit-addressable to allow convenient switching for use with e.g. I2C."/>
    <register addr="5200ffa4" rw_flags="RW" width="1" name="DEEP_SLEEP_PIO_0700_WAKEUP_ENABLES" comment="This register enables the PIO[7:0] inputs individually to allow them to create a deep sleep wakeup event."/>
    <register addr="5200ffa8" rw_flags="RW" width="1" name="DEEP_SLEEP_PIO_0700_WAKEUP_INVERT" comment="This register inverts the PIO[7:0] inputs individually before feeding them into the deep sleep wakeup logic. A 1 on the resulting bit may cause a wakeup event."/>
    <register addr="5200ffac" rw_flags="R" width="1" name="DEEP_SLEEP_STATUS_PIO_0700_WAKEUP_STICKY" comment="This register returns a sticky version of the PIO[7:0] deep sleep wakeup activities. Clear the sticky activity flops by writing 1 to DEEP_SLEEP_WAKEUP_CLR_PIO."/>
    <register addr="5200ffb0" rw_flags="RW" width="1" name="DEEP_SLEEP_PIO_1508_WAKEUP_ENABLES" comment="This register enables the PIO[15:8] inputs individually to allow them to create a deep sleep wakeup event."/>
    <register addr="5200ffb4" rw_flags="RW" width="1" name="DEEP_SLEEP_PIO_1508_WAKEUP_INVERT" comment="This register inverts the PIO[15:8] inputs individually before feeding them into the deep sleep wakeup logic. A 1 on the resulting bit may cause a wakeup event."/>
    <register addr="5200ffb8" rw_flags="R" width="1" name="DEEP_SLEEP_STATUS_PIO_1508_WAKEUP_STICKY" comment="This register returns a sticky version of the PIO[15:8] deep sleep wakeup activities. Clear the sticky activity flops by writing 1 to DEEP_SLEEP_WAKEUP_CLR_PIO."/>
    <register addr="5200ffbc" rw_flags="RW" width="1" name="DEEP_SLEEP_CMD" comment="This register is used to trigger events in the sleep block"/>
    <register addr="5200ffc4" rw_flags="RW" width="1" name="DEEP_SLEEP_WAKEUP_ENABLES0" comment="This register controls the sources which can cause deep sleep wakeup. Functions are enabled by setting individual bits. Bits are enumerated  as DEEP_SLEEP_WAKEUP.  "/>
    <register addr="5200ffc8" rw_flags="R" width="1" name="DEEP_SLEEP_STATUS0" comment="This register indicates the currently-active deep sleep wakeup sources."/>
    <register addr="5200ffcc" rw_flags="R" width="1" name="DEEP_SLEEP_STATUS_STICKY0" comment="This register returns a sticky version of DEEP_SLEEP_STATUS, recording all wakeup events since it was last cleared. Bits are enumerated  as DEEP_SLEEP_WAKEUP.  "/>
    <register addr="5200ffd0" rw_flags="RW" width="1" name="DEEP_SLEEP_WAKEUP_ENABLES1" comment="This register controls the sources which can cause deep sleep wakeup. Functions are enabled by setting individual bits. Bits are enumerated  as DEEP_SLEEP_WAKEUP. "/>
    <register addr="5200ffd4" rw_flags="R" width="1" name="DEEP_SLEEP_STATUS1" comment="This register indicates the currently-active deep sleep wakeup sources."/>
    <register addr="5200ffd8" rw_flags="R" width="1" name="DEEP_SLEEP_STATUS_STICKY1" comment="This register returns a sticky version of DEEP_SLEEP_STATUS, recording all wakeup events since it was last cleared.  "/>
    <register addr="5200ffdc" rw_flags="RW" width="1" name="PROC_CONFIG" comment="PROC processor platform configuration cleanable on PROC POR only"/>
    <register addr="5200ffe0" rw_flags="RW" width="1" name="MILDRED_PIO_1508_DRIVE_ENABLE" comment="Bits [15: 8] of PIO drive enable bus. These 8 PIO drive enable bits are bit-addressable to allow convenient switching for use with e.g. I2C."/>
    <register addr="5200ffe4" rw_flags="RW" width="1" name="MILDRED_MISC_CONTROL" comment="Miscellaneous control signals"/>
    <register addr="5200ffe8" rw_flags="RW" width="1" name="SLOW_CLK_TIMER_EVENT_31_24" comment="When the timer matches this count a deep sleep wakeup event will be triggered."/>
    <register addr="5200ffec" rw_flags="RW" width="1" name="SLOW_CLK_TIMER_EVENT_23_16" comment="When the timer matches this count a deep sleep wakeup event will be triggered."/>
    <register addr="5200fff0" rw_flags="RW" width="1" name="SLOW_CLK_TIMER_EVENT_15_08" comment="When the timer matches this count a deep sleep wakeup event will be triggered."/>
    <register addr="5200fff4" rw_flags="RW" width="1" name="SLOW_CLK_TIMER_EVENT_07_00" comment="When the timer matches this count a deep sleep wakeup event will be triggered."/>
    <register addr="5200fff8" rw_flags="RW" width="1" name="PAD_RETENTION" comment="Pad retention controls."/>
    <register addr="5200fffc" rw_flags="RW" width="1" name="DEBUG_SOURCE_SELECT" comment="Select the ouput on DEBUG_OUT[15:0] on the PMU"/>
  </block>
  <block name="pcr_config" comment="">
    <register addr="51000000" rw_flags="R" width="4" name="PCR_VERSION" comment=""/>
    <register addr="51000004" rw_flags="RW" width="1" name="PCR_RST_CONFIG" comment="Processor platform configuration cleanable on reset"/>
    <register addr="51000008" rw_flags="RW" width="1" name="PCR_RTC_IRQ_EN" comment="RTC Interrupt enable. Any writes to this register also clear any RTC interrupt."/>
    <register addr="5100000c" rw_flags="RW" width="4" name="PCR_SYSTEM_CTRL" comment="Processor platform general system control"/>
    <register addr="51000010" rw_flags="RW" width="1" name="PCR_WL_ADC_COMMON_CFG" comment=""/>
    <register addr="51000014" rw_flags="RW" width="2" name="PCR_WL_ADC0_CFG" comment=""/>
    <register addr="51000018" rw_flags="RW" width="2" name="PCR_WL_ADC1_CFG" comment=""/>
    <register addr="5100001c" rw_flags="RW" width="1" name="PCR_WL_DAC0_CFG" comment=""/>
    <register addr="51000020" rw_flags="RW" width="1" name="PCR_WL_DAC1_CFG" comment=""/>
    <register addr="51000024" rw_flags="RW" width="2" name="PCR_WL_ADC0_CTRLI" comment=""/>
    <register addr="51000028" rw_flags="RW" width="2" name="PCR_WL_ADC0_CTRLQ" comment=""/>
    <register addr="5100002c" rw_flags="RW" width="2" name="PCR_WL_ADC1_CTRLI" comment=""/>
    <register addr="51000030" rw_flags="RW" width="2" name="PCR_WL_ADC1_CTRLQ" comment=""/>
    <register addr="51000034" rw_flags="RW" width="4" name="PCR_WL_DAC0_CTRLI" comment="Bits [21] and [8] set from powerdown."/>
    <register addr="51000038" rw_flags="RW" width="4" name="PCR_WL_DAC0_CTRLQ" comment="Bits [21] and [8] set from powerdown."/>
    <register addr="5100003c" rw_flags="RW" width="4" name="PCR_WL_DAC1_CTRLI" comment="Bits [21] and [8] set from powerdown."/>
    <register addr="51000040" rw_flags="RW" width="4" name="PCR_WL_DAC1_CTRLQ" comment="Bits [21] and [8] set from powerdown."/>
    <register addr="51000044" rw_flags="RW" width="2" name="PCR_PIO_DRIVE" comment="PIO output values for PIO[15:0]"/>
    <register addr="51000048" rw_flags="RW" width="2" name="PCR_PIO_DRIVE_EN" comment="PIO output enable for PIO[15:0]"/>
    <register addr="5100004c" rw_flags="R" width="2" name="PCR_PIO_STATUS" comment="PIO status values for PIO[15:0]"/>
    <register addr="51000050" rw_flags="RW" width="4" name="PCR_QOS" comment="Quality of service values of the matrix AXI masters"/>
    <register addr="51000054" rw_flags="RW" width="1" name="PCR_RMP_RGN0_BOOT" comment="PROC0 Boot Address Remapping Region 0 Enable"/>
    <register addr="51000058" rw_flags="RW" width="4" name="PCR_RMP_RGN0_BASE" comment="PROC0 Address Remapping Region 0 Start Address (4K address)"/>
    <register addr="5100005c" rw_flags="RW" width="1" name="PCR_RMP_RGN0_SIZE" comment="PROC0 Address Remapping Region 0 Size (4K bytes)"/>
    <register addr="51000060" rw_flags="RW" width="4" name="PCR_RMP_RGN0_OFST" comment="PROC0 Address Remapping Region 0 Offset (4K bytes)"/>
    <register addr="51000064" rw_flags="RW" width="4" name="PCR_RMP_RGN1_BASE" comment="PROC0 Address Remapping Region 1 Start Address (4K address)"/>
    <register addr="51000068" rw_flags="RW" width="1" name="PCR_RMP_RGN1_SIZE" comment="PROC0 Address Remapping Region 1 Size (4K bytes)"/>
    <register addr="5100006c" rw_flags="RW" width="4" name="PCR_RMP_RGN1_OFST" comment="PROC0 Address Remapping Region 1 Offset (4K bytes)"/>
    <register addr="51000070" rw_flags="RW" width="4" name="PCR_RMP_RGN2_BASE" comment="PROC0 Address Remapping Region 2 Start Address (4K address)"/>
    <register addr="51000074" rw_flags="RW" width="1" name="PCR_RMP_RGN2_SIZE" comment="PROC0 Address Remapping Region 2 Size (4K bytes)"/>
    <register addr="51000078" rw_flags="RW" width="4" name="PCR_RMP_RGN2_OFST" comment="PROC0 Address Remapping Region 2 Offset (4K bytes)"/>
    <register addr="5100007c" rw_flags="RW" width="4" name="PCR_RMP_RGN3_BASE" comment="PROC0 Address Remapping Region 3 Start Address (4K address)"/>
    <register addr="51000080" rw_flags="RW" width="1" name="PCR_RMP_RGN3_SIZE" comment="PROC0 Address Remapping Region 3 Size (4K bytes)"/>
    <register addr="51000084" rw_flags="RW" width="4" name="PCR_RMP_RGN3_OFST" comment="PROC0 Address Remapping Region 3 Offset (4K bytes)"/>
    <register addr="51000088" rw_flags="RW" width="4" name="PCR_RMP_RGN4_BASE" comment="PROC0 Address Remapping Region 4 Start Address (4K address)"/>
    <register addr="5100008c" rw_flags="RW" width="1" name="PCR_RMP_RGN4_SIZE" comment="PROC0 Address Remapping Region 4 Size (4K bytes)"/>
    <register addr="51000090" rw_flags="RW" width="4" name="PCR_RMP_RGN4_OFST" comment="PROC0 Address Remapping Region 4 Offset (4K bytes)"/>
    <register addr="51000094" rw_flags="RW" width="4" name="PCR_RMP_RGN5_BASE" comment="PROC0 Address Remapping Region 5 Start Address (4K address)"/>
    <register addr="51000098" rw_flags="RW" width="1" name="PCR_RMP_RGN5_SIZE" comment="PROC0 Address Remapping Region 5 Size (4K bytes)"/>
    <register addr="5100009c" rw_flags="RW" width="4" name="PCR_RMP_RGN5_OFST" comment="PROC0 Address Remapping Region 5 Offset (4K bytes)"/>
    <register addr="510000a0" rw_flags="RW" width="1" name="PCR_MEMARB_QOS_EN" comment="Memory arbiters QoS enable"/>
    <register addr="510000a4" rw_flags="RW" width="1" name="PCR_SPLT_LOW_ADDR_BITS" comment="Splitting Memory with lsbits(1) or msbits(0)"/>
    <register addr="510000a8" rw_flags="RW" width="1" name="PCR_QREQ_OFF_XDMA" comment="XDMA Q-channel request"/>
    <register addr="510000ac" rw_flags="RW" width="2" name="PCR_DRAM_EARLY_WAKEUP" comment="DRAM Early Wakeup"/>
    <register addr="510000b0" rw_flags="RW" width="4" name="PCR_QEXP" comment="Expiration Q-channel registers"/>
  </block>
  <block name="pcr_ticker" comment="">
    <register addr="51100000" rw_flags="R" width="4" name="TCKR_VALUE" comment="Current value of the ticker"/>
    <register addr="51100004" rw_flags="RW" width="4" name="TCKR_SET_VALUE" comment="Set a new value of the ticker"/>
    <register addr="51100008" rw_flags="RW" width="4" name="TCKR_ALARM0" comment="Set the Proc alarm 0 value. As a side effect - clears the corresponding interrupt line"/>
    <register addr="5110000c" rw_flags="RW" width="4" name="TCKR_ALARM1" comment="Set the Proc alarm 1 value. As a side effect - clears the corresponding interrupt line"/>
    <register addr="51100010" rw_flags="RW" width="4" name="TCKR_ALARM2" comment="Set the Proc alarm 2 value. As a side effect - clears the corresponding interrupt line"/>
    <register addr="51100014" rw_flags="RW" width="4" name="TCKR_ALARM3" comment="Set the Proc alarm 3 value. As a side effect - clears the corresponding interrupt line"/>
    <register addr="51100018" rw_flags="RW" width="4" name="TCKR_ALARM4" comment="Set the Proc alarm 4 value. As a side effect - clears the corresponding interrupt line"/>
    <register addr="5110001c" rw_flags="RW" width="4" name="TCKR_TIMESTAMP_CTRL" comment="Control of timestamping"/>
    <register addr="51100020" rw_flags="R" width="4" name="TCKR_TIMESTAMP0_COARSE_VAL" comment="Timestamp 0 block microsecond count"/>
    <register addr="51100024" rw_flags="R" width="4" name="TCKR_TIMESTAMP1_COARSE_VAL" comment="Timestamp 1 block microsecond count"/>
    <register addr="51100028" rw_flags="R" width="4" name="TCKR_TIMESTAMP2_COARSE_VAL" comment="Timestamp 2 block microsecond count"/>
    <register addr="5110002c" rw_flags="R" width="4" name="TCKR_TIMESTAMP3_COARSE_VAL" comment="Timestamp 3 block microsecond count"/>
    <register addr="51100030" rw_flags="R" width="2" name="TCKR_TIMESTAMP0_FINE_VAL" comment="Timestamp 0 block 1/80 microsecond count"/>
    <register addr="51100034" rw_flags="R" width="2" name="TCKR_TIMESTAMP1_FINE_VAL" comment="Timestamp 1 block 1/80 microsecond count"/>
    <register addr="51100038" rw_flags="R" width="2" name="TCKR_TIMESTAMP2_FINE_VAL" comment="Timestamp 2 block 1/80 microsecond count"/>
    <register addr="5110003c" rw_flags="R" width="2" name="TCKR_TIMESTAMP3_FINE_VAL" comment="Timestamp 3 block 1/80 microsecond count"/>
    <register addr="51100040" rw_flags="R" width="1" name="TCKR_TIMESTAMP_OCCURRED" comment="Timestamp edge has happened (one bit for each block)"/>
    <register addr="51100044" rw_flags="RW" width="1" name="TCKR_TIMESTAMP_OCCURRED_CLEAR" comment="Clears corresponding TIMESTAMP_OCCURRED flag"/>
    <register addr="51100048" rw_flags="RW" width="1" name="TCKR_CTRL0" comment="The Proc alarm 0 control register"/>
    <register addr="5110004c" rw_flags="RW" width="1" name="TCKR_CTRL1" comment="The Proc alarm 1 control register"/>
    <register addr="51100050" rw_flags="RW" width="1" name="TCKR_CTRL2" comment="The Proc alarm 2 control register"/>
    <register addr="51100054" rw_flags="RW" width="1" name="TCKR_CTRL3" comment="The Proc alarm 3 control register"/>
    <register addr="51100058" rw_flags="RW" width="1" name="TCKR_CTRL4" comment="The Proc alarm 4 control register"/>
  </block>
  <block name="phy" comment="">
    <register addr="50000000" rw_flags="R" width="4" name="PHY_ID_0" comment='PHY ID 0, ASCII "PHY-"'/>
    <register addr="50000004" rw_flags="R" width="4" name="PHY_ID_1" comment="PHY ID 1, ASCII BANDWIDTH,TX_SS,RX_SS,TC"/>
    <register addr="50000008" rw_flags="RW" width="4" name="PHY_CONFIG[0]" comment="PHY configuration (one for each of the two paths in RSDB builds)"/>
    <register addr="5000000c" rw_flags="RW" width="4" name="PHY_CONFIG[1]" comment="PHY configuration (one for each of the two paths in RSDB builds)"/>
    <register addr="50000010" rw_flags="RW" width="2" name="PHY_RESET" comment="Async reset for phy blocks"/>
    <register addr="50000014" rw_flags="R" width="4" name="PHY_MAC_STATUS" comment="Status register showing the current value of the private MAC baseband control registers"/>
    <register addr="50000018" rw_flags="RW" width="4" name="PHY_CONTROL" comment="Allows the CPU to override MAC start/abort of baseband operations"/>
    <register addr="5000001c" rw_flags="RW" width="2" name="CAPTURE_INTERVAL" comment=" capture interval in steps of 50ns"/>
    <register addr="50000020" rw_flags="RW" width="4" name="CAPTURE_BASE_ADDR" comment=" Capture base address must be 8-byte aligned, three LSBs is ignored"/>
    <register addr="50000024" rw_flags="RW" width="4" name="CAPTURE_BUFFER_LEN" comment=" Capture buffer length must be 8-byte aligned, three LSBs is ignored"/>
    <register addr="50000028" rw_flags="RW" width="4" name="CAPTURE_CONTROL" comment="This register controls the data capture features within the capture block"/>
    <register addr="5000002c" rw_flags="RW" width="4" name="EVENT_COUNT_CONTROL[0]" comment="This register configure capture trigger events to be counted"/>
    <register addr="50000030" rw_flags="RW" width="4" name="EVENT_COUNT_CONTROL[1]" comment="This register configure capture trigger events to be counted"/>
    <register addr="50000034" rw_flags="R" width="2" name="EVENT_COUNT[0]" comment="Store the event count for EVENT_SEL0...7"/>
    <register addr="50000038" rw_flags="R" width="2" name="EVENT_COUNT[1]" comment="Store the event count for EVENT_SEL0...7"/>
    <register addr="5000003c" rw_flags="R" width="2" name="EVENT_COUNT[2]" comment="Store the event count for EVENT_SEL0...7"/>
    <register addr="50000040" rw_flags="R" width="2" name="EVENT_COUNT[3]" comment="Store the event count for EVENT_SEL0...7"/>
    <register addr="50000044" rw_flags="R" width="2" name="EVENT_COUNT[4]" comment="Store the event count for EVENT_SEL0...7"/>
    <register addr="50000048" rw_flags="R" width="2" name="EVENT_COUNT[5]" comment="Store the event count for EVENT_SEL0...7"/>
    <register addr="5000004c" rw_flags="R" width="2" name="EVENT_COUNT[6]" comment="Store the event count for EVENT_SEL0...7"/>
    <register addr="50000050" rw_flags="R" width="2" name="EVENT_COUNT[7]" comment="Store the event count for EVENT_SEL0...7"/>
    <register addr="50000054" rw_flags="R" width="2" name="CAPTURE_STATUS" comment="Capture and DMA channel state "/>
    <register addr="50000058" rw_flags="R" width="4" name="CAPTURE_CUR_ADDR" comment=" Capture current address"/>
    <register addr="5000005c" rw_flags="RW" width="4" name="PLAYBACK_BASE_ADDR" comment=" Playback base address must be 8-byte aligned, three LSBs is ignored"/>
    <register addr="50000060" rw_flags="RW" width="4" name="PLAYBACK_BUFFER_LEN" comment=" Playback buffer length must be 8-byte aligned, three LSBs is ignored"/>
    <register addr="50000064" rw_flags="RW" width="4" name="PLAYBACK_CONTROL" comment="This register controls the data Playback features within the Playback block"/>
    <register addr="50000068" rw_flags="R" width="2" name="PLAYBACK_STATUS" comment="Playback and DMA channel state"/>
    <register addr="5000006c" rw_flags="R" width="4" name="PLAYBACK_CUR_ADDR" comment=" Playback current address"/>
    <register addr="50000070" rw_flags="RW" width="4" name="EVENT_CONTROL_0" comment="enables for event capture"/>
    <register addr="50000074" rw_flags="RW" width="4" name="EVENT_CONTROL_1" comment="enables for event capture"/>
    <register addr="50000078" rw_flags="W" width="4" name="EVENT_GENERATE" comment="generates event from software"/>
    <register addr="5000007c" rw_flags="RW" width="4" name="EVENT_HIGH" comment="high 32 bits of software generated events"/>
    <register addr="50000080" rw_flags="RW" width="4" name="EVENT_MATCH[0]" comment="Event ID matches that generate interrupt or capture trigger"/>
    <register addr="50000084" rw_flags="RW" width="4" name="EVENT_MATCH[1]" comment="Event ID matches that generate interrupt or capture trigger"/>
    <register addr="50000088" rw_flags="RW" width="4" name="EVENT_DMA_BASE_ADDR" comment=" Events logging base address must be 8-byte aligned, three LSBs is ignored"/>
    <register addr="5000008c" rw_flags="RW" width="4" name="EVENT_DMA_BUFFER_LEN" comment="Events logging buffer length must be 8-byte aligned, three LSBs is ignored"/>
    <register addr="50000090" rw_flags="R" width="2" name="EVENT_STATUS" comment=" EVENT logging status "/>
    <register addr="50000094" rw_flags="R" width="4" name="EVENT_DMA_CUR_ADDR" comment=" Beamformee0 DMA read current address"/>
    <register addr="50000098" rw_flags="RW" width="1" name="BBA_BF_RX0_CONTROL" comment="Beamformee 0 control to request CBR upon next NDP"/>
    <register addr="5000009c" rw_flags="RW" width="1" name="BBA_BF_RX0_DMA_EN" comment=" Beamformee 0 DMA channel enable "/>
    <register addr="500000a0" rw_flags="RW" width="4" name="BBA_BF_RX0_DMA_BASE_ADDR" comment=" Beamformee 0 base address must be 8-byte aligned, three LSBs is ignored"/>
    <register addr="500000a4" rw_flags="RW" width="2" name="BBA_BF_RX0_DMA_BUFFER_LEN" comment=" Beamformee 0 buffer length must be 8-byte aligned, three LSBs is ignored"/>
    <register addr="500000a8" rw_flags="R" width="2" name="BBA_BF_RX0_STATUS" comment=" BBA_BF_RX0 status "/>
    <register addr="500000ac" rw_flags="R" width="4" name="BBA_BF_RX0_DMA_CUR_ADDR" comment=" Beamformee0 DMA read current address"/>
    <register addr="500000b0" rw_flags="RW" width="1" name="BBA_BF_RX1_CONTROL" comment="Beamformee 1 control to request CBR upon next NDP"/>
    <register addr="500000b4" rw_flags="RW" width="1" name="BBA_BF_RX1_DMA_EN" comment=" Beamformee 1 DMA channel enable "/>
    <register addr="500000b8" rw_flags="RW" width="4" name="BBA_BF_RX1_DMA_BASE_ADDR" comment=" Beamformee 1 base address must be 8-byte aligned, three LSBs is ignored"/>
    <register addr="500000bc" rw_flags="RW" width="2" name="BBA_BF_RX1_DMA_BUFFER_LEN" comment=" Beamformee 1 buffer length must be 8-byte aligned, three LSBs is ignored"/>
    <register addr="500000c0" rw_flags="R" width="2" name="BBA_BF_RX1_STATUS" comment=" BBA_BF_RX1 status "/>
    <register addr="500000c4" rw_flags="R" width="4" name="BBA_BF_RX1_DMA_CUR_ADDR" comment=" Beamformee1 DMA read current address"/>
    <register addr="500000c8" rw_flags="RW" width="1" name="BBA_BF_TX_DMA_CONTROL" comment="This register controls the beamformer angle fetch DMA "/>
    <register addr="500000cc" rw_flags="RW" width="4" name="BBA_BF_TX_DMA_BASE_ADDR" comment="Beamformer angle fetch DMA base address (byte address)"/>
    <register addr="500000d0" rw_flags="RW" width="4" name="BBA_BF_TX_DMA_BUFFER_LEN" comment="Beamformer angle fetch buffer length (bytes)"/>
    <register addr="500000d4" rw_flags="R" width="2" name="BBA_BF_TX_STATUS" comment=" BBA_BF_TX_status "/>
    <register addr="500000d8" rw_flags="R" width="4" name="BBA_BF_TX_DMA_CUR_ADDR" comment=" Beamformer DMA read current address"/>
    <register addr="500000dc" rw_flags="RW" width="4" name="DMA_INT_EN" comment="Write one to enable corresponding DMA interrupt "/>
    <register addr="500000e0" rw_flags="R" width="4" name="DMA_EVENTS" comment="Generated DMA events.Register has the same fields as DMA_INT  "/>
    <register addr="500000e4" rw_flags="RW" width="4" name="DMA_INT_CLEAR" comment="Write one to clear DMA event.Register has the same fields as DMA_INT_EN  "/>
  </block>
  <block name="phy_clkgen_0" comment="">
    <register addr="50010000" rw_flags="RW" width="1" name="CLKGEN_DEBUG_SELECT_I0" comment="This register selects which of a variety of debug buses are driven out of the block"/>
    <register addr="50010004" rw_flags="R" width="2" name="CLKGEN_TIMER_FAST_STATUS_I0" comment="This read-only register contains the current value of the fast timer. It is used to set time changes on PIOs to implement serial buses. The value is in units of 12.5ns (80MHz) and it is free running all the time that the CLKGEN_TIMER_FAST_EN bit in CLKGEN_TIMER_ENABLES is set."/>
    <register addr="50010008" rw_flags="RW" width="2" name="WL_CLKGEN_ENABLES_I0" comment="This register enables many of the core clocks on the chip. When a corresponding bit is set, the clock is enabled, regardless of any corresponding clock request"/>
    <register addr="5001000c" rw_flags="RW" width="1" name="CLKGEN_PP_ENABLES_I0" comment="This register enables processor platform clocks. When a corresponding bit is set, the clock is enabled, regardless of any corresponding clock request"/>
    <register addr="50010010" rw_flags="RW" width="2" name="CLKGEN_WL_ENABLES_I0" comment="This register is logically an extension of CLKGEN_ENABLES, but contains bits associated with wireless LAN specific clocks"/>
    <register addr="50010014" rw_flags="RW" width="2" name="CLKGEN_BB_ENABLES_I0" comment="This register is logically an extension of CLKGEN_ENABLES, but contains bits associated with wireless LAN baseband specific clocks. Forcing the clocks ON is not recommended for power saving."/>
    <register addr="50010018" rw_flags="RW" width="1" name="CLKGEN_LDPC_ENABLES_I0" comment="This register is logically an extension of CLKGEN_ENABLES, but contains bits associated with LDPC specific clocks. Forcing the clocks ON is not recommended for power saving."/>
    <register addr="5001001c" rw_flags="RW" width="1" name="CLKGEN_CLKMAC_SLEEP_CONFIG_I0" comment="This register selects which of the clock requests and the Mac Activity input are capable of forcing the Clk20MRadio clock to be active. This could be useful to software in controlling sleep modes for the Mac Accelerator."/>
    <register addr="50010020" rw_flags="R" width="2" name="CLKGEN_STATUS_I0" comment="This register returns the instantaneous status of the various deep sleep wakeup sources, along with the deep sleep mode bit and the status of the slow clock"/>
    <register addr="50010024" rw_flags="RW" width="4" name="CLKGEN_CLK_REQ_ENABLES_I0" comment="This register enables clock requests to have an effect. If these bits are cleared, the clock request from the corresponding block is ignored"/>
    <register addr="50010028" rw_flags="RW" width="2" name="CLKGEN_BB_CLK_REQ_ENABLES_I0" comment="This register enables clock requests to have an effect. If these bits are cleared, the clock request from the corresponding block is ignored"/>
    <register addr="5001002c" rw_flags="RW" width="1" name="CLKGEN_LDPC_CLK_REQ_ENABLES_I0" comment="This register enables clock requests to have an effect. If these bits are cleared, the clock request from the corresponding block is ignored"/>
    <register addr="50010030" rw_flags="R" width="2" name="CLKGEN_CLK_REQ_STATUS_I0" comment="This register allows the firmware to see the instantaneous state of the clock request lines from the various subsystems to assist in deciding whether the hardware is really idle or just pausing briefly"/>
    <register addr="50010034" rw_flags="R" width="2" name="CLKGEN_BB_CLK_REQ_STATUS_I0" comment="This register allows the firmware to see the instantaneous state of the clock request lines from the various subsystems to assist in deciding whether the hardware is really idle or just pausing briefly"/>
    <register addr="50010038" rw_flags="R" width="1" name="CLKGEN_LDPC_CLK_REQ_STATUS_I0" comment="This register allows the firmware to see the instantaneous state of the clock request lines from the various subsystems to assist in deciding whether the hardware is really idle or just pausing briefly"/>
    <register addr="5001003c" rw_flags="RW" width="1" name="CLKGEN_VITERBI_PRESCALE_CFG_I0" comment="Register to set 480MHz clock prescaling before it is used to create Viterbi clock. Prescaled clock would be 480, 240, 120 and 80 MHz when set to 1, 2, 3 and 4 respectfully. Recommended settings are SISO 1, 1, 2 and 4 for 80+80, 80, 40 and 20 MHz operating bandwidth; MIMO 1, 1, 3, 4 for 80+80, 80, 40 and 20 MHz operating bandwidth. NOTE: If HT-GF LDPC 20 MHz reception capability is advertised configure to 1."/>
    <register addr="50010040" rw_flags="RW" width="1" name="CLKGEN_VITERBI_SCALE_CFG_I0" comment="Register to divide prescaled 480MHz clock to create Viterbi clock. The scaling value applied is (Register Value + 1)/8. Recommended settings are SISO 5, 5, 5 and 7 for 80+80, 80, 40 and 20 MHz operating bandwidth; MIMO 7, 7, 7, 6 for 80+80, 80, 40 and 20 MHz operating bandwidth. NOTE: If HT-GF LDPC 20 MHz reception capability is advertised configure to 4."/>
  </block>
  <block name="phy_clkgen_1" comment="">
    <register addr="50020000" rw_flags="RW" width="1" name="CLKGEN_DEBUG_SELECT_I1" comment="This register selects which of a variety of debug buses are driven out of the block"/>
    <register addr="50020004" rw_flags="R" width="2" name="CLKGEN_TIMER_FAST_STATUS_I1" comment="This read-only register contains the current value of the fast timer. It is used to set time changes on PIOs to implement serial buses. The value is in units of 12.5ns (80MHz) and it is free running all the time that the CLKGEN_TIMER_FAST_EN bit in CLKGEN_TIMER_ENABLES is set."/>
    <register addr="50020008" rw_flags="RW" width="2" name="WL_CLKGEN_ENABLES_I1" comment="This register enables many of the core clocks on the chip. When a corresponding bit is set, the clock is enabled, regardless of any corresponding clock request"/>
    <register addr="5002000c" rw_flags="RW" width="1" name="CLKGEN_PP_ENABLES_I1" comment="This register enables processor platform clocks. When a corresponding bit is set, the clock is enabled, regardless of any corresponding clock request"/>
    <register addr="50020010" rw_flags="RW" width="2" name="CLKGEN_WL_ENABLES_I1" comment="This register is logically an extension of CLKGEN_ENABLES, but contains bits associated with wireless LAN specific clocks"/>
    <register addr="50020014" rw_flags="RW" width="2" name="CLKGEN_BB_ENABLES_I1" comment="This register is logically an extension of CLKGEN_ENABLES, but contains bits associated with wireless LAN baseband specific clocks. Forcing the clocks ON is not recommended for power saving."/>
    <register addr="50020018" rw_flags="RW" width="1" name="CLKGEN_LDPC_ENABLES_I1" comment="This register is logically an extension of CLKGEN_ENABLES, but contains bits associated with LDPC specific clocks. Forcing the clocks ON is not recommended for power saving."/>
    <register addr="5002001c" rw_flags="RW" width="1" name="CLKGEN_CLKMAC_SLEEP_CONFIG_I1" comment="This register selects which of the clock requests and the Mac Activity input are capable of forcing the Clk20MRadio clock to be active. This could be useful to software in controlling sleep modes for the Mac Accelerator."/>
    <register addr="50020020" rw_flags="R" width="2" name="CLKGEN_STATUS_I1" comment="This register returns the instantaneous status of the various deep sleep wakeup sources, along with the deep sleep mode bit and the status of the slow clock"/>
    <register addr="50020024" rw_flags="RW" width="4" name="CLKGEN_CLK_REQ_ENABLES_I1" comment="This register enables clock requests to have an effect. If these bits are cleared, the clock request from the corresponding block is ignored"/>
    <register addr="50020028" rw_flags="RW" width="2" name="CLKGEN_BB_CLK_REQ_ENABLES_I1" comment="This register enables clock requests to have an effect. If these bits are cleared, the clock request from the corresponding block is ignored"/>
    <register addr="5002002c" rw_flags="RW" width="1" name="CLKGEN_LDPC_CLK_REQ_ENABLES_I1" comment="This register enables clock requests to have an effect. If these bits are cleared, the clock request from the corresponding block is ignored"/>
    <register addr="50020030" rw_flags="R" width="2" name="CLKGEN_CLK_REQ_STATUS_I1" comment="This register allows the firmware to see the instantaneous state of the clock request lines from the various subsystems to assist in deciding whether the hardware is really idle or just pausing briefly"/>
    <register addr="50020034" rw_flags="R" width="2" name="CLKGEN_BB_CLK_REQ_STATUS_I1" comment="This register allows the firmware to see the instantaneous state of the clock request lines from the various subsystems to assist in deciding whether the hardware is really idle or just pausing briefly"/>
    <register addr="50020038" rw_flags="R" width="1" name="CLKGEN_LDPC_CLK_REQ_STATUS_I1" comment="This register allows the firmware to see the instantaneous state of the clock request lines from the various subsystems to assist in deciding whether the hardware is really idle or just pausing briefly"/>
    <register addr="5002003c" rw_flags="RW" width="1" name="CLKGEN_VITERBI_PRESCALE_CFG_I1" comment="Register to set 480MHz clock prescaling before it is used to create Viterbi clock. Prescaled clock would be 480, 240, 120 and 80 MHz when set to 1, 2, 3 and 4 respectfully. Recommended settings are SISO 1, 1, 2 and 4 for 80+80, 80, 40 and 20 MHz operating bandwidth; MIMO 1, 1, 3, 4 for 80+80, 80, 40 and 20 MHz operating bandwidth. NOTE: If HT-GF LDPC 20 MHz reception capability is advertised configure to 1."/>
    <register addr="50020040" rw_flags="RW" width="1" name="CLKGEN_VITERBI_SCALE_CFG_I1" comment="Register to divide prescaled 480MHz clock to create Viterbi clock. The scaling value applied is (Register Value + 1)/8. Recommended settings are SISO 5, 5, 5 and 7 for 80+80, 80, 40 and 20 MHz operating bandwidth; MIMO 7, 7, 7, 6 for 80+80, 80, 40 and 20 MHz operating bandwidth. NOTE: If HT-GF LDPC 20 MHz reception capability is advertised configure to 4."/>
  </block>
  <block name="phy_dfe" comment="">
    <register addr="50030000" rw_flags="RW" width="4" name="DFE_RX_CONFIG[0]" comment="Rx configuration bits"/>
    <register addr="50030004" rw_flags="R" width="4" name="DFE_RX_STATUS[0]" comment="Rx status bits per channel"/>
    <register addr="50030008" rw_flags="RW" width="1" name="DFE_RX_LNA_PHASE_COMP_CONFIG1[0]" comment="Configuration for LNA phase compensation - WL LNA."/>
    <register addr="5003000c" rw_flags="RW" width="2" name="DFE_RX_LNA_PHASE_COMP_CONFIG2[0]" comment="Configuration for LNA phase compensation - WL LNA."/>
    <register addr="50030010" rw_flags="RW" width="2" name="DFE_RX_NOTCH_CONFIG[0]" comment="This register configures the two notch filters in each of the receive chains. The lower 5 bits configure the OFDM filter and the next 5 bits the CCK filter. The MSB enables the notch filter in front of the rx_ctrl module"/>
    <register addr="50030014" rw_flags="RW" width="2" name="DFE_RX_NOTCH_PRELOAD[0]" comment="This is the value loaded into the memory element of the notch filters if requested"/>
    <register addr="50030018" rw_flags="RW" width="2" name="DFE_SIGANAL_CONFIG[0]" comment="This register configures the signal analyser"/>
    <register addr="5003001c" rw_flags="RW" width="2" name="DFE_SIGANAL_FREQ[0]" comment="This sets the frequency of the tone used by the signal analyser. The value for a given frequency can be found by multiplying by 65 536 and dividing by 80 000 000.This sets the frequency of the tone used by the signal analyser."/>
    <register addr="50030020" rw_flags="RW" width="1" name="DFE_RX_COMP_CONFIG1[0]" comment="This register controls phase and magnitude compensation for the receive signals in the first receive chain, and has a bit which enables frequency compensation for both receive chains."/>
    <register addr="50030024" rw_flags="RW" width="2" name="DFE_RX_COMP_CONFIG2[0]" comment="Configuration parameters for the averaging block in the Rx IQ Compensation measurement block"/>
    <register addr="50030028" rw_flags="RW" width="2" name="DFE_RX_COMP_DELAY_CONFIG[0]" comment="This register controls the receiver delay compensation parameters"/>
    <register addr="5003002c" rw_flags="RW" width="2" name="DFE_RX_COMP_PHASE_CONFIG[0]" comment="Configuration for receiver phase compensation"/>
    <register addr="50030030" rw_flags="RW" width="2" name="DFE_RX_COMP_AMPL_CONFIG[0]" comment="Configuration for receiver amplitude compensation"/>
    <register addr="50030034" rw_flags="R" width="2" name="DFE_RX_COMP_AUTO_COEFFS[0]" comment="The current values of automatic I/Q trims can be read back from this register. The trim values are in sign/magnitude format. The phase trim is in the upper 8 bits and the amplitude trim in the lower 8 bits of this register. By setting the DFE_RX_COMP_LUT_READ_EN bit in the DFE_RX_COMP_CONFIG1 register, entries in the compensation table can also be read."/>
    <register addr="50030038" rw_flags="R" width="1" name="DFE_RX_PHASE_COMP_LUT_STATUS[0]" comment="This register reads the current phase compensation LUT entry"/>
    <register addr="5003003c" rw_flags="R" width="1" name="DFE_RX_AMPL_COMP_LUT_STATUS[0]" comment="This register reads the current amplitude compensation LUT entry"/>
    <register addr="50030040" rw_flags="R" width="4" name="DFE_SIGANAL_I_POSITIVE_OUTPUT[0]" comment="This contains the I value generated by the positive frequency signal analyser"/>
    <register addr="50030044" rw_flags="R" width="4" name="DFE_SIGANAL_Q_POSITIVE_OUTPUT[0]" comment="This contains the Q value generated by the positive frequency signal analyser"/>
    <register addr="50030048" rw_flags="R" width="4" name="DFE_SIGANAL_I_NEGATIVE_OUTPUT[0]" comment="This contains the I value generated by the negative frequency signal analyser"/>
    <register addr="5003004c" rw_flags="R" width="4" name="DFE_SIGANAL_Q_NEGATIVE_OUTPUT[0]" comment="This contains the Q value generated by the negative frequency signal analyser"/>
    <register addr="50030050" rw_flags="R" width="1" name="DFE_SIGANAL_RSSI[0]" comment="This register contains the RSSI too loud indicati ons collected while the signal analyser was running. Bits set in this register mean that the corresponding signal analyser output may be unreliable"/>
    <register addr="50030054" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_CONTROL[0]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="50030058" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_HDRLEN[0]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="5003005c" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_COEFFI0[0]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="50030060" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_COEFFQ0[0]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="50030064" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_COEFFI1[0]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="50030068" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_COEFFQ1[0]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="5003006c" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_COEFFI2[0]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="50030070" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_COEFFQ2[0]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="50030074" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_COEFFI3[0]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="50030078" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_COEFFQ3[0]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="5003007c" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_COEFFI4[0]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="50030080" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_COEFFQ4[0]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="50030084" rw_flags="RW" width="4" name="DFE_RX_CONFIG[1]" comment="Rx configuration bits"/>
    <register addr="50030088" rw_flags="R" width="4" name="DFE_RX_STATUS[1]" comment="Rx status bits per channel"/>
    <register addr="5003008c" rw_flags="RW" width="1" name="DFE_RX_LNA_PHASE_COMP_CONFIG1[1]" comment="Configuration for LNA phase compensation - WL LNA."/>
    <register addr="50030090" rw_flags="RW" width="2" name="DFE_RX_LNA_PHASE_COMP_CONFIG2[1]" comment="Configuration for LNA phase compensation - WL LNA."/>
    <register addr="50030094" rw_flags="RW" width="2" name="DFE_RX_NOTCH_CONFIG[1]" comment="This register configures the two notch filters in each of the receive chains. The lower 5 bits configure the OFDM filter and the next 5 bits the CCK filter. The MSB enables the notch filter in front of the rx_ctrl module"/>
    <register addr="50030098" rw_flags="RW" width="2" name="DFE_RX_NOTCH_PRELOAD[1]" comment="This is the value loaded into the memory element of the notch filters if requested"/>
    <register addr="5003009c" rw_flags="RW" width="2" name="DFE_SIGANAL_CONFIG[1]" comment="This register configures the signal analyser"/>
    <register addr="500300a0" rw_flags="RW" width="2" name="DFE_SIGANAL_FREQ[1]" comment="This sets the frequency of the tone used by the signal analyser. The value for a given frequency can be found by multiplying by 65 536 and dividing by 80 000 000.This sets the frequency of the tone used by the signal analyser."/>
    <register addr="500300a4" rw_flags="RW" width="1" name="DFE_RX_COMP_CONFIG1[1]" comment="This register controls phase and magnitude compensation for the receive signals in the first receive chain, and has a bit which enables frequency compensation for both receive chains."/>
    <register addr="500300a8" rw_flags="RW" width="2" name="DFE_RX_COMP_CONFIG2[1]" comment="Configuration parameters for the averaging block in the Rx IQ Compensation measurement block"/>
    <register addr="500300ac" rw_flags="RW" width="2" name="DFE_RX_COMP_DELAY_CONFIG[1]" comment="This register controls the receiver delay compensation parameters"/>
    <register addr="500300b0" rw_flags="RW" width="2" name="DFE_RX_COMP_PHASE_CONFIG[1]" comment="Configuration for receiver phase compensation"/>
    <register addr="500300b4" rw_flags="RW" width="2" name="DFE_RX_COMP_AMPL_CONFIG[1]" comment="Configuration for receiver amplitude compensation"/>
    <register addr="500300b8" rw_flags="R" width="2" name="DFE_RX_COMP_AUTO_COEFFS[1]" comment="The current values of automatic I/Q trims can be read back from this register. The trim values are in sign/magnitude format. The phase trim is in the upper 8 bits and the amplitude trim in the lower 8 bits of this register. By setting the DFE_RX_COMP_LUT_READ_EN bit in the DFE_RX_COMP_CONFIG1 register, entries in the compensation table can also be read."/>
    <register addr="500300bc" rw_flags="R" width="1" name="DFE_RX_PHASE_COMP_LUT_STATUS[1]" comment="This register reads the current phase compensation LUT entry"/>
    <register addr="500300c0" rw_flags="R" width="1" name="DFE_RX_AMPL_COMP_LUT_STATUS[1]" comment="This register reads the current amplitude compensation LUT entry"/>
    <register addr="500300c4" rw_flags="R" width="4" name="DFE_SIGANAL_I_POSITIVE_OUTPUT[1]" comment="This contains the I value generated by the positive frequency signal analyser"/>
    <register addr="500300c8" rw_flags="R" width="4" name="DFE_SIGANAL_Q_POSITIVE_OUTPUT[1]" comment="This contains the Q value generated by the positive frequency signal analyser"/>
    <register addr="500300cc" rw_flags="R" width="4" name="DFE_SIGANAL_I_NEGATIVE_OUTPUT[1]" comment="This contains the I value generated by the negative frequency signal analyser"/>
    <register addr="500300d0" rw_flags="R" width="4" name="DFE_SIGANAL_Q_NEGATIVE_OUTPUT[1]" comment="This contains the Q value generated by the negative frequency signal analyser"/>
    <register addr="500300d4" rw_flags="R" width="1" name="DFE_SIGANAL_RSSI[1]" comment="This register contains the RSSI too loud indicati ons collected while the signal analyser was running. Bits set in this register mean that the corresponding signal analyser output may be unreliable"/>
    <register addr="500300d8" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_CONTROL[1]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="500300dc" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_HDRLEN[1]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="500300e0" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_COEFFI0[1]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="500300e4" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_COEFFQ0[1]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="500300e8" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_COEFFI1[1]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="500300ec" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_COEFFQ1[1]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="500300f0" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_COEFFI2[1]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="500300f4" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_COEFFQ2[1]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="500300f8" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_COEFFI3[1]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="500300fc" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_COEFFQ3[1]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="50030100" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_COEFFI4[1]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="50030104" rw_flags="RW" width="4" name="DFE_RX_FDIQMC_COEFFQ4[1]" comment="Frequency dependent Rx IQ Compensation.compensates IQ mismatches based on adaptive filter method"/>
    <register addr="50030108" rw_flags="RW" width="1" name="DFE_SIGGEN_ENABLE" comment="bit N = 1 : Signal Generator N is Enabled "/>
    <register addr="5003010c" rw_flags="RW" width="4" name="DFE_SIGGEN_CONFIG[0]" comment="Register to control operation of the internal signal generator. SigGen must be enabled in DFE_SIGGEN_ENABLE to start"/>
    <register addr="50030110" rw_flags="RW" width="2" name="DFE_SIGGEN_CONFIG2[0]" comment="Register to control operation of the internal signal generator- logical extension of DFE_SIGGEN_CONFIG"/>
    <register addr="50030114" rw_flags="RW" width="2" name="DFE_SIGGEN_FREQ1[0]" comment="This sets the frequency of the primary (only) tone used by the signal generator. The value for a given frequency can be found by multiplying by 65 536 and dividing by 80 000 000."/>
    <register addr="50030118" rw_flags="RW" width="2" name="DFE_SIGGEN_FREQ2[0]" comment="This sets the frequency of the secondary tone used by the signal                   generator. The value for a given frequency can be found by                   multiplying by 65 536 and dividing by 80 000 000"/>
    <register addr="5003011c" rw_flags="RW" width="2" name="DFE_SIGGEN_PHASE[0]" comment="This register has two functions: it is the value preloaded                   into the accumulator used to generate the first tone, so can                   set the phase of that tone relative to the second tone or the                   signal analyser tone. Also, it is used to provide the DC level                   in that mode of operation"/>
    <register addr="50030120" rw_flags="RW" width="4" name="DFE_SIGGEN_CONFIG[1]" comment="Register to control operation of the internal signal generator. SigGen must be enabled in DFE_SIGGEN_ENABLE to start"/>
    <register addr="50030124" rw_flags="RW" width="2" name="DFE_SIGGEN_CONFIG2[1]" comment="Register to control operation of the internal signal generator- logical extension of DFE_SIGGEN_CONFIG"/>
    <register addr="50030128" rw_flags="RW" width="2" name="DFE_SIGGEN_FREQ1[1]" comment="This sets the frequency of the primary (only) tone used by the signal generator. The value for a given frequency can be found by multiplying by 65 536 and dividing by 80 000 000."/>
    <register addr="5003012c" rw_flags="RW" width="2" name="DFE_SIGGEN_FREQ2[1]" comment="This sets the frequency of the secondary tone used by the signal                   generator. The value for a given frequency can be found by                   multiplying by 65 536 and dividing by 80 000 000"/>
    <register addr="50030130" rw_flags="RW" width="2" name="DFE_SIGGEN_PHASE[1]" comment="This register has two functions: it is the value preloaded                   into the accumulator used to generate the first tone, so can                   set the phase of that tone relative to the second tone or the                   signal analyser tone. Also, it is used to provide the DC level                   in that mode of operation"/>
    <register addr="50030134" rw_flags="RW" width="1" name="DFE_TX_CONFIG[0]" comment="Rx configuration bits"/>
    <register addr="50030138" rw_flags="RW" width="2" name="DFE_TX_COMP_LP_SCALE_CONFIG[0]" comment="This register contains the Low Power Tx compensation values that are used for magnitude and phase compensation, and also controls whether the frequency compensation block is enabled on transmit."/>
    <register addr="5003013c" rw_flags="RW" width="2" name="DFE_TX_COMP_HP_SCALE_CONFIG[0]" comment="This register contains the High Power Tx compensation values that are used for magnitude and phase compensation, and also controls whether the frequency compensation block is enabled on transmit."/>
    <register addr="50030140" rw_flags="RW" width="4" name="DFE_TX_COMP_LP_OFFSET_CONFIG[0]" comment="This register is a logical extension of DFE_TX_COMP_CONFIG1 and contains additional Tx compensation values - low power mode"/>
    <register addr="50030144" rw_flags="RW" width="2" name="DFE_TX_COMP_PHASE_CONFIG[0]" comment="Additional Tx compensation value used for phase imbalance correction"/>
    <register addr="50030148" rw_flags="RW" width="2" name="DFE_TX_COMP_HP_OFFSET_CONFIG[0]" comment="This register is a logical extension of DFE_TX_COMP_CONFIG1 and contains additional Tx compensation values - high power mode"/>
    <register addr="5003014c" rw_flags="RW" width="1" name="DFE_TX_COMP_DELAY_CONFIG[0]" comment="This register controls the transmit delay compensation parameters"/>
    <register addr="50030150" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][0]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="50030154" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][1]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="50030158" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][2]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="5003015c" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][3]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="50030160" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][4]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="50030164" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][5]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="50030168" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][6]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="5003016c" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][7]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="50030170" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][8]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="50030174" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][9]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="50030178" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][10]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="5003017c" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][11]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="50030180" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][12]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="50030184" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][13]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="50030188" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][14]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="5003018c" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][15]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="50030190" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][16]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="50030194" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][17]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="50030198" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][18]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="5003019c" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][19]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500301a0" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][20]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500301a4" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][21]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500301a8" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][22]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500301ac" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[0][23]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500301b0" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK0[0][0]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="500301b4" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK0[0][1]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="500301b8" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK0[0][2]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="500301bc" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK0[0][3]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="500301c0" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK0[0][4]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="500301c4" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK0[0][5]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="500301c8" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK1[0][0]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="500301cc" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK1[0][1]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="500301d0" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK1[0][2]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="500301d4" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK1[0][3]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="500301d8" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK1[0][4]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="500301dc" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK1[0][5]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="500301e0" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK0[0][0]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="500301e4" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK0[0][1]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="500301e8" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK0[0][2]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="500301ec" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK0[0][3]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="500301f0" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK0[0][4]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="500301f4" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK0[0][5]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="500301f8" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK1[0][0]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="500301fc" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK1[0][1]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="50030200" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK1[0][2]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="50030204" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK1[0][3]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="50030208" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK1[0][4]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="5003020c" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK1[0][5]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="50030210" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG1[0]" comment="Predist Mode and block enables, LutWr and LutRd Config Register"/>
    <register addr="50030214" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG2[0]" comment="Predist Mode and block enables, LutWr  Config Register"/>
    <register addr="50030218" rw_flags="RW" width="2" name="DFE_TX_PREDIST_CONFIG3[0]" comment="Predist Mode and block enables, LutRd Config Register"/>
    <register addr="5003021c" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG4[0]" comment="Predistortion OFDM0 Config"/>
    <register addr="50030220" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG5[0]" comment="Predistortion OFDM1 Config"/>
    <register addr="50030224" rw_flags="RW" width="2" name="DFE_TX_PREDIST_CONFIG6[0]" comment="Predistortion Mode CCK Config"/>
    <register addr="50030228" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG7[0]" comment="Training Mode Config1"/>
    <register addr="5003022c" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG8[0]" comment="Predistortion Modulation based Pre Gain configuration"/>
    <register addr="50030230" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG9[0]" comment="Predistortion Modulation based Pre Gain configuration"/>
    <register addr="50030234" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG10[0]" comment="Predistortion - Feedback FIR Filter Config1"/>
    <register addr="50030238" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG11[0]" comment="Predistortion - Feedback FIR Filter Config2"/>
    <register addr="5003023c" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG12[0]" comment="Predistortion - Feedback Notch Mode Config1"/>
    <register addr="50030240" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG13[0]" comment="Predistortion - Feedback Notch Mode Config2"/>
    <register addr="50030244" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG14[0]" comment="Predistortion - Feedback Signal Power Config"/>
    <register addr="50030248" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG15[0]" comment="Predist Mode and block enables, LutWr  Config Register"/>
    <register addr="5003024c" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG16[0]" comment="Predist Mode and block enables, LutWr  Config Register"/>
    <register addr="50030250" rw_flags="RW" width="2" name="DFE_TX_PREDIST_CONFIG17[0]" comment="Predist Mode and block enables, LutRd Config Register"/>
    <register addr="50030254" rw_flags="RW" width="1" name="DFE_TX_PREDIST_CONFIG18[0]" comment="DPD Interpolator gain,force enable control register"/>
    <register addr="50030258" rw_flags="RW" width="1" name="DFE_TX_PREDIST_CONFIG19[0]" comment="DPD Training force enable control register"/>
    <register addr="5003025c" rw_flags="R" width="4" name="DFE_TX_PREDIST_STATUS1[0]" comment="Predistortion - Output DC Bias and FIR Register"/>
    <register addr="50030260" rw_flags="R" width="4" name="DFE_TX_PREDIST_STATUS2[0]" comment="Predistortion - Adaption Quality and Signal Powers"/>
    <register addr="50030264" rw_flags="R" width="4" name="DFE_TX_PREDIST_STATUS3[0]" comment="Predistortion - Debug Register"/>
    <register addr="50030268" rw_flags="R" width="4" name="DFE_TX_PREDIST_STATUS4_RE[0]" comment="Predist Mode and block enables, LutRd Config Register"/>
    <register addr="5003026c" rw_flags="R" width="4" name="DFE_TX_PREDIST_STATUS4_IM[0]" comment="Predist Mode and block enables, LutRd Config Register"/>
    <register addr="50030270" rw_flags="R" width="4" name="DFE_TX_PREDIST_STATUS5[0]" comment="Predistortion - Adaption Quality and Signal Powers"/>
    <register addr="50030274" rw_flags="R" width="2" name="DFE_TX_PREDIST_STATUS6[0]" comment="Training sequence read register 1"/>
    <register addr="50030278" rw_flags="R" width="4" name="DFE_TX_PREDIST_STATUS7[0]" comment="Training sequece read register2"/>
    <register addr="5003027c" rw_flags="RW" width="1" name="DFE_TX_CONFIG[1]" comment="Rx configuration bits"/>
    <register addr="50030280" rw_flags="RW" width="2" name="DFE_TX_COMP_LP_SCALE_CONFIG[1]" comment="This register contains the Low Power Tx compensation values that are used for magnitude and phase compensation, and also controls whether the frequency compensation block is enabled on transmit."/>
    <register addr="50030284" rw_flags="RW" width="2" name="DFE_TX_COMP_HP_SCALE_CONFIG[1]" comment="This register contains the High Power Tx compensation values that are used for magnitude and phase compensation, and also controls whether the frequency compensation block is enabled on transmit."/>
    <register addr="50030288" rw_flags="RW" width="4" name="DFE_TX_COMP_LP_OFFSET_CONFIG[1]" comment="This register is a logical extension of DFE_TX_COMP_CONFIG1 and contains additional Tx compensation values - low power mode"/>
    <register addr="5003028c" rw_flags="RW" width="2" name="DFE_TX_COMP_PHASE_CONFIG[1]" comment="Additional Tx compensation value used for phase imbalance correction"/>
    <register addr="50030290" rw_flags="RW" width="2" name="DFE_TX_COMP_HP_OFFSET_CONFIG[1]" comment="This register is a logical extension of DFE_TX_COMP_CONFIG1 and contains additional Tx compensation values - high power mode"/>
    <register addr="50030294" rw_flags="RW" width="1" name="DFE_TX_COMP_DELAY_CONFIG[1]" comment="This register controls the transmit delay compensation parameters"/>
    <register addr="50030298" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][0]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="5003029c" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][1]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302a0" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][2]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302a4" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][3]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302a8" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][4]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302ac" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][5]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302b0" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][6]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302b4" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][7]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302b8" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][8]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302bc" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][9]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302c0" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][10]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302c4" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][11]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302c8" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][12]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302cc" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][13]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302d0" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][14]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302d4" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][15]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302d8" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][16]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302dc" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][17]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302e0" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][18]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302e4" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][19]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302e8" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][20]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302ec" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][21]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302f0" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][22]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302f4" rw_flags="RW" width="2" name="DFE_TX_MOD_CONFIG[1][23]" comment="Tx modulation-specific configuration for digital gain, DPD training,                DPD bank select, spectral shaping filter select."/>
    <register addr="500302f8" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK0[1][0]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="500302fc" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK0[1][1]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="50030300" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK0[1][2]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="50030304" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK0[1][3]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="50030308" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK0[1][4]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="5003030c" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK0[1][5]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="50030310" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK1[1][0]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="50030314" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK1[1][1]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="50030318" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK1[1][2]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="5003031c" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK1[1][3]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="50030320" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK1[1][4]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="50030324" rw_flags="RW" width="4" name="DFE_TX_SSF_BANK1[1][5]" comment="Twenty-one 8-bit coeffecients for Tx Spectrum shaping filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="50030328" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK0[1][0]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="5003032c" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK0[1][1]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="50030330" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK0[1][2]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="50030334" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK0[1][3]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="50030338" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK0[1][4]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="5003033c" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK0[1][5]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 0, Bit 8 of last register is Filter enable bit"/>
    <register addr="50030340" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK1[1][0]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="50030344" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK1[1][1]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="50030348" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK1[1][2]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="5003034c" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK1[1][3]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="50030350" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK1[1][4]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="50030354" rw_flags="RW" width="4" name="DFE_DPD_SSF_BANK1[1][5]" comment="Twenty-one 8-bit coeffecients for Tx DPD filter bank 1, Bit 8 of last register is Filter enable bit"/>
    <register addr="50030358" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG1[1]" comment="Predist Mode and block enables, LutWr and LutRd Config Register"/>
    <register addr="5003035c" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG2[1]" comment="Predist Mode and block enables, LutWr  Config Register"/>
    <register addr="50030360" rw_flags="RW" width="2" name="DFE_TX_PREDIST_CONFIG3[1]" comment="Predist Mode and block enables, LutRd Config Register"/>
    <register addr="50030364" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG4[1]" comment="Predistortion OFDM0 Config"/>
    <register addr="50030368" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG5[1]" comment="Predistortion OFDM1 Config"/>
    <register addr="5003036c" rw_flags="RW" width="2" name="DFE_TX_PREDIST_CONFIG6[1]" comment="Predistortion Mode CCK Config"/>
    <register addr="50030370" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG7[1]" comment="Training Mode Config1"/>
    <register addr="50030374" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG8[1]" comment="Predistortion Modulation based Pre Gain configuration"/>
    <register addr="50030378" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG9[1]" comment="Predistortion Modulation based Pre Gain configuration"/>
    <register addr="5003037c" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG10[1]" comment="Predistortion - Feedback FIR Filter Config1"/>
    <register addr="50030380" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG11[1]" comment="Predistortion - Feedback FIR Filter Config2"/>
    <register addr="50030384" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG12[1]" comment="Predistortion - Feedback Notch Mode Config1"/>
    <register addr="50030388" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG13[1]" comment="Predistortion - Feedback Notch Mode Config2"/>
    <register addr="5003038c" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG14[1]" comment="Predistortion - Feedback Signal Power Config"/>
    <register addr="50030390" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG15[1]" comment="Predist Mode and block enables, LutWr  Config Register"/>
    <register addr="50030394" rw_flags="RW" width="4" name="DFE_TX_PREDIST_CONFIG16[1]" comment="Predist Mode and block enables, LutWr  Config Register"/>
    <register addr="50030398" rw_flags="RW" width="2" name="DFE_TX_PREDIST_CONFIG17[1]" comment="Predist Mode and block enables, LutRd Config Register"/>
    <register addr="5003039c" rw_flags="RW" width="1" name="DFE_TX_PREDIST_CONFIG18[1]" comment="DPD Interpolator gain,force enable control register"/>
    <register addr="500303a0" rw_flags="RW" width="1" name="DFE_TX_PREDIST_CONFIG19[1]" comment="DPD Training force enable control register"/>
    <register addr="500303a4" rw_flags="R" width="4" name="DFE_TX_PREDIST_STATUS1[1]" comment="Predistortion - Output DC Bias and FIR Register"/>
    <register addr="500303a8" rw_flags="R" width="4" name="DFE_TX_PREDIST_STATUS2[1]" comment="Predistortion - Adaption Quality and Signal Powers"/>
    <register addr="500303ac" rw_flags="R" width="4" name="DFE_TX_PREDIST_STATUS3[1]" comment="Predistortion - Debug Register"/>
    <register addr="500303b0" rw_flags="R" width="4" name="DFE_TX_PREDIST_STATUS4_RE[1]" comment="Predist Mode and block enables, LutRd Config Register"/>
    <register addr="500303b4" rw_flags="R" width="4" name="DFE_TX_PREDIST_STATUS4_IM[1]" comment="Predist Mode and block enables, LutRd Config Register"/>
    <register addr="500303b8" rw_flags="R" width="4" name="DFE_TX_PREDIST_STATUS5[1]" comment="Predistortion - Adaption Quality and Signal Powers"/>
    <register addr="500303bc" rw_flags="R" width="2" name="DFE_TX_PREDIST_STATUS6[1]" comment="Training sequence read register 1"/>
    <register addr="500303c0" rw_flags="R" width="4" name="DFE_TX_PREDIST_STATUS7[1]" comment="Training sequece read register2"/>
    <register addr="500303c4" rw_flags="R" width="2" name="DFE_RX_FDIQMC_COEFF0_READ[0]" comment="READ COEFF0"/>
    <register addr="500303c8" rw_flags="R" width="2" name="DFE_RX_FDIQMC_COEFF1_READ[0]" comment="READ COEFF1"/>
    <register addr="500303cc" rw_flags="R" width="2" name="DFE_RX_FDIQMC_COEFF2_READ[0]" comment="READ COEFF2"/>
    <register addr="500303d0" rw_flags="R" width="2" name="DFE_RX_FDIQMC_COEFF3_READ[0]" comment="READ COEFF3"/>
    <register addr="500303d4" rw_flags="R" width="2" name="DFE_RX_FDIQMC_COEFF4_READ[0]" comment="READ COEFF4"/>
    <register addr="500303d8" rw_flags="R" width="2" name="DFE_RX_FDIQMC_COEFF0_READ[1]" comment="READ COEFF0"/>
    <register addr="500303dc" rw_flags="R" width="2" name="DFE_RX_FDIQMC_COEFF1_READ[1]" comment="READ COEFF1"/>
    <register addr="500303e0" rw_flags="R" width="2" name="DFE_RX_FDIQMC_COEFF2_READ[1]" comment="READ COEFF2"/>
    <register addr="500303e4" rw_flags="R" width="2" name="DFE_RX_FDIQMC_COEFF3_READ[1]" comment="READ COEFF3"/>
    <register addr="500303e8" rw_flags="R" width="2" name="DFE_RX_FDIQMC_COEFF4_READ[1]" comment="READ COEFF4"/>
  </block>
  <block name="pio_mux" comment="">
    <register addr="53000000" rw_flags="RW" width="2" name="PIO_INVERT_ENABLES" comment="Set a bit to 1 to invert the driven output."/>
    <register addr="53000004" rw_flags="R" width="2" name="PIO_INPUT_STATUS" comment="The PIO input status(after loopback)."/>
    <register addr="53000008" rw_flags="R" width="2" name="PIO_OUTPUT_STATUS" comment="The PIO output status."/>
    <register addr="5300000c" rw_flags="RW" width="2" name="PIO0_CFG" comment=""/>
    <register addr="53000010" rw_flags="RW" width="2" name="PIO1_CFG" comment=""/>
    <register addr="53000014" rw_flags="RW" width="2" name="PIO2_CFG" comment=""/>
    <register addr="53000018" rw_flags="RW" width="2" name="PIO3_CFG" comment=""/>
    <register addr="5300001c" rw_flags="RW" width="2" name="PIO4_CFG" comment=""/>
    <register addr="53000020" rw_flags="RW" width="2" name="PIO5_CFG" comment=""/>
    <register addr="53000024" rw_flags="RW" width="2" name="PIO6_CFG" comment=""/>
    <register addr="53000028" rw_flags="RW" width="2" name="PIO7_CFG" comment=""/>
    <register addr="5300002c" rw_flags="RW" width="2" name="PIO8_CFG" comment=""/>
    <register addr="53000030" rw_flags="RW" width="2" name="PIO9_CFG" comment=""/>
    <register addr="53000034" rw_flags="RW" width="2" name="PIO10_CFG" comment=""/>
    <register addr="53000038" rw_flags="RW" width="2" name="PIO11_CFG" comment=""/>
    <register addr="5300003c" rw_flags="RW" width="2" name="PIO12_CFG" comment=""/>
    <register addr="53000040" rw_flags="RW" width="2" name="PIO13_CFG" comment=""/>
    <register addr="53000044" rw_flags="RW" width="2" name="PIO14_CFG" comment=""/>
    <register addr="53000048" rw_flags="RW" width="2" name="PIO15_CFG" comment=""/>
    <register addr="5300004c" rw_flags="RW" width="4" name="DEBUG_SERIALISER_CFG" comment=""/>
    <register addr="53000050" rw_flags="RW" width="4" name="PMU_SERIALISER_CFG" comment=""/>
    <register addr="53000054" rw_flags="RW" width="4" name="WL_SERIALISER_CFG" comment=""/>
    <register addr="53000058" rw_flags="RW" width="4" name="BT_SERIALISER_CFG" comment=""/>
    <register addr="5300005c" rw_flags="RW" width="4" name="COEX_SERIALISER_CFG" comment=""/>
    <register addr="53000060" rw_flags="RW" width="4" name="SH_PROC_SERIALISER_CFG" comment=""/>
    <register addr="53000064" rw_flags="RW" width="1" name="BBIC_RFIC_CTRL0_MUX_CTRL" comment=""/>
    <register addr="53000068" rw_flags="RW" width="1" name="BBIC_RFIC_CTRL1_MUX_CTRL" comment=""/>
    <register addr="5300006c" rw_flags="RW" width="1" name="BBIC_RFIC_CTRL2_MUX_CTRL" comment=""/>
    <register addr="53000070" rw_flags="RW" width="1" name="BBIC_RFIC_CTRL3_MUX_CTRL" comment=""/>
    <register addr="53000074" rw_flags="RW" width="1" name="BBIC_CAPTURE_TRIG_MUX_CTRL" comment=""/>
    <register addr="53000078" rw_flags="RW" width="4" name="DEBUG_DESERIALISER_CFG" comment="Configuration for the RFIC debug de-serialisers"/>
    <register addr="5300007c" rw_flags="RW" width="4" name="DEBUG_DESERIALISER_CFG2" comment="Second configuration register for the RFIC debug de-serialisers"/>
    <register addr="53000080" rw_flags="R" width="4" name="DEBUG_DESERIALISER_STATUS" comment="Status register for the RFIC debug de-serialisers"/>
    <register addr="53000084" rw_flags="R" width="4" name="DEBUG_DESERIALISER_MONITOR" comment="Monitor register for the RFIC debug de-serialisers"/>
  </block>
  <block name="wl_bba_0" comment="">
    <register addr="50040000" rw_flags="RW" width="2" name="BB_LEG_DUP_DET_CONFIG_I0" comment="Contains parameters used for Non-HT Duplicate detection for 40MHz mode."/>
    <register addr="50040004" rw_flags="R" width="2" name="BB_TX_PACK_START_STATUS_I0" comment="The start time of the OFDM transmit packet, relative to the hardware timer, in units of 400 ns. For packets having a preamble, this points to the beginning of that preamble."/>
    <register addr="50040008" rw_flags="RW" width="1" name="BB_TX_PACK_TYPE_I0" comment="Packet type : should be set to TYPE_80211A for 11a/n. See definition of BB_PACK_TYPE for value."/>
    <register addr="5004000c" rw_flags="RW" width="1" name="BB_TX_PREAMB_TYPE_I0" comment="Packet preamble type : should be set to PRE_80211A for 11a/n. See definition of BB_PREAMBLE_TYPE for value."/>
    <register addr="50040010" rw_flags="R" width="2" name="BB_TX_PACK_RATE_STATUS_I0" comment="Packet type, rate and channel bandwidth."/>
    <register addr="50040014" rw_flags="R" width="1" name="BB_TX_PACK_RATE_EXT_STATUS_I0" comment="extend bits of BB_TX_PACK_RATE_STATUS for 11ac."/>
    <register addr="50040018" rw_flags="R" width="2" name="BB_TX_PACK_OPTIONS_STATUS_I0" comment="Packet transmit options."/>
    <register addr="5004001c" rw_flags="R" width="2" name="BB_TX_SIGNAL_FIELD_STATUS_I0" comment="Signal field."/>
    <register addr="50040020" rw_flags="R" width="2" name="BB_TX_PACK_SCAN_CONFIG_STATUS_I0" comment="Scan accelerator configuration."/>
    <register addr="50040024" rw_flags="R" width="2" name="BB_TX_PACK_PLEN_1_STATUS_I0" comment="For Hiperlan2: The number of OFDM symbols in the first data part of the packet. For 802.11a: bit 0 is bit 10 of N_data, where N_data is the number of OFDM symbols in the 'Data' part of the burst. Bits [8:1] contain the number of bits transmitted in the last OFDM symbol, including the 6 tail bits. For 802.11n non-STBC: bits [10:0] contain the number of bits transmitted in the last OFDM symbol, including the 6 tail bits. For 802.11n STBC: bits [10:0] contain the number of bits transmitted in the last pair of OFDM symbols, including the 6 tail bits."/>
    <register addr="50040028" rw_flags="R" width="2" name="BB_TX_PACK_PLEN_2_STATUS_I0" comment="For Hiperlan 2: The number of OFDM symbols in the second data part of the packet. For 802.11a: Bits [9:0] contain bits [9:0] of N_data. For 802.11n: Bits [14:0] contain [bits [14:0] of] N_data. Bit 15 indicates LDPC Extra OFDM symbol."/>
    <register addr="5004002c" rw_flags="RW" width="1" name="BB_TX_PACK_P1_START_I0" comment="Bit 0 is one if the first data part of the packet has P1 puncturing, else is zero. Bit 1 is one if the second data part of the packet has P1 puncturing, else is zero. 11a/n does not use P1 puncturing."/>
    <register addr="50040030" rw_flags="RW" width="1" name="BB_TX_PACK_CRC_TYPE_I0" comment="Bit 0 indicates the CRC type for the first data part of the burst (0 = CRC16, 1 = CRC24). Bit 1 indicates the CRC type for the second data part of the burst"/>
    <register addr="50040034" rw_flags="R" width="2" name="BB_TX_PACK_CRC_PERIOD_STATUS_I0" comment="For Hiperlan2: The CRC period i.e. the number of bytes over which the CRC is computed within each of the data parts of the packet. Bits [5:0] are the CRC period for the first data part of the packet, bits [11:6] are the CRC period for the second part. For 802.11a and 802.11n: The number of bytes of the payload, including the four CRC32 bytes."/>
    <register addr="50040038" rw_flags="RW" width="2" name="BB_TX_PACK_CRC_N_PERIODS_I0" comment="The number of CRC periods in each part of the packet. Bits [7:0] - the number of CRC periods in the first part of the packet. Bits [15:8] - the number of CRC periods in the second part of the packet."/>
    <register addr="5004003c" rw_flags="RW" width="1" name="BB_TX_WARMUP_I0" comment="The TX warmup time, in units of 400 ns."/>
    <register addr="50040040" rw_flags="RW" width="1" name="BB_TX_INT_MASK_I0" comment="Interrupt mask register. Setting a bit in this register against an interrupt cause bit position, ensures that it generates an interrupt."/>
    <register addr="50040044" rw_flags="R" width="1" name="BB_TX_INT_CAUSE_I0" comment="Interrupt cause register. Read by the host to determine why it was interrupted."/>
    <register addr="50040048" rw_flags="RW" width="1" name="BB_TX_INT_CLEAR_I0" comment="Interrupt clear register. Writing a one to an interrupt cause bit position clears the associated bit in the BB_**_INT_CAUSE register."/>
    <register addr="5004004c" rw_flags="RW" width="1" name="BB_TX_TIMING_I0" comment="Tx timing adjust control to allow correction for TX latency"/>
    <register addr="50040050" rw_flags="RW" width="1" name="BB_RX_INT_MASK_I0" comment="Interrupt mask register. Setting a bit in this register against an interrupt cause bit position, ensures that it generates an interrupt."/>
    <register addr="50040054" rw_flags="R" width="1" name="BB_RX_INT_CAUSE_I0" comment="Interrupt cause register. Read by the host to determine why it was interrupted."/>
    <register addr="50040058" rw_flags="RW" width="1" name="BB_RX_INT_CLEAR_I0" comment="Interrupt clear register. Writing a one to an interrupt cause bit position clears the associated bit in the BB_**_INT_CAUSE register."/>
    <register addr="5004005c" rw_flags="R" width="1" name="BB_TX_PACK_QUEUE_I0" comment="The number of packets queued for TX by the host and not yet completed."/>
    <register addr="50040060" rw_flags="R" width="1" name="BB_RX_PACK_QUEUE_I0" comment="The number of packets queued for RX by the host and not yet completed."/>
    <register addr="50040064" rw_flags="RW" width="1" name="BB_TX_SCRAMBLER_SEED_I0" comment="Scrambler seed for transmitted bursts. If this register is set to zero, then a pseudo-random scrambler seed is automatically generated for every transmit burst. If this register is set to a non-zero value, then that value is used as the scrambler seed for transmitted bursts."/>
    <register addr="50040068" rw_flags="RW" width="4" name="BB_RX_CONFIG_I0" comment="Receiver configuration"/>
    <register addr="5004006c" rw_flags="RW" width="2" name="BB_RX_CONFIG2_I0" comment="Receiver configuration"/>
    <register addr="50040070" rw_flags="RW" width="1" name="BB_SIGB_SEGPARS_I0" comment="Enable VHTSIGB Segment parsing and deparsing in Transmitter and Receiver"/>
    <register addr="50040074" rw_flags="RW" width="1" name="BB_RX_CONFIG3_I0" comment="Receiver configuration"/>
    <register addr="50040078" rw_flags="RW" width="1" name="BB_RX_PLL_COEFFS_I0" comment="Frequency tracking PLL coefficients"/>
    <register addr="5004007c" rw_flags="RW" width="2" name="BB_RX_DEMAP_METRIC_A_I0" comment="Demapper soft-decision metric as used by the Viterbi decoder"/>
    <register addr="50040080" rw_flags="RW" width="2" name="BB_RX_DEMAP_METRIC_B_I0" comment="Demapper soft-decision metric as used by the Viterbi decoder"/>
    <register addr="50040084" rw_flags="R" width="1" name="BB_STATUS_I0" comment=""/>
    <register addr="50040088" rw_flags="R" width="2" name="BB_FREQ_OFFSET_I0" comment="Frequency offset for the last received burst"/>
    <register addr="5004008c" rw_flags="R" width="2" name="BB_SIGNAL_QUALITY_I0" comment="Bits 15:8 - The estimated EVM for the receive channel. Bits 7:0 - The estimated SNR, based on the burst  preamble, for the receive channel"/>
    <register addr="50040090" rw_flags="R" width="2" name="BB_SIGNAL_QUALITY_DUAL_I0" comment="Bits 15:8 - The estimated EVM for the dual receive channel. Bits 7:0 - The estimated SNR, based on the burst  preamble, for the dual receive channel"/>
    <register addr="50040094" rw_flags="RW" width="1" name="BB_BBA_FREQ_OFFSET_MASK_CONFIG_I0" comment="Reduce the reliability of soft decsions on inner carriers (+/-1, +/-2) when estimated frequency offset exceeds certain thresholds OR permanently reduce the reliability on inner carriers regardless of frequency offset."/>
    <register addr="50040098" rw_flags="RW" width="2" name="BB_BBA_FREQ_OFFSET_MASK_CFG_MA_SC_20M_I0" comment="Reduce the reliability of soft decision on the most affected subcarriers for 20/40MHz bandwidth(1 2 3 or -1 -2 -3, when offset frequency is positive,, it corresponds to -1 -2 and -3"/>
    <register addr="5004009c" rw_flags="RW" width="2" name="BB_BBA_FREQ_OFFSET_MASK_CFG_LA_SC_20M_I0" comment="Reduce the reliability of soft decision on the less affected subcarriers for 20/40MHz bandwidth(1 2 3 or -1 -2 -3, when offset frequency is positive,, it corresponds to 1 2 and 3"/>
    <register addr="500400a0" rw_flags="RW" width="2" name="BB_BBA_FREQ_OFFSET_MASK_CFG_MA_SC_10M_I0" comment="Reduce the reliability of soft decision on the most affected subcarriers for 10MHz bandwidth(1 2 3 or -1 -2 -3, when offset frequency is positive,, it corresponds to -1 -2 and -3"/>
    <register addr="500400a4" rw_flags="RW" width="2" name="BB_BBA_FREQ_OFFSET_MASK_CFG_LA_SC_10M_I0" comment="Reduce the reliability of soft decision on the less affected subcarriers for 10MHz bandwidth(1 2 3 or -1 -2 -3, when offset frequency is positive,, it corresponds to 1 2 and 3"/>
    <register addr="500400a8" rw_flags="RW" width="2" name="BB_BBA_FREQ_OFFSET_MASK_CFG_MA_SC_5M_I0" comment="Reduce the reliability of soft decision on the most affected subcarriers for 5MHz bandwidth(1 2 3 or -1 -2 -3, when offset frequency is positive,, it corresponds to -1 -2 and -3"/>
    <register addr="500400ac" rw_flags="RW" width="2" name="BB_BBA_FREQ_OFFSET_MASK_CFG_LA_SC_5M_I0" comment="Reduce the reliability of soft decision on the less affected subcarriers for 5MHz bandwidth(1 2 3 or -1 -2 -3, when offset frequency is positive,, it corresponds to 1 2 and 3"/>
    <register addr="500400b0" rw_flags="RW" width="2" name="BB_CTRACK_UNREL_I0" comment="Thresholds to define which values of soft bits should disable channel tracking. When below ABS_THRESH on any valid soft bit, channel tracking is disabled for that subcarrier"/>
    <register addr="500400b4" rw_flags="RW" width="2" name="BB_SOFT_WEIGH_FREQ_OFFSET_HIGH_THRESH_20M_40M_I0" comment="the high threshold value for frequency offset in soft weigh for 20/40MHz bandwidth, it is derived by 122 KHz/20 MHz * 2^16"/>
    <register addr="500400b8" rw_flags="RW" width="2" name="BB_SOFT_WEIGH_FREQ_OFFSET_LOW_THRESH_20M_40M_I0" comment="the low threshold value for frequency offset in soft weigh for 20/40MHz bandwidth, it is derived by 50 KHz/20 MHz * 2^16"/>
    <register addr="500400bc" rw_flags="RW" width="2" name="BB_SOFT_WEIGH_FREQ_OFFSET_HIGH_THRESH_10M_I0" comment="the high threshold value for frequency offset in soft weigh for 10MHz bandwidth, it is derived by 84 KHz/10 MHz * 2^16"/>
    <register addr="500400c0" rw_flags="RW" width="2" name="BB_SOFT_WEIGH_FREQ_OFFSET_LOW_THRESH_10M_I0" comment="the low threshold value for frequency offset in soft weigh for 10MHz bandwidth, it is derived by 14 KHz/10 MHz * 2^16"/>
    <register addr="500400c4" rw_flags="RW" width="2" name="BB_SOFT_WEIGH_FREQ_OFFSET_HIGH_THRESH_5M_I0" comment="the high threshold value for frequency offset in soft weigh for 5MHz bandwidth, it is derived by 75 KHz/5 MHz * 2^16"/>
    <register addr="500400c8" rw_flags="RW" width="2" name="BB_SOFT_WEIGH_FREQ_OFFSET_LOW_THRESH_5M_I0" comment="the low threshold value for frequency offset in soft weigh for 5MHz bandwidth, it is derived by 31KHz/5 MHz * 2^16"/>
    <register addr="500400cc" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_SISO_BCC_AWGN_I0" comment="DEMAP SISO BCC AWGN QFAC configuration"/>
    <register addr="500400d0" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_AWGN_I0" comment="MLD MIMO BCC AWGN QFAC configuration"/>
    <register addr="500400d4" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_BCC_FADING_I0" comment="DEMAP SISO BCC FADING QFAC configuration"/>
    <register addr="500400d8" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_SISO_BCC_FADING_MCS7_I0" comment="DEMAP SISO BCC FADING MCS7 QFAC configuration"/>
    <register addr="500400dc" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_SISO_BCC_FADING_MCS8_I0" comment="DEMAP SISO BCC FADING MCS8 QFAC configuration"/>
    <register addr="500400e0" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_SISO_BCC_FADING_MCS9_I0" comment="DEMAP SISO BCC FADING MCS9 QFAC configuration"/>
    <register addr="500400e4" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS0_I0" comment="DEMAP MIMO BCC FADING MCS0 QFAC configuration"/>
    <register addr="500400e8" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS1_I0" comment="DEMAP MIMO BCC FADING MCS1 QFAC configuration"/>
    <register addr="500400ec" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS2_I0" comment="DEMAP MIMO BCC FADING MCS2 QFAC configuration"/>
    <register addr="500400f0" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS3_I0" comment="DEMAP MIMO BCC FADING MCS3 QFAC configuration"/>
    <register addr="500400f4" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS4_I0" comment="DEMAP MIMO BCC FADING MCS4 QFAC configuration"/>
    <register addr="500400f8" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS5_I0" comment="DEMAP MIMO BCC FADING MCS5 QFAC configuration"/>
    <register addr="500400fc" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS6_I0" comment="DEMAP MIMO BCC FADING MCS6 QFAC configuration"/>
    <register addr="50040100" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS7_I0" comment="DEMAP MIMO BCC FADING MCS7 QFAC configuration"/>
    <register addr="50040104" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS8_I0" comment="DEMAP MIMO BCC FADING MCS8 QFAC configuration"/>
    <register addr="50040108" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS9_I0" comment="DEMAP MIMO BCC FADING MCS9 QFAC configuration"/>
    <register addr="5004010c" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_SISO_LDPC_AWGN_I0" comment="DEMAP SISO LDPC AWGN QFAC configuration"/>
    <register addr="50040110" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_AWGN_I0" comment="MLD MIMO LDPC AWGN QFAC configuration"/>
    <register addr="50040114" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS0_I0" comment="DEMAP SISO LDPC FADING MCS0 QFAC configuration"/>
    <register addr="50040118" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS1_I0" comment="DEMAP SISO LDPC FADING MCS1 QFAC configuration"/>
    <register addr="5004011c" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS2_I0" comment="DEMAP SISO LDPC FADING MCS2 QFAC configuration"/>
    <register addr="50040120" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS3_I0" comment="DEMAP SISO LDPC FADING MCS3 QFAC configuration"/>
    <register addr="50040124" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS4_I0" comment="DEMAP SISO LDPC FADING MCS4 QFAC configuration"/>
    <register addr="50040128" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS5_I0" comment="DEMAP SISO LDPC FADING MCS5 QFAC configuration"/>
    <register addr="5004012c" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS6_I0" comment="DEMAP SISO LDPC FADING MCS6 QFAC configuration"/>
    <register addr="50040130" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS7_I0" comment="DEMAP SISO LDPC FADING MCS7 QFAC configuration"/>
    <register addr="50040134" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS8_I0" comment="DEMAP SISO LDPC FADING MCS8 QFAC configuration"/>
    <register addr="50040138" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS9_I0" comment="DEMAP SISO LDPC FADING MCS9 QFAC configuration"/>
    <register addr="5004013c" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS10_I0" comment="DEMAP SISO LDPC FADING MCS10 QFAC configuration"/>
    <register addr="50040140" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS11_I0" comment="DEMAP SISO LDPC FADING MCS11 QFAC configuration"/>
    <register addr="50040144" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS0_I0" comment="DEMAP MIMO LDPC FADING MCS0 QFAC configuration"/>
    <register addr="50040148" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS1_I0" comment="DEMAP MIMO LDPC FADING MCS1 QFAC configuration"/>
    <register addr="5004014c" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS2_I0" comment="DEMAP MIMO LDPC FADING MCS2 QFAC configuration"/>
    <register addr="50040150" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS3_I0" comment="DEMAP MIMO LDPC FADING MCS3 QFAC configuration"/>
    <register addr="50040154" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS4_I0" comment="DEMAP MIMO LDPC FADING MCS4 QFAC configuration"/>
    <register addr="50040158" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS5_I0" comment="DEMAP MIMO LDPC FADING MCS5 QFAC configuration"/>
    <register addr="5004015c" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS6_I0" comment="DEMAP MIMO LDPC FADING MCS6 QFAC configuration"/>
    <register addr="50040160" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS7_I0" comment="DEMAP MIMO LDPC FADING MCS7 QFAC configuration"/>
    <register addr="50040164" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS8_I0" comment="DEMAP MIMO LDPC FADING MCS8 QFAC configuration"/>
    <register addr="50040168" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS9_I0" comment="DEMAP MIMO LDPC FADING MCS9 QFAC configuration"/>
    <register addr="5004016c" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_STBC_BCC_AWGN_I0" comment="DEMAP STBC BCC AWGN QFAC configuration"/>
    <register addr="50040170" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_STBC_BCC_FADING_I0" comment="DEMAP STBC BCC FADING QFAC configuration"/>
    <register addr="50040174" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_STBC_LDPC_AWGN_I0" comment="DEMAP STBC LDPC AWGN QFAC configuration"/>
    <register addr="50040178" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_STBC_LDPC_FADING_I0" comment="DEMAP STBC LDPC FADING QFAC configuration"/>
    <register addr="5004017c" rw_flags="RW" width="2" name="BB_DEMAP_LLR_DOWN_I0" comment="DEMAP LLR DOWN configuration"/>
    <register addr="50040180" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_BF_LDPC_AWGN_I0" comment="DEMAP BEAMFORM LDPC AWGN QFAC configuration"/>
    <register addr="50040184" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_BF_LDPC_FADING_I0" comment="DEMAP BEAMFORM LDPC FADING QFAC configuration"/>
    <register addr="50040188" rw_flags="RW" width="2" name="BB_DEMAP_NOISE_VARIANCE_I0" comment="DEMAP NOISE VARIANCE Forcing"/>
    <register addr="5004018c" rw_flags="RW" width="1" name="BB_DEMAP_NUDGE_GAIN_ADAPT_I0" comment="When set, apply Radio nudge again"/>
    <register addr="50040190" rw_flags="RW" width="2" name="BB_PILOT_PHASE_LIMIT_I0" comment="Limit the absolute pilot angle correction. This is an 11-bit unsigned number in RTL phase format (max value 1024). RTL phase format = (angle in deg / 180) * 1024. (Default = 0.4 radians)"/>
    <register addr="50040194" rw_flags="RW" width="1" name="BB_SAMP_OFFSET_I0" comment="Sampling offset. Data symbols are sampled at a position -BB_SAMP_OFFSET with respect to the beginning of the data part of the symbol."/>
    <register addr="50040198" rw_flags="RW" width="2" name="BB_DEBUG_SELECT_I0" comment="Select the set of signals output at the debug port"/>
    <register addr="5004019c" rw_flags="RW" width="2" name="BB_RX_MISC_CONFIG_I0" comment=""/>
    <register addr="500401a0" rw_flags="RW" width="2" name="BB_MIMO_RATE_MASK_I0" comment="Control rejection of HT and VHT 40MHz packets with certain MIMO rates"/>
    <register addr="500401a4" rw_flags="RW" width="2" name="BB_VHT_SS1_RATE_MASK_I0" comment="Control rejection of VHT 80MHz single spatial stream (or STBC) packets with certain rates"/>
    <register addr="500401a8" rw_flags="RW" width="2" name="BB_VHT_SS2_RATE_MASK_I0" comment="Control rejection of VHT two spatial stream packets with certain rates"/>
    <register addr="500401ac" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG1_I0" comment="synchronizer configuration"/>
    <register addr="500401b0" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG2_I0" comment="synchronizer configuration"/>
    <register addr="500401b4" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG3_I0" comment="synchronizer configuration"/>
    <register addr="500401b8" rw_flags="RW" width="1" name="BB_RX_SYNC_CONFIG4_I0" comment="synchronizer configuration"/>
    <register addr="500401bc" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG5_I0" comment="synchronizer configuration "/>
    <register addr="500401c0" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG6_I0" comment="synchronizer configuration "/>
    <register addr="500401c4" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG7_I0" comment="synchronizer configuration "/>
    <register addr="500401c8" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG8_I0" comment="Lower limit on quantization to avoid excessive AGC action "/>
    <register addr="500401cc" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG9_I0" comment="High limit on quantization to avoid excessive AGC action"/>
    <register addr="500401d0" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG10_I0" comment="Number of samples to advance the start the LTF search window"/>
    <register addr="500401d4" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG11_I0" comment="synchronizer configuration "/>
    <register addr="500401d8" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG12_I0" comment="synchronizer configuration for new new STBC sync "/>
    <register addr="500401dc" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG13_I0" comment="synchronizer configuration for new new STBC sync "/>
    <register addr="500401e0" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG14_I0" comment="LTF lock limited by distance from max peak "/>
    <register addr="500401e4" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG15_I0" comment="Threshold for comparing the combined STF correlation"/>
    <register addr="500401e8" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG16_I0" comment=" Threshold for comparing the combined STF correlation"/>
    <register addr="500401ec" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG17_I0" comment=" First and second 40MHz sync split filter"/>
    <register addr="500401f0" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG18_I0" comment=" 80MHz sync split filter"/>
    <register addr="500401f4" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG19_I0" comment="Configuration for detection logic for CCA primary and secondary"/>
    <register addr="500401f8" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG20_I0" comment="STF sync detector configuration"/>
    <register addr="500401fc" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG21_I0" comment="STF sync configuration with spare bits"/>
    <register addr="50040200" rw_flags="RW" width="4" name="BB_RX_SYNC_NOTCH1_I0" comment="Tone notch configuration"/>
    <register addr="50040204" rw_flags="RW" width="4" name="BB_RX_SYNC_NOTCH2_I0" comment="Tone notch configuration"/>
    <register addr="50040208" rw_flags="RW" width="4" name="BB_RX_SYNC_NOTCH3_I0" comment="Tone notch configuration"/>
    <register addr="5004020c" rw_flags="RW" width="4" name="BB_RX_SYNC_NOTCH4_I0" comment="Tone notch configuration"/>
    <register addr="50040210" rw_flags="RW" width="4" name="BB_SYNC_STF_WEIGHT_CFG0_I0" comment="STF group weight factor"/>
    <register addr="50040214" rw_flags="RW" width="4" name="BB_SYNC_STF_WEIGHT_CFG1_I0" comment="STF group weight factor"/>
    <register addr="50040218" rw_flags="RW" width="1" name="BB_SYNC_CCA_WEIGHT_SEL_I0" comment="CCA weighted combing sel"/>
    <register addr="5004021c" rw_flags="RW" width="1" name="BB_SYNC_LTF_WEIGHT_COMBINE_MODE_I0" comment="LTF MF weighted combine mode 0: no weight, 1:Bc0+0.75xBc0, 2:Bc0+0.625Bc0, 3:Bc0+0.5Bc0"/>
    <register addr="50040220" rw_flags="RW" width="1" name="BB_SYNC_LTF_MODE_I0" comment="LTF Peak selection control"/>
    <register addr="50040224" rw_flags="RW" width="1" name="BB_SYNC_LTF_THR2_I0" comment="LTF peak threshold(for index7)"/>
    <register addr="50040228" rw_flags="RW" width="1" name="BB_RX_SYNC_CCA_CFG_I0" comment="Configure to take into account the CCA of each 20M subband for the primary channel"/>
    <register addr="5004022c" rw_flags="RW" width="1" name="BB_BFEE_FDBK_DSNR_EXPR_I0" comment="Beemforming feedback deltan snr expr control"/>
    <register addr="50040230" rw_flags="RW" width="1" name="BB_BFEE_MU_CBR_I0" comment="Indication of MU/SU CBR, 0:SU, 1:MU"/>
    <register addr="50040234" rw_flags="R" width="2" name="BB_BFEE_CBR_LENGTH_I0" comment="Beamformee CBR Length."/>
    <register addr="50040238" rw_flags="R" width="2" name="BB_CEST_RE_DATA_I0" comment="Real part of data for calibration channel estimation"/>
    <register addr="5004023c" rw_flags="R" width="2" name="BB_CEST_IM_DATA_I0" comment="Imaginary part of data for calibration channel estimation"/>
    <register addr="50040240" rw_flags="R" width="1" name="BB_CEST_LTF_OFFSET_I0" comment="20 MHz Sample offset for values read from BB_CEST_ADDR[8:6]=='000' for an 11a or green-field packet. Value is in 2's complement. Negative values indicate that the LTF sync is earlier than the position indicated by the STF sync."/>
    <register addr="50040244" rw_flags="RW" width="4" name="BB_CEST_CONFIG_I0" comment="Configuration for handling data for calibration"/>
    <register addr="50040248" rw_flags="RW" width="2" name="BB_CEST_STS_MULT_I0" comment="Data needed for Space-Time-Stream combination (needed for BB_CEST_CONFIG_MODE='10')"/>
    <register addr="5004024c" rw_flags="RW" width="2" name="BB_CEST_STS_PHASE_I0" comment="Phase rotation for Space-Time-Stream channel estimate (needed for BB_CEST_CONFIG_MODE='10')"/>
    <register addr="50040250" rw_flags="R" width="2" name="BB_CEST_MAX_I0" comment="Maximum channel estimate value across all Space-Time-Streams (needed to normalise the channel estimates sent for calibration purposes)"/>
    <register addr="50040254" rw_flags="R" width="1" name="BB_CEST_STATUS_I0" comment="Status information for calibration support"/>
    <register addr="50040258" rw_flags="RW" width="2" name="BB_CEST_ADDR_I0" comment="Channel estimate value requested"/>
    <register addr="5004025c" rw_flags="RW" width="2" name="BB_CEST_SMOOTH_SNR_THRESHOLD1_I0" comment="SNR Threshold 1 channel smoothing. To program value, multiply desired SNR (in dB) by 4. If signal SNR is above threshold 1, then filter option 0 is used in channel smoothing."/>
    <register addr="50040260" rw_flags="RW" width="2" name="BB_CEST_SMOOTH_SNR_THRESHOLD2_I0" comment="SNR Threshold 2 for channel smoothing. To program value, multiply desired SNR (in dB) by 4. If signal SNR is above threshold 5, then filter option 4 is used in channel smoothing. If below, filter option 5 is used."/>
    <register addr="50040264" rw_flags="RW" width="2" name="BB_CEST_SMOOTH_SNR_THRESHOLD3_I0" comment="SNR Threshold 3 for channel smoothing. To program value, multiply desired SNR (in dB) by 4.If signal SNR is above threshold 2, then filter option 1 is used in channel smoothing."/>
    <register addr="50040268" rw_flags="RW" width="2" name="BB_CEST_SMOOTH_SNR_THRESHOLD4_I0" comment="SNR Threshold 4 for channel smoothing. To program value, multiply desired SNR (in dB) by 4. If signal SNR is above threshold 3, then filter option 2 is used in channel smoothing."/>
    <register addr="5004026c" rw_flags="RW" width="2" name="BB_CEST_SMOOTH_SNR_THRESHOLD5_I0" comment="SNR Threshold 5 for channel smoothing. To program value, multiply desired SNR (in dB) by 4. If signal SNR is above threshold 4, then filter option 3 is used in channel smoothing."/>
    <register addr="50040270" rw_flags="RW" width="2" name="BB_MRC_CONFIG_BASIC_I0" comment="Control register to configure OFDM Maximum Ratio Combining and Basic MRC block"/>
    <register addr="50040274" rw_flags="RW" width="2" name="BB_MRC_CONFIG_STBC_I0" comment="Unused register"/>
    <register addr="50040278" rw_flags="RW" width="2" name="BB_MRC_CONFIG_STREAM2_I0" comment="Unused register"/>
    <register addr="5004027c" rw_flags="RW" width="2" name="BB_MRC_CONFIG_FINAL_I0" comment="Unused register"/>
    <register addr="50040280" rw_flags="RW" width="1" name="BB_MRC_NONCONT_BANDS_I0" comment="Control register to whether MRC non contiguous bands or not."/>
    <register addr="50040284" rw_flags="RW" width="2" name="BB_SC_SOFT_WEIGH_ADDRESS_I0" comment="This register is used for the first step of a two stage process to reduce reliability of individual subcarriers. First this register is set to a subcarrier range, and then BB_SC_SOFT_WEIGH_ENABLE is used to select which sub-carrier is being targetted within this range"/>
    <register addr="50040288" rw_flags="RW" width="2" name="BB_SC_SOFT_WEIGH_ENABLE_I0" comment="Each bit can enable reduced reliability if set. The sub-carrier affected by each bit is BB_SC_SOFT_WEIGH_ADDRESS+bit_index. e.g. with BB_SC_SOFT_WEIGH_ADDRESS=-16, bit 0 targets sub-carrier -16, bit 1 targets -15 etc."/>
    <register addr="5004028c" rw_flags="R" width="2" name="BB_SC_SOFT_WEIGH_ENABLE_STATUS_I0" comment="Internal values of BB_SC_SOFT_WEIGH_ENABLE can be read by selecting the range using BB_SC_SOFT_WEIGH_ADDRESS and then reading this register. N.B. Sub-carriers that cannot be valid are returned as 0"/>
    <register addr="50040290" rw_flags="RW" width="2" name="BB_DD_CPE_CONFIG_I0" comment="Configuration for the Data Directed Common Phase Error calculation"/>
    <register addr="50040294" rw_flags="RW" width="1" name="BB_DD_CPE_CONFIG2_I0" comment="Configuration 2 for the Data Directed Common Phase Error calculation"/>
    <register addr="50040298" rw_flags="RW" width="2" name="BB_PTW70_CONFIG_I0" comment="Setup to allow detection and control relating to packets with strong phase wobble such as those from PTW70 test equipment"/>
    <register addr="5004029c" rw_flags="RW" width="2" name="BB_PTW70_CONFIG2_I0" comment="Setup 2 to allow detection and control relating to packets with strong phase wobble such as those from PTW70 test equipment"/>
    <register addr="500402a0" rw_flags="RW" width="1" name="BB_RX_RADIO_CS_CONFIG_I0" comment="RX Radio CS detection configuration for 80MHz bandwidth"/>
    <register addr="500402a4" rw_flags="RW" width="4" name="BB_RX_ENERGY_DET_THRESHOLD_I0" comment="RX energy detection threshold for primary and secondary 20MHz channel"/>
    <register addr="500402a8" rw_flags="RW" width="4" name="BB_LDPC_OFFSET_I0" comment="Min-Sum algorithm offset for LDPC decoder for AWGN and FADING"/>
    <register addr="500402ac" rw_flags="RW" width="4" name="BB_LDPC_OFFSET_1024QAM_I0" comment="Min-Sum algorithm offset for LDPC decoder for 1024QAM"/>
    <register addr="500402b0" rw_flags="RW" width="4" name="BB_QAM1024_ENABLE_I0" comment="QAM1024 Support Enable"/>
    <register addr="500402b4" rw_flags="RW" width="2" name="BB_CHDET_I0" comment="Channel Type Detection"/>
    <register addr="500402b8" rw_flags="RW" width="4" name="BB_CHDET_ZERO_THRESHOLD_SISO_I0" comment="Channel Type Detection Zero Threshold for SISO Case"/>
    <register addr="500402bc" rw_flags="RW" width="4" name="BB_CHDET_LOW_THRESHOLD_SISO_I0" comment="Channel Type Detection Low Threshold for SISO Case"/>
    <register addr="500402c0" rw_flags="RW" width="4" name="BB_CHDET_MID_THRESHOLD_SISO_I0" comment="Channel Type Detection Mid Threshold for SISO Case"/>
    <register addr="500402c4" rw_flags="RW" width="4" name="BB_CHDET_HIGH_THRESHOLD_SISO_I0" comment="Channel Type Detection High Threshold for SISO Case"/>
    <register addr="500402c8" rw_flags="RW" width="4" name="BB_CHDET_ZERO_THRESHOLD_STBC_I0" comment="Channel Type Detection Zero Threshold for STBC Case"/>
    <register addr="500402cc" rw_flags="RW" width="4" name="BB_CHDET_LOW_THRESHOLD_STBC_I0" comment="Channel Type Detection Low Threshold for STBC Case"/>
    <register addr="500402d0" rw_flags="RW" width="4" name="BB_CHDET_MID_THRESHOLD_STBC_I0" comment="Channel Type Detection Mid Threshold for STBC Case"/>
    <register addr="500402d4" rw_flags="RW" width="4" name="BB_CHDET_HIGH_THRESHOLD_STBC_I0" comment="Channel Type Detection High Threshold for STBC Case"/>
    <register addr="500402d8" rw_flags="RW" width="4" name="BB_CHDET_ZERO_THRESHOLD_BF_I0" comment="Channel Type Detection Zero Threshold for BF Case"/>
    <register addr="500402dc" rw_flags="RW" width="4" name="BB_CHDET_LOW_THRESHOLD_BF_I0" comment="Channel Type Detection Low Threshold for BF Case"/>
    <register addr="500402e0" rw_flags="RW" width="4" name="BB_CHDET_MID_THRESHOLD_BF_I0" comment="Channel Type Detection Mid Threshold for BF Case"/>
    <register addr="500402e4" rw_flags="RW" width="4" name="BB_CHDET_HIGH_THRESHOLD_BF_I0" comment="Channel Type Detection High Threshold for BF Case"/>
    <register addr="500402e8" rw_flags="RW" width="2" name="BB_RX_PAYLOAD_DET_THRESHOLD_I0" comment="RX payload detection threshold for all subbands"/>
    <register addr="500402ec" rw_flags="RW" width="1" name="BB_RX_PAYLOAD_DET_CONFIG_I0" comment="Payload Detector enables."/>
    <register addr="500402f0" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_NGI_CONFIG1_I0" comment="First configuration register for the normal guard interval (NGI) correlator within the OFDM Payload Detector."/>
    <register addr="500402f4" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_NGI_CONFIG2_I0" comment="Second configuration register for the normal guard interval (NGI) correlator within the OFDM Payload Detector."/>
    <register addr="500402f8" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_NGI_CONFIG3_I0" comment="Third configuration register for the normal guard interval (NGI) correlator within the OFDM Payload Detector."/>
    <register addr="500402fc" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_NGI_CONFIG4_I0" comment="Fourth configuration register for the normal guard interval (NGI) correlator within the OFDM Payload Detector."/>
    <register addr="50040300" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_SGI_CONFIG1_I0" comment="First configuration register for the short guard interval (SGI) correlator within the OFDM Payload Detector."/>
    <register addr="50040304" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_SGI_CONFIG2_I0" comment="Second configuration register for the short guard interval (SGI) correlator within the OFDM Payload Detector."/>
    <register addr="50040308" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_SGI_CONFIG3_I0" comment="Third configuration register for the short guard interval (SGI) correlator within the OFDM Payload Detector."/>
    <register addr="5004030c" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_SGI_CONFIG4_I0" comment="Fourth configuration register for the short guard interval (SGI) correlator within the OFDM Payload Detector."/>
    <register addr="50040310" rw_flags="RW" width="1" name="BB_BBA_CCA_CFG_I0" comment="CCA ignore control on the primary channel, secondary channel, secondary 40 channel and secondary 80 channel."/>
    <register addr="50040314" rw_flags="RW" width="1" name="BB_MLD_CONFIG_I0" comment="MLD Configuration registers"/>
    <register addr="50040318" rw_flags="R" width="2" name="BB_BBA_DEBUG_I0" comment="Read access to BBA debug information. To see this data correctly, the enable bit BB_DEBUG_SELECT.BB_DEBUG_SELECT_EN must be set, to enable the register supplying this information."/>
    <register addr="5004031c" rw_flags="RW" width="2" name="BB_BBA_BF_TX_CONFIG_I0" comment="TX beamforming configuration."/>
    <register addr="50040320" rw_flags="RW" width="4" name="BB_BBA_BF_TX_KEYHOLE_I0" comment="TX beamforming configuration #2."/>
    <register addr="50040324" rw_flags="R" width="4" name="BB_BBA_BF_TX_STATUS1_I0" comment="Tx beamformer CBR category fields parsed."/>
    <register addr="50040328" rw_flags="R" width="4" name="BB_BBA_BF_TX_STATUS2_I0" comment="Tx beamformer fields parsed and DMA collision counter."/>
    <register addr="5004032c" rw_flags="R" width="4" name="BB_BBA_BF_TX_ANGLE_STORE_KEYHOLE_DATA_STATUS_I0" comment="This register is used to read the angle store data."/>
    <register addr="50040330" rw_flags="RW" width="4" name="BB_CEST_SMOOTHING_I0" comment="This register is used to control smoothing"/>
    <register addr="50040334" rw_flags="RW" width="4" name="BB_LDPC_CONFIG_I0" comment="LDPC configuration"/>
    <register addr="50040338" rw_flags="RW" width="1" name="BB_LDPC_RX_THROTTLE_ADDR_I0" comment="Address used to load different values to internal register to allow reduced data rate in LDPC output. Address to use is described in BB_LDPC_RX_THROTTLE_ADDR_REF"/>
    <register addr="5004033c" rw_flags="RW" width="2" name="BB_LDPC_RX_THROTTLE_I0" comment="Address used to load different values to internal register to allow reduced data rate in LDPC output"/>
    <register addr="50040340" rw_flags="RW" width="1" name="BB_CPE_PHASE_REG_EN_I0" comment="Enables the phase reg calculations in RTL"/>
    <register addr="50040344" rw_flags="R" width="2" name="BB_CPE_PHASE_MAX_I0" comment="Maximum CPE phase of a frame over all symbols"/>
    <register addr="50040348" rw_flags="R" width="2" name="BB_CPE_PHASE_MIN_I0" comment="Minimum CPE phase of a frame over all symbols"/>
    <register addr="5004034c" rw_flags="R" width="2" name="BB_CPE_PHASE_ACCUM_I0" comment="Phase accumulation of all symbol phase of the frame"/>
    <register addr="50040350" rw_flags="R" width="2" name="BB_CPE_PHASE_SQR_ACCUM_I0" comment="Accumulation of phase square over all symbols of the frame"/>
    <register addr="50040354" rw_flags="R" width="2" name="BB_CPE_PHASE_DIFF_ACCUM_I0" comment="Accumulation of phase difference over all symbols of the frame"/>
    <register addr="50040358" rw_flags="R" width="2" name="BB_CPE_NUM_ACCUM_I0" comment="Number of phases accumulated in the accumulation registers"/>
    <register addr="5004035c" rw_flags="RW" width="1" name="BB_FREQ_TRACK_REG_EN_I0" comment="Enables the frequency reg calculations in RTL"/>
    <register addr="50040360" rw_flags="R" width="2" name="BB_FREQ_TRACK_MAX_I0" comment="Maximum fine frequency of a frame over all symbols"/>
    <register addr="50040364" rw_flags="R" width="2" name="BB_FREQ_TRACK_MIN_I0" comment="Minimum fine frequency of a frame over all symbols"/>
    <register addr="50040368" rw_flags="R" width="2" name="BB_FREQ_TRACK_ACCUM_I0" comment="Fine frequency accumulation of all symbol phase of the frame"/>
    <register addr="5004036c" rw_flags="R" width="2" name="BB_FREQ_TRACK_SQR_ACCUM_I0" comment="Accumulation of fine frequency square over all symbols of the frame"/>
    <register addr="50040370" rw_flags="R" width="2" name="BB_FREQ_TRACK_NUM_ACCUM_I0" comment="Number of fine frequency accumulated in the accumulation registers"/>
    <register addr="50040374" rw_flags="RW" width="1" name="BB_EN_VHT_NUDGEAGAIN_I0" comment="When set enables nudge again for HT/VHT packets otherwise nudge again only for HT packets"/>
    <register addr="50040378" rw_flags="RW" width="4" name="BB_LTF_SYNC_LATENCY_I0" comment="Number of 20M clock cycles of LTF peak calculation latency"/>
    <register addr="5004037c" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT1_I0[0]" comment="Smoothing filter coefficient for SNR1 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50040380" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT1_I0[1]" comment="Smoothing filter coefficient for SNR1 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50040384" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT1_I0[2]" comment="Smoothing filter coefficient for SNR1 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50040388" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT1_I0[3]" comment="Smoothing filter coefficient for SNR1 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="5004038c" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT1_I0[4]" comment="Smoothing filter coefficient for SNR1 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50040390" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT1_I0[5]" comment="Smoothing filter coefficient for SNR1 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50040394" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT2_I0[0]" comment="Smoothing filter coefficient for SNR2 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50040398" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT2_I0[1]" comment="Smoothing filter coefficient for SNR2 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="5004039c" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT2_I0[2]" comment="Smoothing filter coefficient for SNR2 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403a0" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT2_I0[3]" comment="Smoothing filter coefficient for SNR2 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403a4" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT2_I0[4]" comment="Smoothing filter coefficient for SNR2 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403a8" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT2_I0[5]" comment="Smoothing filter coefficient for SNR2 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403ac" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT3_I0[0]" comment="Smoothing filter coefficient for SNR3 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403b0" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT3_I0[1]" comment="Smoothing filter coefficient for SNR3 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403b4" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT3_I0[2]" comment="Smoothing filter coefficient for SNR3 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403b8" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT3_I0[3]" comment="Smoothing filter coefficient for SNR3 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403bc" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT3_I0[4]" comment="Smoothing filter coefficient for SNR3 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403c0" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT3_I0[5]" comment="Smoothing filter coefficient for SNR3 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403c4" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT4_I0[0]" comment="Smoothing filter coefficient for SNR4 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403c8" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT4_I0[1]" comment="Smoothing filter coefficient for SNR4 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403cc" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT4_I0[2]" comment="Smoothing filter coefficient for SNR4 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403d0" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT4_I0[3]" comment="Smoothing filter coefficient for SNR4 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403d4" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT4_I0[4]" comment="Smoothing filter coefficient for SNR4 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403d8" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT4_I0[5]" comment="Smoothing filter coefficient for SNR4 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403dc" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT5_I0[0]" comment="Smoothing filter coefficient for SNR5 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403e0" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT5_I0[1]" comment="Smoothing filter coefficient for SNR5 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403e4" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT5_I0[2]" comment="Smoothing filter coefficient for SNR5 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403e8" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT5_I0[3]" comment="Smoothing filter coefficient for SNR5 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403ec" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT5_I0[4]" comment="Smoothing filter coefficient for SNR5 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403f0" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT5_I0[5]" comment="Smoothing filter coefficient for SNR5 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403f4" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT6_I0[0]" comment="Smoothing filter coefficient for SNR6 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403f8" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT6_I0[1]" comment="Smoothing filter coefficient for SNR6 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500403fc" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT6_I0[2]" comment="Smoothing filter coefficient for SNR6 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50040400" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT6_I0[3]" comment="Smoothing filter coefficient for SNR6 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50040404" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT6_I0[4]" comment="Smoothing filter coefficient for SNR6 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50040408" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT6_I0[5]" comment="Smoothing filter coefficient for SNR6 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="5004040c" rw_flags="R" width="1" name="BB_CEST_SMOOTH_DEBUG_I0" comment="Selected Smoothing filter type for debugging"/>
    <register addr="50040410" rw_flags="RW" width="4" name="BB_LPE_CONFIG_I0" comment="Linear phase estimation configuration"/>
    <register addr="50040414" rw_flags="RW" width="4" name="BB_CPE_CONFIG_I0" comment="BB DD CPE configuration"/>
    <register addr="50040418" rw_flags="RW" width="4" name="BB_DDCPE_PHASE_LIMIT_I0" comment="Phase limitation value for DD-CPE"/>
    <register addr="5004041c" rw_flags="RW" width="1" name="BB_DDCPE_PHASE_1024QAM_LIMIT_I0" comment="Phase limitation value for DD-CPE"/>
    <register addr="50040420" rw_flags="RW" width="4" name="BB_CPE_MMSE_WEIGHT_BANK0_I0" comment="Pilot weight for MMSE CPE"/>
    <register addr="50040424" rw_flags="RW" width="4" name="BB_CPE_MMSE_WEIGHT_BANK1_I0" comment="Pilot weight for MMSE CPE"/>
    <register addr="50040428" rw_flags="RW" width="4" name="BB_CPE_MMSE_WEIGHT_BANK2_I0" comment="Pilot weight for MMSE CPE"/>
    <register addr="5004042c" rw_flags="RW" width="4" name="BB_DDCPE_MMSE_PILOT_WEIGHT_BANK0_I0" comment="Pilot weight for MMSE DD-CPE"/>
    <register addr="50040430" rw_flags="RW" width="4" name="BB_DDCPE_MMSE_PILOT_WEIGHT_BANK1_I0" comment="Pilot weight for MMSE DD-CPE"/>
    <register addr="50040434" rw_flags="RW" width="2" name="BB_DDCPE_MMSE_PILOT_WEIGHT_BANK2_I0" comment="Pilot weight for MMSE DD-CPE"/>
    <register addr="50040438" rw_flags="RW" width="4" name="BB_DDCPE_MMSE_DATA_WEIGHT_BANK0_I0" comment="Data weight for MMSE DD-CPE"/>
    <register addr="5004043c" rw_flags="RW" width="4" name="BB_DDCPE_MMSE_DATA_WEIGHT_BANK1_I0" comment="Data weight for MMSE DD-CPE"/>
    <register addr="50040440" rw_flags="RW" width="2" name="BB_DDCPE_MMSE_DATA_WEIGHT_BANK2_I0" comment="Data weight for MMSE DD-CPE"/>
    <register addr="50040444" rw_flags="RW" width="4" name="BB_DDCPE_LLR_THRES_BCC_I0" comment="DDCPE LLR threshold for BCC"/>
    <register addr="50040448" rw_flags="RW" width="4" name="BB_DDCPE_LLR_THRES_LDPC_I0" comment="DDCPE LLR threshold for LDPC"/>
    <register addr="5004044c" rw_flags="RW" width="2" name="BB_MMSE_SYM_OFFSET_I0" comment="Symbol Offset to skip MMSE-CPE"/>
    <register addr="50040450" rw_flags="R" width="4" name="BB_DEBUG_STATUS_MISC_I0" comment="Misc Internal signal status"/>
    <register addr="50040454" rw_flags="RW" width="4" name="BB_GID_MEMBERSHIP_L_I0" comment="Membership status array"/>
    <register addr="50040458" rw_flags="RW" width="4" name="BB_GID_MEMBERSHIP_H_I0" comment="Membership status array"/>
    <register addr="5004045c" rw_flags="RW" width="4" name="BB_GID_USERPOSITION_LL_I0" comment="User Position Array 2 bits"/>
    <register addr="50040460" rw_flags="RW" width="4" name="BB_GID_USERPOSITION_LH_I0" comment="User Position Array 2 bits"/>
    <register addr="50040464" rw_flags="RW" width="4" name="BB_GID_USERPOSITION_HL_I0" comment="User Position Array 2 bits"/>
    <register addr="50040468" rw_flags="RW" width="4" name="BB_GID_USERPOSITION_HH_I0" comment="User Position Array 2 bits"/>
    <register addr="5004046c" rw_flags="RW" width="1" name="BB_IEEE_NDP_CTRL_I0" comment="NDP Decision Method Control"/>
    <register addr="50040470" rw_flags="RW" width="4" name="BASEBAND_TX_CONFIG_I0" comment="Config for PAPR module"/>
    <register addr="50040474" rw_flags="RW" width="2" name="BASEBAND_TX_CONFIG2_I0" comment="Config for Tx filtering stages and papr"/>
    <register addr="50040478" rw_flags="RW" width="1" name="BASEBAND_TX_EVM_PARAMS_I0" comment="Used to tune the gain in the upsample filters in preproc to enhance the Evm across the preproc"/>
    <register addr="5004047c" rw_flags="RW" width="4" name="BB_TX_SWED_PAPR_CONFIG_I0" comment="SWED PAPR Configuration"/>
    <register addr="50040480" rw_flags="RW" width="4" name="BB_DIRECTION_FIND_CONFIG_I0" comment="Configuration for direction finder"/>
    <register addr="50040484" rw_flags="R" width="4" name="BB_DIRECTION_FIND_PHASE_01_I0" comment="This register is used to read the phase of symbol 0 and 1 ."/>
    <register addr="50040488" rw_flags="R" width="4" name="BB_DIRECTION_FIND_PHASE_23_I0" comment="This register is used to read the phase of symbol 2 and 3 ."/>
    <register addr="5004048c" rw_flags="R" width="4" name="BB_DIRECTION_FIND_PHASE_45_I0" comment="This register is used to read the phase of symbol 4 and 5 ."/>
    <register addr="50040490" rw_flags="R" width="4" name="BB_DIRECTION_FIND_PHASE_67_I0" comment="This register is used to read the phase of symbol 6 and 7 ."/>
    <register addr="50040494" rw_flags="R" width="4" name="BB_DIRECTION_FIND_PHASE_89_I0" comment="This register is used to read the phase of symbol 8 and 9 ."/>
    <register addr="50040498" rw_flags="RW" width="1" name="BB_EVM_SIG_EN_I0" comment="EVM Sig. EN"/>
    <register addr="5004049c" rw_flags="RW" width="1" name="BB_DISABLE_NUDGE_GAIN_I0" comment="Nudge Gain Disable"/>
  </block>
  <block name="wl_bba_1" comment="">
    <register addr="50050000" rw_flags="RW" width="2" name="BB_LEG_DUP_DET_CONFIG_I1" comment="Contains parameters used for Non-HT Duplicate detection for 40MHz mode."/>
    <register addr="50050004" rw_flags="R" width="2" name="BB_TX_PACK_START_STATUS_I1" comment="The start time of the OFDM transmit packet, relative to the hardware timer, in units of 400 ns. For packets having a preamble, this points to the beginning of that preamble."/>
    <register addr="50050008" rw_flags="RW" width="1" name="BB_TX_PACK_TYPE_I1" comment="Packet type : should be set to TYPE_80211A for 11a/n. See definition of BB_PACK_TYPE for value."/>
    <register addr="5005000c" rw_flags="RW" width="1" name="BB_TX_PREAMB_TYPE_I1" comment="Packet preamble type : should be set to PRE_80211A for 11a/n. See definition of BB_PREAMBLE_TYPE for value."/>
    <register addr="50050010" rw_flags="R" width="2" name="BB_TX_PACK_RATE_STATUS_I1" comment="Packet type, rate and channel bandwidth."/>
    <register addr="50050014" rw_flags="R" width="1" name="BB_TX_PACK_RATE_EXT_STATUS_I1" comment="extend bits of BB_TX_PACK_RATE_STATUS for 11ac."/>
    <register addr="50050018" rw_flags="R" width="2" name="BB_TX_PACK_OPTIONS_STATUS_I1" comment="Packet transmit options."/>
    <register addr="5005001c" rw_flags="R" width="2" name="BB_TX_SIGNAL_FIELD_STATUS_I1" comment="Signal field."/>
    <register addr="50050020" rw_flags="R" width="2" name="BB_TX_PACK_SCAN_CONFIG_STATUS_I1" comment="Scan accelerator configuration."/>
    <register addr="50050024" rw_flags="R" width="2" name="BB_TX_PACK_PLEN_1_STATUS_I1" comment="For Hiperlan2: The number of OFDM symbols in the first data part of the packet. For 802.11a: bit 0 is bit 10 of N_data, where N_data is the number of OFDM symbols in the 'Data' part of the burst. Bits [8:1] contain the number of bits transmitted in the last OFDM symbol, including the 6 tail bits. For 802.11n non-STBC: bits [10:0] contain the number of bits transmitted in the last OFDM symbol, including the 6 tail bits. For 802.11n STBC: bits [10:0] contain the number of bits transmitted in the last pair of OFDM symbols, including the 6 tail bits."/>
    <register addr="50050028" rw_flags="R" width="2" name="BB_TX_PACK_PLEN_2_STATUS_I1" comment="For Hiperlan 2: The number of OFDM symbols in the second data part of the packet. For 802.11a: Bits [9:0] contain bits [9:0] of N_data. For 802.11n: Bits [14:0] contain [bits [14:0] of] N_data. Bit 15 indicates LDPC Extra OFDM symbol."/>
    <register addr="5005002c" rw_flags="RW" width="1" name="BB_TX_PACK_P1_START_I1" comment="Bit 0 is one if the first data part of the packet has P1 puncturing, else is zero. Bit 1 is one if the second data part of the packet has P1 puncturing, else is zero. 11a/n does not use P1 puncturing."/>
    <register addr="50050030" rw_flags="RW" width="1" name="BB_TX_PACK_CRC_TYPE_I1" comment="Bit 0 indicates the CRC type for the first data part of the burst (0 = CRC16, 1 = CRC24). Bit 1 indicates the CRC type for the second data part of the burst"/>
    <register addr="50050034" rw_flags="R" width="2" name="BB_TX_PACK_CRC_PERIOD_STATUS_I1" comment="For Hiperlan2: The CRC period i.e. the number of bytes over which the CRC is computed within each of the data parts of the packet. Bits [5:0] are the CRC period for the first data part of the packet, bits [11:6] are the CRC period for the second part. For 802.11a and 802.11n: The number of bytes of the payload, including the four CRC32 bytes."/>
    <register addr="50050038" rw_flags="RW" width="2" name="BB_TX_PACK_CRC_N_PERIODS_I1" comment="The number of CRC periods in each part of the packet. Bits [7:0] - the number of CRC periods in the first part of the packet. Bits [15:8] - the number of CRC periods in the second part of the packet."/>
    <register addr="5005003c" rw_flags="RW" width="1" name="BB_TX_WARMUP_I1" comment="The TX warmup time, in units of 400 ns."/>
    <register addr="50050040" rw_flags="RW" width="1" name="BB_TX_INT_MASK_I1" comment="Interrupt mask register. Setting a bit in this register against an interrupt cause bit position, ensures that it generates an interrupt."/>
    <register addr="50050044" rw_flags="R" width="1" name="BB_TX_INT_CAUSE_I1" comment="Interrupt cause register. Read by the host to determine why it was interrupted."/>
    <register addr="50050048" rw_flags="RW" width="1" name="BB_TX_INT_CLEAR_I1" comment="Interrupt clear register. Writing a one to an interrupt cause bit position clears the associated bit in the BB_**_INT_CAUSE register."/>
    <register addr="5005004c" rw_flags="RW" width="1" name="BB_TX_TIMING_I1" comment="Tx timing adjust control to allow correction for TX latency"/>
    <register addr="50050050" rw_flags="RW" width="1" name="BB_RX_INT_MASK_I1" comment="Interrupt mask register. Setting a bit in this register against an interrupt cause bit position, ensures that it generates an interrupt."/>
    <register addr="50050054" rw_flags="R" width="1" name="BB_RX_INT_CAUSE_I1" comment="Interrupt cause register. Read by the host to determine why it was interrupted."/>
    <register addr="50050058" rw_flags="RW" width="1" name="BB_RX_INT_CLEAR_I1" comment="Interrupt clear register. Writing a one to an interrupt cause bit position clears the associated bit in the BB_**_INT_CAUSE register."/>
    <register addr="5005005c" rw_flags="R" width="1" name="BB_TX_PACK_QUEUE_I1" comment="The number of packets queued for TX by the host and not yet completed."/>
    <register addr="50050060" rw_flags="R" width="1" name="BB_RX_PACK_QUEUE_I1" comment="The number of packets queued for RX by the host and not yet completed."/>
    <register addr="50050064" rw_flags="RW" width="1" name="BB_TX_SCRAMBLER_SEED_I1" comment="Scrambler seed for transmitted bursts. If this register is set to zero, then a pseudo-random scrambler seed is automatically generated for every transmit burst. If this register is set to a non-zero value, then that value is used as the scrambler seed for transmitted bursts."/>
    <register addr="50050068" rw_flags="RW" width="4" name="BB_RX_CONFIG_I1" comment="Receiver configuration"/>
    <register addr="5005006c" rw_flags="RW" width="2" name="BB_RX_CONFIG2_I1" comment="Receiver configuration"/>
    <register addr="50050070" rw_flags="RW" width="1" name="BB_SIGB_SEGPARS_I1" comment="Enable VHTSIGB Segment parsing and deparsing in Transmitter and Receiver"/>
    <register addr="50050074" rw_flags="RW" width="1" name="BB_RX_CONFIG3_I1" comment="Receiver configuration"/>
    <register addr="50050078" rw_flags="RW" width="1" name="BB_RX_PLL_COEFFS_I1" comment="Frequency tracking PLL coefficients"/>
    <register addr="5005007c" rw_flags="RW" width="2" name="BB_RX_DEMAP_METRIC_A_I1" comment="Demapper soft-decision metric as used by the Viterbi decoder"/>
    <register addr="50050080" rw_flags="RW" width="2" name="BB_RX_DEMAP_METRIC_B_I1" comment="Demapper soft-decision metric as used by the Viterbi decoder"/>
    <register addr="50050084" rw_flags="R" width="1" name="BB_STATUS_I1" comment=""/>
    <register addr="50050088" rw_flags="R" width="2" name="BB_FREQ_OFFSET_I1" comment="Frequency offset for the last received burst"/>
    <register addr="5005008c" rw_flags="R" width="2" name="BB_SIGNAL_QUALITY_I1" comment="Bits 15:8 - The estimated EVM for the receive channel. Bits 7:0 - The estimated SNR, based on the burst  preamble, for the receive channel"/>
    <register addr="50050090" rw_flags="R" width="2" name="BB_SIGNAL_QUALITY_DUAL_I1" comment="Bits 15:8 - The estimated EVM for the dual receive channel. Bits 7:0 - The estimated SNR, based on the burst  preamble, for the dual receive channel"/>
    <register addr="50050094" rw_flags="RW" width="1" name="BB_BBA_FREQ_OFFSET_MASK_CONFIG_I1" comment="Reduce the reliability of soft decsions on inner carriers (+/-1, +/-2) when estimated frequency offset exceeds certain thresholds OR permanently reduce the reliability on inner carriers regardless of frequency offset."/>
    <register addr="50050098" rw_flags="RW" width="2" name="BB_BBA_FREQ_OFFSET_MASK_CFG_MA_SC_20M_I1" comment="Reduce the reliability of soft decision on the most affected subcarriers for 20/40MHz bandwidth(1 2 3 or -1 -2 -3, when offset frequency is positive,, it corresponds to -1 -2 and -3"/>
    <register addr="5005009c" rw_flags="RW" width="2" name="BB_BBA_FREQ_OFFSET_MASK_CFG_LA_SC_20M_I1" comment="Reduce the reliability of soft decision on the less affected subcarriers for 20/40MHz bandwidth(1 2 3 or -1 -2 -3, when offset frequency is positive,, it corresponds to 1 2 and 3"/>
    <register addr="500500a0" rw_flags="RW" width="2" name="BB_BBA_FREQ_OFFSET_MASK_CFG_MA_SC_10M_I1" comment="Reduce the reliability of soft decision on the most affected subcarriers for 10MHz bandwidth(1 2 3 or -1 -2 -3, when offset frequency is positive,, it corresponds to -1 -2 and -3"/>
    <register addr="500500a4" rw_flags="RW" width="2" name="BB_BBA_FREQ_OFFSET_MASK_CFG_LA_SC_10M_I1" comment="Reduce the reliability of soft decision on the less affected subcarriers for 10MHz bandwidth(1 2 3 or -1 -2 -3, when offset frequency is positive,, it corresponds to 1 2 and 3"/>
    <register addr="500500a8" rw_flags="RW" width="2" name="BB_BBA_FREQ_OFFSET_MASK_CFG_MA_SC_5M_I1" comment="Reduce the reliability of soft decision on the most affected subcarriers for 5MHz bandwidth(1 2 3 or -1 -2 -3, when offset frequency is positive,, it corresponds to -1 -2 and -3"/>
    <register addr="500500ac" rw_flags="RW" width="2" name="BB_BBA_FREQ_OFFSET_MASK_CFG_LA_SC_5M_I1" comment="Reduce the reliability of soft decision on the less affected subcarriers for 5MHz bandwidth(1 2 3 or -1 -2 -3, when offset frequency is positive,, it corresponds to 1 2 and 3"/>
    <register addr="500500b0" rw_flags="RW" width="2" name="BB_CTRACK_UNREL_I1" comment="Thresholds to define which values of soft bits should disable channel tracking. When below ABS_THRESH on any valid soft bit, channel tracking is disabled for that subcarrier"/>
    <register addr="500500b4" rw_flags="RW" width="2" name="BB_SOFT_WEIGH_FREQ_OFFSET_HIGH_THRESH_20M_40M_I1" comment="the high threshold value for frequency offset in soft weigh for 20/40MHz bandwidth, it is derived by 122 KHz/20 MHz * 2^16"/>
    <register addr="500500b8" rw_flags="RW" width="2" name="BB_SOFT_WEIGH_FREQ_OFFSET_LOW_THRESH_20M_40M_I1" comment="the low threshold value for frequency offset in soft weigh for 20/40MHz bandwidth, it is derived by 50 KHz/20 MHz * 2^16"/>
    <register addr="500500bc" rw_flags="RW" width="2" name="BB_SOFT_WEIGH_FREQ_OFFSET_HIGH_THRESH_10M_I1" comment="the high threshold value for frequency offset in soft weigh for 10MHz bandwidth, it is derived by 84 KHz/10 MHz * 2^16"/>
    <register addr="500500c0" rw_flags="RW" width="2" name="BB_SOFT_WEIGH_FREQ_OFFSET_LOW_THRESH_10M_I1" comment="the low threshold value for frequency offset in soft weigh for 10MHz bandwidth, it is derived by 14 KHz/10 MHz * 2^16"/>
    <register addr="500500c4" rw_flags="RW" width="2" name="BB_SOFT_WEIGH_FREQ_OFFSET_HIGH_THRESH_5M_I1" comment="the high threshold value for frequency offset in soft weigh for 5MHz bandwidth, it is derived by 75 KHz/5 MHz * 2^16"/>
    <register addr="500500c8" rw_flags="RW" width="2" name="BB_SOFT_WEIGH_FREQ_OFFSET_LOW_THRESH_5M_I1" comment="the low threshold value for frequency offset in soft weigh for 5MHz bandwidth, it is derived by 31KHz/5 MHz * 2^16"/>
    <register addr="500500cc" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_SISO_BCC_AWGN_I1" comment="DEMAP SISO BCC AWGN QFAC configuration"/>
    <register addr="500500d0" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_AWGN_I1" comment="MLD MIMO BCC AWGN QFAC configuration"/>
    <register addr="500500d4" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_BCC_FADING_I1" comment="DEMAP SISO BCC FADING QFAC configuration"/>
    <register addr="500500d8" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_SISO_BCC_FADING_MCS7_I1" comment="DEMAP SISO BCC FADING MCS7 QFAC configuration"/>
    <register addr="500500dc" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_SISO_BCC_FADING_MCS8_I1" comment="DEMAP SISO BCC FADING MCS8 QFAC configuration"/>
    <register addr="500500e0" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_SISO_BCC_FADING_MCS9_I1" comment="DEMAP SISO BCC FADING MCS9 QFAC configuration"/>
    <register addr="500500e4" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS0_I1" comment="DEMAP MIMO BCC FADING MCS0 QFAC configuration"/>
    <register addr="500500e8" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS1_I1" comment="DEMAP MIMO BCC FADING MCS1 QFAC configuration"/>
    <register addr="500500ec" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS2_I1" comment="DEMAP MIMO BCC FADING MCS2 QFAC configuration"/>
    <register addr="500500f0" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS3_I1" comment="DEMAP MIMO BCC FADING MCS3 QFAC configuration"/>
    <register addr="500500f4" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS4_I1" comment="DEMAP MIMO BCC FADING MCS4 QFAC configuration"/>
    <register addr="500500f8" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS5_I1" comment="DEMAP MIMO BCC FADING MCS5 QFAC configuration"/>
    <register addr="500500fc" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS6_I1" comment="DEMAP MIMO BCC FADING MCS6 QFAC configuration"/>
    <register addr="50050100" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS7_I1" comment="DEMAP MIMO BCC FADING MCS7 QFAC configuration"/>
    <register addr="50050104" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS8_I1" comment="DEMAP MIMO BCC FADING MCS8 QFAC configuration"/>
    <register addr="50050108" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS9_I1" comment="DEMAP MIMO BCC FADING MCS9 QFAC configuration"/>
    <register addr="5005010c" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_SISO_LDPC_AWGN_I1" comment="DEMAP SISO LDPC AWGN QFAC configuration"/>
    <register addr="50050110" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_AWGN_I1" comment="MLD MIMO LDPC AWGN QFAC configuration"/>
    <register addr="50050114" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS0_I1" comment="DEMAP SISO LDPC FADING MCS0 QFAC configuration"/>
    <register addr="50050118" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS1_I1" comment="DEMAP SISO LDPC FADING MCS1 QFAC configuration"/>
    <register addr="5005011c" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS2_I1" comment="DEMAP SISO LDPC FADING MCS2 QFAC configuration"/>
    <register addr="50050120" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS3_I1" comment="DEMAP SISO LDPC FADING MCS3 QFAC configuration"/>
    <register addr="50050124" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS4_I1" comment="DEMAP SISO LDPC FADING MCS4 QFAC configuration"/>
    <register addr="50050128" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS5_I1" comment="DEMAP SISO LDPC FADING MCS5 QFAC configuration"/>
    <register addr="5005012c" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS6_I1" comment="DEMAP SISO LDPC FADING MCS6 QFAC configuration"/>
    <register addr="50050130" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS7_I1" comment="DEMAP SISO LDPC FADING MCS7 QFAC configuration"/>
    <register addr="50050134" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS8_I1" comment="DEMAP SISO LDPC FADING MCS8 QFAC configuration"/>
    <register addr="50050138" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS9_I1" comment="DEMAP SISO LDPC FADING MCS9 QFAC configuration"/>
    <register addr="5005013c" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS10_I1" comment="DEMAP SISO LDPC FADING MCS10 QFAC configuration"/>
    <register addr="50050140" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS11_I1" comment="DEMAP SISO LDPC FADING MCS11 QFAC configuration"/>
    <register addr="50050144" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS0_I1" comment="DEMAP MIMO LDPC FADING MCS0 QFAC configuration"/>
    <register addr="50050148" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS1_I1" comment="DEMAP MIMO LDPC FADING MCS1 QFAC configuration"/>
    <register addr="5005014c" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS2_I1" comment="DEMAP MIMO LDPC FADING MCS2 QFAC configuration"/>
    <register addr="50050150" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS3_I1" comment="DEMAP MIMO LDPC FADING MCS3 QFAC configuration"/>
    <register addr="50050154" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS4_I1" comment="DEMAP MIMO LDPC FADING MCS4 QFAC configuration"/>
    <register addr="50050158" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS5_I1" comment="DEMAP MIMO LDPC FADING MCS5 QFAC configuration"/>
    <register addr="5005015c" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS6_I1" comment="DEMAP MIMO LDPC FADING MCS6 QFAC configuration"/>
    <register addr="50050160" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS7_I1" comment="DEMAP MIMO LDPC FADING MCS7 QFAC configuration"/>
    <register addr="50050164" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS8_I1" comment="DEMAP MIMO LDPC FADING MCS8 QFAC configuration"/>
    <register addr="50050168" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS9_I1" comment="DEMAP MIMO LDPC FADING MCS9 QFAC configuration"/>
    <register addr="5005016c" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_STBC_BCC_AWGN_I1" comment="DEMAP STBC BCC AWGN QFAC configuration"/>
    <register addr="50050170" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_STBC_BCC_FADING_I1" comment="DEMAP STBC BCC FADING QFAC configuration"/>
    <register addr="50050174" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_STBC_LDPC_AWGN_I1" comment="DEMAP STBC LDPC AWGN QFAC configuration"/>
    <register addr="50050178" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_STBC_LDPC_FADING_I1" comment="DEMAP STBC LDPC FADING QFAC configuration"/>
    <register addr="5005017c" rw_flags="RW" width="2" name="BB_DEMAP_LLR_DOWN_I1" comment="DEMAP LLR DOWN configuration"/>
    <register addr="50050180" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_BF_LDPC_AWGN_I1" comment="DEMAP BEAMFORM LDPC AWGN QFAC configuration"/>
    <register addr="50050184" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_BF_LDPC_FADING_I1" comment="DEMAP BEAMFORM LDPC FADING QFAC configuration"/>
    <register addr="50050188" rw_flags="RW" width="2" name="BB_DEMAP_NOISE_VARIANCE_I1" comment="DEMAP NOISE VARIANCE Forcing"/>
    <register addr="5005018c" rw_flags="RW" width="1" name="BB_DEMAP_NUDGE_GAIN_ADAPT_I1" comment="When set, apply Radio nudge again"/>
    <register addr="50050190" rw_flags="RW" width="2" name="BB_PILOT_PHASE_LIMIT_I1" comment="Limit the absolute pilot angle correction. This is an 11-bit unsigned number in RTL phase format (max value 1024). RTL phase format = (angle in deg / 180) * 1024. (Default = 0.4 radians)"/>
    <register addr="50050194" rw_flags="RW" width="1" name="BB_SAMP_OFFSET_I1" comment="Sampling offset. Data symbols are sampled at a position -BB_SAMP_OFFSET with respect to the beginning of the data part of the symbol."/>
    <register addr="50050198" rw_flags="RW" width="2" name="BB_DEBUG_SELECT_I1" comment="Select the set of signals output at the debug port"/>
    <register addr="5005019c" rw_flags="RW" width="2" name="BB_RX_MISC_CONFIG_I1" comment=""/>
    <register addr="500501a0" rw_flags="RW" width="2" name="BB_MIMO_RATE_MASK_I1" comment="Control rejection of HT and VHT 40MHz packets with certain MIMO rates"/>
    <register addr="500501a4" rw_flags="RW" width="2" name="BB_VHT_SS1_RATE_MASK_I1" comment="Control rejection of VHT 80MHz single spatial stream (or STBC) packets with certain rates"/>
    <register addr="500501a8" rw_flags="RW" width="2" name="BB_VHT_SS2_RATE_MASK_I1" comment="Control rejection of VHT two spatial stream packets with certain rates"/>
    <register addr="500501ac" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG1_I1" comment="synchronizer configuration"/>
    <register addr="500501b0" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG2_I1" comment="synchronizer configuration"/>
    <register addr="500501b4" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG3_I1" comment="synchronizer configuration"/>
    <register addr="500501b8" rw_flags="RW" width="1" name="BB_RX_SYNC_CONFIG4_I1" comment="synchronizer configuration"/>
    <register addr="500501bc" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG5_I1" comment="synchronizer configuration "/>
    <register addr="500501c0" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG6_I1" comment="synchronizer configuration "/>
    <register addr="500501c4" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG7_I1" comment="synchronizer configuration "/>
    <register addr="500501c8" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG8_I1" comment="Lower limit on quantization to avoid excessive AGC action "/>
    <register addr="500501cc" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG9_I1" comment="High limit on quantization to avoid excessive AGC action"/>
    <register addr="500501d0" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG10_I1" comment="Number of samples to advance the start the LTF search window"/>
    <register addr="500501d4" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG11_I1" comment="synchronizer configuration "/>
    <register addr="500501d8" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG12_I1" comment="synchronizer configuration for new new STBC sync "/>
    <register addr="500501dc" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG13_I1" comment="synchronizer configuration for new new STBC sync "/>
    <register addr="500501e0" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG14_I1" comment="LTF lock limited by distance from max peak "/>
    <register addr="500501e4" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG15_I1" comment="Threshold for comparing the combined STF correlation"/>
    <register addr="500501e8" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG16_I1" comment=" Threshold for comparing the combined STF correlation"/>
    <register addr="500501ec" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG17_I1" comment=" First and second 40MHz sync split filter"/>
    <register addr="500501f0" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG18_I1" comment=" 80MHz sync split filter"/>
    <register addr="500501f4" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG19_I1" comment="Configuration for detection logic for CCA primary and secondary"/>
    <register addr="500501f8" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG20_I1" comment="STF sync detector configuration"/>
    <register addr="500501fc" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG21_I1" comment="STF sync configuration with spare bits"/>
    <register addr="50050200" rw_flags="RW" width="4" name="BB_RX_SYNC_NOTCH1_I1" comment="Tone notch configuration"/>
    <register addr="50050204" rw_flags="RW" width="4" name="BB_RX_SYNC_NOTCH2_I1" comment="Tone notch configuration"/>
    <register addr="50050208" rw_flags="RW" width="4" name="BB_RX_SYNC_NOTCH3_I1" comment="Tone notch configuration"/>
    <register addr="5005020c" rw_flags="RW" width="4" name="BB_RX_SYNC_NOTCH4_I1" comment="Tone notch configuration"/>
    <register addr="50050210" rw_flags="RW" width="4" name="BB_SYNC_STF_WEIGHT_CFG0_I1" comment="STF group weight factor"/>
    <register addr="50050214" rw_flags="RW" width="4" name="BB_SYNC_STF_WEIGHT_CFG1_I1" comment="STF group weight factor"/>
    <register addr="50050218" rw_flags="RW" width="1" name="BB_SYNC_CCA_WEIGHT_SEL_I1" comment="CCA weighted combing sel"/>
    <register addr="5005021c" rw_flags="RW" width="1" name="BB_SYNC_LTF_WEIGHT_COMBINE_MODE_I1" comment="LTF MF weighted combine mode 0: no weight, 1:Bc0+0.75xBc0, 2:Bc0+0.625Bc0, 3:Bc0+0.5Bc0"/>
    <register addr="50050220" rw_flags="RW" width="1" name="BB_SYNC_LTF_MODE_I1" comment="LTF Peak selection control"/>
    <register addr="50050224" rw_flags="RW" width="1" name="BB_SYNC_LTF_THR2_I1" comment="LTF peak threshold(for index7)"/>
    <register addr="50050228" rw_flags="RW" width="1" name="BB_RX_SYNC_CCA_CFG_I1" comment="Configure to take into account the CCA of each 20M subband for the primary channel"/>
    <register addr="5005022c" rw_flags="RW" width="1" name="BB_BFEE_FDBK_DSNR_EXPR_I1" comment="Beemforming feedback deltan snr expr control"/>
    <register addr="50050230" rw_flags="RW" width="1" name="BB_BFEE_MU_CBR_I1" comment="Indication of MU/SU CBR, 0:SU, 1:MU"/>
    <register addr="50050234" rw_flags="R" width="2" name="BB_BFEE_CBR_LENGTH_I1" comment="Beamformee CBR Length."/>
    <register addr="50050238" rw_flags="R" width="2" name="BB_CEST_RE_DATA_I1" comment="Real part of data for calibration channel estimation"/>
    <register addr="5005023c" rw_flags="R" width="2" name="BB_CEST_IM_DATA_I1" comment="Imaginary part of data for calibration channel estimation"/>
    <register addr="50050240" rw_flags="R" width="1" name="BB_CEST_LTF_OFFSET_I1" comment="20 MHz Sample offset for values read from BB_CEST_ADDR[8:6]=='000' for an 11a or green-field packet. Value is in 2's complement. Negative values indicate that the LTF sync is earlier than the position indicated by the STF sync."/>
    <register addr="50050244" rw_flags="RW" width="4" name="BB_CEST_CONFIG_I1" comment="Configuration for handling data for calibration"/>
    <register addr="50050248" rw_flags="RW" width="2" name="BB_CEST_STS_MULT_I1" comment="Data needed for Space-Time-Stream combination (needed for BB_CEST_CONFIG_MODE='10')"/>
    <register addr="5005024c" rw_flags="RW" width="2" name="BB_CEST_STS_PHASE_I1" comment="Phase rotation for Space-Time-Stream channel estimate (needed for BB_CEST_CONFIG_MODE='10')"/>
    <register addr="50050250" rw_flags="R" width="2" name="BB_CEST_MAX_I1" comment="Maximum channel estimate value across all Space-Time-Streams (needed to normalise the channel estimates sent for calibration purposes)"/>
    <register addr="50050254" rw_flags="R" width="1" name="BB_CEST_STATUS_I1" comment="Status information for calibration support"/>
    <register addr="50050258" rw_flags="RW" width="2" name="BB_CEST_ADDR_I1" comment="Channel estimate value requested"/>
    <register addr="5005025c" rw_flags="RW" width="2" name="BB_CEST_SMOOTH_SNR_THRESHOLD1_I1" comment="SNR Threshold 1 channel smoothing. To program value, multiply desired SNR (in dB) by 4. If signal SNR is above threshold 1, then filter option 0 is used in channel smoothing."/>
    <register addr="50050260" rw_flags="RW" width="2" name="BB_CEST_SMOOTH_SNR_THRESHOLD2_I1" comment="SNR Threshold 2 for channel smoothing. To program value, multiply desired SNR (in dB) by 4. If signal SNR is above threshold 5, then filter option 4 is used in channel smoothing. If below, filter option 5 is used."/>
    <register addr="50050264" rw_flags="RW" width="2" name="BB_CEST_SMOOTH_SNR_THRESHOLD3_I1" comment="SNR Threshold 3 for channel smoothing. To program value, multiply desired SNR (in dB) by 4.If signal SNR is above threshold 2, then filter option 1 is used in channel smoothing."/>
    <register addr="50050268" rw_flags="RW" width="2" name="BB_CEST_SMOOTH_SNR_THRESHOLD4_I1" comment="SNR Threshold 4 for channel smoothing. To program value, multiply desired SNR (in dB) by 4. If signal SNR is above threshold 3, then filter option 2 is used in channel smoothing."/>
    <register addr="5005026c" rw_flags="RW" width="2" name="BB_CEST_SMOOTH_SNR_THRESHOLD5_I1" comment="SNR Threshold 5 for channel smoothing. To program value, multiply desired SNR (in dB) by 4. If signal SNR is above threshold 4, then filter option 3 is used in channel smoothing."/>
    <register addr="50050270" rw_flags="RW" width="2" name="BB_MRC_CONFIG_BASIC_I1" comment="Control register to configure OFDM Maximum Ratio Combining and Basic MRC block"/>
    <register addr="50050274" rw_flags="RW" width="2" name="BB_MRC_CONFIG_STBC_I1" comment="Unused register"/>
    <register addr="50050278" rw_flags="RW" width="2" name="BB_MRC_CONFIG_STREAM2_I1" comment="Unused register"/>
    <register addr="5005027c" rw_flags="RW" width="2" name="BB_MRC_CONFIG_FINAL_I1" comment="Unused register"/>
    <register addr="50050280" rw_flags="RW" width="1" name="BB_MRC_NONCONT_BANDS_I1" comment="Control register to whether MRC non contiguous bands or not."/>
    <register addr="50050284" rw_flags="RW" width="2" name="BB_SC_SOFT_WEIGH_ADDRESS_I1" comment="This register is used for the first step of a two stage process to reduce reliability of individual subcarriers. First this register is set to a subcarrier range, and then BB_SC_SOFT_WEIGH_ENABLE is used to select which sub-carrier is being targetted within this range"/>
    <register addr="50050288" rw_flags="RW" width="2" name="BB_SC_SOFT_WEIGH_ENABLE_I1" comment="Each bit can enable reduced reliability if set. The sub-carrier affected by each bit is BB_SC_SOFT_WEIGH_ADDRESS+bit_index. e.g. with BB_SC_SOFT_WEIGH_ADDRESS=-16, bit 0 targets sub-carrier -16, bit 1 targets -15 etc."/>
    <register addr="5005028c" rw_flags="R" width="2" name="BB_SC_SOFT_WEIGH_ENABLE_STATUS_I1" comment="Internal values of BB_SC_SOFT_WEIGH_ENABLE can be read by selecting the range using BB_SC_SOFT_WEIGH_ADDRESS and then reading this register. N.B. Sub-carriers that cannot be valid are returned as 0"/>
    <register addr="50050290" rw_flags="RW" width="2" name="BB_DD_CPE_CONFIG_I1" comment="Configuration for the Data Directed Common Phase Error calculation"/>
    <register addr="50050294" rw_flags="RW" width="1" name="BB_DD_CPE_CONFIG2_I1" comment="Configuration 2 for the Data Directed Common Phase Error calculation"/>
    <register addr="50050298" rw_flags="RW" width="2" name="BB_PTW70_CONFIG_I1" comment="Setup to allow detection and control relating to packets with strong phase wobble such as those from PTW70 test equipment"/>
    <register addr="5005029c" rw_flags="RW" width="2" name="BB_PTW70_CONFIG2_I1" comment="Setup 2 to allow detection and control relating to packets with strong phase wobble such as those from PTW70 test equipment"/>
    <register addr="500502a0" rw_flags="RW" width="1" name="BB_RX_RADIO_CS_CONFIG_I1" comment="RX Radio CS detection configuration for 80MHz bandwidth"/>
    <register addr="500502a4" rw_flags="RW" width="4" name="BB_RX_ENERGY_DET_THRESHOLD_I1" comment="RX energy detection threshold for primary and secondary 20MHz channel"/>
    <register addr="500502a8" rw_flags="RW" width="4" name="BB_LDPC_OFFSET_I1" comment="Min-Sum algorithm offset for LDPC decoder for AWGN and FADING"/>
    <register addr="500502ac" rw_flags="RW" width="4" name="BB_LDPC_OFFSET_1024QAM_I1" comment="Min-Sum algorithm offset for LDPC decoder for 1024QAM"/>
    <register addr="500502b0" rw_flags="RW" width="4" name="BB_QAM1024_ENABLE_I1" comment="QAM1024 Support Enable"/>
    <register addr="500502b4" rw_flags="RW" width="2" name="BB_CHDET_I1" comment="Channel Type Detection"/>
    <register addr="500502b8" rw_flags="RW" width="4" name="BB_CHDET_ZERO_THRESHOLD_SISO_I1" comment="Channel Type Detection Zero Threshold for SISO Case"/>
    <register addr="500502bc" rw_flags="RW" width="4" name="BB_CHDET_LOW_THRESHOLD_SISO_I1" comment="Channel Type Detection Low Threshold for SISO Case"/>
    <register addr="500502c0" rw_flags="RW" width="4" name="BB_CHDET_MID_THRESHOLD_SISO_I1" comment="Channel Type Detection Mid Threshold for SISO Case"/>
    <register addr="500502c4" rw_flags="RW" width="4" name="BB_CHDET_HIGH_THRESHOLD_SISO_I1" comment="Channel Type Detection High Threshold for SISO Case"/>
    <register addr="500502c8" rw_flags="RW" width="4" name="BB_CHDET_ZERO_THRESHOLD_STBC_I1" comment="Channel Type Detection Zero Threshold for STBC Case"/>
    <register addr="500502cc" rw_flags="RW" width="4" name="BB_CHDET_LOW_THRESHOLD_STBC_I1" comment="Channel Type Detection Low Threshold for STBC Case"/>
    <register addr="500502d0" rw_flags="RW" width="4" name="BB_CHDET_MID_THRESHOLD_STBC_I1" comment="Channel Type Detection Mid Threshold for STBC Case"/>
    <register addr="500502d4" rw_flags="RW" width="4" name="BB_CHDET_HIGH_THRESHOLD_STBC_I1" comment="Channel Type Detection High Threshold for STBC Case"/>
    <register addr="500502d8" rw_flags="RW" width="4" name="BB_CHDET_ZERO_THRESHOLD_BF_I1" comment="Channel Type Detection Zero Threshold for BF Case"/>
    <register addr="500502dc" rw_flags="RW" width="4" name="BB_CHDET_LOW_THRESHOLD_BF_I1" comment="Channel Type Detection Low Threshold for BF Case"/>
    <register addr="500502e0" rw_flags="RW" width="4" name="BB_CHDET_MID_THRESHOLD_BF_I1" comment="Channel Type Detection Mid Threshold for BF Case"/>
    <register addr="500502e4" rw_flags="RW" width="4" name="BB_CHDET_HIGH_THRESHOLD_BF_I1" comment="Channel Type Detection High Threshold for BF Case"/>
    <register addr="500502e8" rw_flags="RW" width="2" name="BB_RX_PAYLOAD_DET_THRESHOLD_I1" comment="RX payload detection threshold for all subbands"/>
    <register addr="500502ec" rw_flags="RW" width="1" name="BB_RX_PAYLOAD_DET_CONFIG_I1" comment="Payload Detector enables."/>
    <register addr="500502f0" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_NGI_CONFIG1_I1" comment="First configuration register for the normal guard interval (NGI) correlator within the OFDM Payload Detector."/>
    <register addr="500502f4" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_NGI_CONFIG2_I1" comment="Second configuration register for the normal guard interval (NGI) correlator within the OFDM Payload Detector."/>
    <register addr="500502f8" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_NGI_CONFIG3_I1" comment="Third configuration register for the normal guard interval (NGI) correlator within the OFDM Payload Detector."/>
    <register addr="500502fc" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_NGI_CONFIG4_I1" comment="Fourth configuration register for the normal guard interval (NGI) correlator within the OFDM Payload Detector."/>
    <register addr="50050300" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_SGI_CONFIG1_I1" comment="First configuration register for the short guard interval (SGI) correlator within the OFDM Payload Detector."/>
    <register addr="50050304" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_SGI_CONFIG2_I1" comment="Second configuration register for the short guard interval (SGI) correlator within the OFDM Payload Detector."/>
    <register addr="50050308" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_SGI_CONFIG3_I1" comment="Third configuration register for the short guard interval (SGI) correlator within the OFDM Payload Detector."/>
    <register addr="5005030c" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_SGI_CONFIG4_I1" comment="Fourth configuration register for the short guard interval (SGI) correlator within the OFDM Payload Detector."/>
    <register addr="50050310" rw_flags="RW" width="1" name="BB_BBA_CCA_CFG_I1" comment="CCA ignore control on the primary channel, secondary channel, secondary 40 channel and secondary 80 channel."/>
    <register addr="50050314" rw_flags="RW" width="1" name="BB_MLD_CONFIG_I1" comment="MLD Configuration registers"/>
    <register addr="50050318" rw_flags="R" width="2" name="BB_BBA_DEBUG_I1" comment="Read access to BBA debug information. To see this data correctly, the enable bit BB_DEBUG_SELECT.BB_DEBUG_SELECT_EN must be set, to enable the register supplying this information."/>
    <register addr="5005031c" rw_flags="RW" width="2" name="BB_BBA_BF_TX_CONFIG_I1" comment="TX beamforming configuration."/>
    <register addr="50050320" rw_flags="RW" width="4" name="BB_BBA_BF_TX_KEYHOLE_I1" comment="TX beamforming configuration #2."/>
    <register addr="50050324" rw_flags="R" width="4" name="BB_BBA_BF_TX_STATUS1_I1" comment="Tx beamformer CBR category fields parsed."/>
    <register addr="50050328" rw_flags="R" width="4" name="BB_BBA_BF_TX_STATUS2_I1" comment="Tx beamformer fields parsed and DMA collision counter."/>
    <register addr="5005032c" rw_flags="R" width="4" name="BB_BBA_BF_TX_ANGLE_STORE_KEYHOLE_DATA_STATUS_I1" comment="This register is used to read the angle store data."/>
    <register addr="50050330" rw_flags="RW" width="4" name="BB_CEST_SMOOTHING_I1" comment="This register is used to control smoothing"/>
    <register addr="50050334" rw_flags="RW" width="4" name="BB_LDPC_CONFIG_I1" comment="LDPC configuration"/>
    <register addr="50050338" rw_flags="RW" width="1" name="BB_LDPC_RX_THROTTLE_ADDR_I1" comment="Address used to load different values to internal register to allow reduced data rate in LDPC output. Address to use is described in BB_LDPC_RX_THROTTLE_ADDR_REF"/>
    <register addr="5005033c" rw_flags="RW" width="2" name="BB_LDPC_RX_THROTTLE_I1" comment="Address used to load different values to internal register to allow reduced data rate in LDPC output"/>
    <register addr="50050340" rw_flags="RW" width="1" name="BB_CPE_PHASE_REG_EN_I1" comment="Enables the phase reg calculations in RTL"/>
    <register addr="50050344" rw_flags="R" width="2" name="BB_CPE_PHASE_MAX_I1" comment="Maximum CPE phase of a frame over all symbols"/>
    <register addr="50050348" rw_flags="R" width="2" name="BB_CPE_PHASE_MIN_I1" comment="Minimum CPE phase of a frame over all symbols"/>
    <register addr="5005034c" rw_flags="R" width="2" name="BB_CPE_PHASE_ACCUM_I1" comment="Phase accumulation of all symbol phase of the frame"/>
    <register addr="50050350" rw_flags="R" width="2" name="BB_CPE_PHASE_SQR_ACCUM_I1" comment="Accumulation of phase square over all symbols of the frame"/>
    <register addr="50050354" rw_flags="R" width="2" name="BB_CPE_PHASE_DIFF_ACCUM_I1" comment="Accumulation of phase difference over all symbols of the frame"/>
    <register addr="50050358" rw_flags="R" width="2" name="BB_CPE_NUM_ACCUM_I1" comment="Number of phases accumulated in the accumulation registers"/>
    <register addr="5005035c" rw_flags="RW" width="1" name="BB_FREQ_TRACK_REG_EN_I1" comment="Enables the frequency reg calculations in RTL"/>
    <register addr="50050360" rw_flags="R" width="2" name="BB_FREQ_TRACK_MAX_I1" comment="Maximum fine frequency of a frame over all symbols"/>
    <register addr="50050364" rw_flags="R" width="2" name="BB_FREQ_TRACK_MIN_I1" comment="Minimum fine frequency of a frame over all symbols"/>
    <register addr="50050368" rw_flags="R" width="2" name="BB_FREQ_TRACK_ACCUM_I1" comment="Fine frequency accumulation of all symbol phase of the frame"/>
    <register addr="5005036c" rw_flags="R" width="2" name="BB_FREQ_TRACK_SQR_ACCUM_I1" comment="Accumulation of fine frequency square over all symbols of the frame"/>
    <register addr="50050370" rw_flags="R" width="2" name="BB_FREQ_TRACK_NUM_ACCUM_I1" comment="Number of fine frequency accumulated in the accumulation registers"/>
    <register addr="50050374" rw_flags="RW" width="1" name="BB_EN_VHT_NUDGEAGAIN_I1" comment="When set enables nudge again for HT/VHT packets otherwise nudge again only for HT packets"/>
    <register addr="50050378" rw_flags="RW" width="4" name="BB_LTF_SYNC_LATENCY_I1" comment="Number of 20M clock cycles of LTF peak calculation latency"/>
    <register addr="5005037c" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT1_I1[0]" comment="Smoothing filter coefficient for SNR1 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50050380" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT1_I1[1]" comment="Smoothing filter coefficient for SNR1 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50050384" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT1_I1[2]" comment="Smoothing filter coefficient for SNR1 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50050388" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT1_I1[3]" comment="Smoothing filter coefficient for SNR1 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="5005038c" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT1_I1[4]" comment="Smoothing filter coefficient for SNR1 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50050390" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT1_I1[5]" comment="Smoothing filter coefficient for SNR1 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50050394" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT2_I1[0]" comment="Smoothing filter coefficient for SNR2 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50050398" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT2_I1[1]" comment="Smoothing filter coefficient for SNR2 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="5005039c" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT2_I1[2]" comment="Smoothing filter coefficient for SNR2 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503a0" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT2_I1[3]" comment="Smoothing filter coefficient for SNR2 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503a4" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT2_I1[4]" comment="Smoothing filter coefficient for SNR2 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503a8" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT2_I1[5]" comment="Smoothing filter coefficient for SNR2 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503ac" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT3_I1[0]" comment="Smoothing filter coefficient for SNR3 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503b0" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT3_I1[1]" comment="Smoothing filter coefficient for SNR3 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503b4" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT3_I1[2]" comment="Smoothing filter coefficient for SNR3 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503b8" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT3_I1[3]" comment="Smoothing filter coefficient for SNR3 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503bc" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT3_I1[4]" comment="Smoothing filter coefficient for SNR3 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503c0" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT3_I1[5]" comment="Smoothing filter coefficient for SNR3 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503c4" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT4_I1[0]" comment="Smoothing filter coefficient for SNR4 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503c8" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT4_I1[1]" comment="Smoothing filter coefficient for SNR4 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503cc" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT4_I1[2]" comment="Smoothing filter coefficient for SNR4 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503d0" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT4_I1[3]" comment="Smoothing filter coefficient for SNR4 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503d4" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT4_I1[4]" comment="Smoothing filter coefficient for SNR4 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503d8" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT4_I1[5]" comment="Smoothing filter coefficient for SNR4 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503dc" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT5_I1[0]" comment="Smoothing filter coefficient for SNR5 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503e0" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT5_I1[1]" comment="Smoothing filter coefficient for SNR5 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503e4" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT5_I1[2]" comment="Smoothing filter coefficient for SNR5 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503e8" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT5_I1[3]" comment="Smoothing filter coefficient for SNR5 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503ec" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT5_I1[4]" comment="Smoothing filter coefficient for SNR5 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503f0" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT5_I1[5]" comment="Smoothing filter coefficient for SNR5 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503f4" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT6_I1[0]" comment="Smoothing filter coefficient for SNR6 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503f8" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT6_I1[1]" comment="Smoothing filter coefficient for SNR6 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500503fc" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT6_I1[2]" comment="Smoothing filter coefficient for SNR6 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50050400" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT6_I1[3]" comment="Smoothing filter coefficient for SNR6 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50050404" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT6_I1[4]" comment="Smoothing filter coefficient for SNR6 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50050408" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT6_I1[5]" comment="Smoothing filter coefficient for SNR6 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="5005040c" rw_flags="R" width="1" name="BB_CEST_SMOOTH_DEBUG_I1" comment="Selected Smoothing filter type for debugging"/>
    <register addr="50050410" rw_flags="RW" width="4" name="BB_LPE_CONFIG_I1" comment="Linear phase estimation configuration"/>
    <register addr="50050414" rw_flags="RW" width="4" name="BB_CPE_CONFIG_I1" comment="BB DD CPE configuration"/>
    <register addr="50050418" rw_flags="RW" width="4" name="BB_DDCPE_PHASE_LIMIT_I1" comment="Phase limitation value for DD-CPE"/>
    <register addr="5005041c" rw_flags="RW" width="1" name="BB_DDCPE_PHASE_1024QAM_LIMIT_I1" comment="Phase limitation value for DD-CPE"/>
    <register addr="50050420" rw_flags="RW" width="4" name="BB_CPE_MMSE_WEIGHT_BANK0_I1" comment="Pilot weight for MMSE CPE"/>
    <register addr="50050424" rw_flags="RW" width="4" name="BB_CPE_MMSE_WEIGHT_BANK1_I1" comment="Pilot weight for MMSE CPE"/>
    <register addr="50050428" rw_flags="RW" width="4" name="BB_CPE_MMSE_WEIGHT_BANK2_I1" comment="Pilot weight for MMSE CPE"/>
    <register addr="5005042c" rw_flags="RW" width="4" name="BB_DDCPE_MMSE_PILOT_WEIGHT_BANK0_I1" comment="Pilot weight for MMSE DD-CPE"/>
    <register addr="50050430" rw_flags="RW" width="4" name="BB_DDCPE_MMSE_PILOT_WEIGHT_BANK1_I1" comment="Pilot weight for MMSE DD-CPE"/>
    <register addr="50050434" rw_flags="RW" width="2" name="BB_DDCPE_MMSE_PILOT_WEIGHT_BANK2_I1" comment="Pilot weight for MMSE DD-CPE"/>
    <register addr="50050438" rw_flags="RW" width="4" name="BB_DDCPE_MMSE_DATA_WEIGHT_BANK0_I1" comment="Data weight for MMSE DD-CPE"/>
    <register addr="5005043c" rw_flags="RW" width="4" name="BB_DDCPE_MMSE_DATA_WEIGHT_BANK1_I1" comment="Data weight for MMSE DD-CPE"/>
    <register addr="50050440" rw_flags="RW" width="2" name="BB_DDCPE_MMSE_DATA_WEIGHT_BANK2_I1" comment="Data weight for MMSE DD-CPE"/>
    <register addr="50050444" rw_flags="RW" width="4" name="BB_DDCPE_LLR_THRES_BCC_I1" comment="DDCPE LLR threshold for BCC"/>
    <register addr="50050448" rw_flags="RW" width="4" name="BB_DDCPE_LLR_THRES_LDPC_I1" comment="DDCPE LLR threshold for LDPC"/>
    <register addr="5005044c" rw_flags="RW" width="2" name="BB_MMSE_SYM_OFFSET_I1" comment="Symbol Offset to skip MMSE-CPE"/>
    <register addr="50050450" rw_flags="R" width="4" name="BB_DEBUG_STATUS_MISC_I1" comment="Misc Internal signal status"/>
    <register addr="50050454" rw_flags="RW" width="4" name="BB_GID_MEMBERSHIP_L_I1" comment="Membership status array"/>
    <register addr="50050458" rw_flags="RW" width="4" name="BB_GID_MEMBERSHIP_H_I1" comment="Membership status array"/>
    <register addr="5005045c" rw_flags="RW" width="4" name="BB_GID_USERPOSITION_LL_I1" comment="User Position Array 2 bits"/>
    <register addr="50050460" rw_flags="RW" width="4" name="BB_GID_USERPOSITION_LH_I1" comment="User Position Array 2 bits"/>
    <register addr="50050464" rw_flags="RW" width="4" name="BB_GID_USERPOSITION_HL_I1" comment="User Position Array 2 bits"/>
    <register addr="50050468" rw_flags="RW" width="4" name="BB_GID_USERPOSITION_HH_I1" comment="User Position Array 2 bits"/>
    <register addr="5005046c" rw_flags="RW" width="1" name="BB_IEEE_NDP_CTRL_I1" comment="NDP Decision Method Control"/>
    <register addr="50050470" rw_flags="RW" width="4" name="BASEBAND_TX_CONFIG_I1" comment="Config for PAPR module"/>
    <register addr="50050474" rw_flags="RW" width="2" name="BASEBAND_TX_CONFIG2_I1" comment="Config for Tx filtering stages and papr"/>
    <register addr="50050478" rw_flags="RW" width="1" name="BASEBAND_TX_EVM_PARAMS_I1" comment="Used to tune the gain in the upsample filters in preproc to enhance the Evm across the preproc"/>
    <register addr="5005047c" rw_flags="RW" width="4" name="BB_TX_SWED_PAPR_CONFIG_I1" comment="SWED PAPR Configuration"/>
    <register addr="50050480" rw_flags="RW" width="4" name="BB_DIRECTION_FIND_CONFIG_I1" comment="Configuration for direction finder"/>
    <register addr="50050484" rw_flags="R" width="4" name="BB_DIRECTION_FIND_PHASE_01_I1" comment="This register is used to read the phase of symbol 0 and 1 ."/>
    <register addr="50050488" rw_flags="R" width="4" name="BB_DIRECTION_FIND_PHASE_23_I1" comment="This register is used to read the phase of symbol 2 and 3 ."/>
    <register addr="5005048c" rw_flags="R" width="4" name="BB_DIRECTION_FIND_PHASE_45_I1" comment="This register is used to read the phase of symbol 4 and 5 ."/>
    <register addr="50050490" rw_flags="R" width="4" name="BB_DIRECTION_FIND_PHASE_67_I1" comment="This register is used to read the phase of symbol 6 and 7 ."/>
    <register addr="50050494" rw_flags="R" width="4" name="BB_DIRECTION_FIND_PHASE_89_I1" comment="This register is used to read the phase of symbol 8 and 9 ."/>
    <register addr="50050498" rw_flags="RW" width="1" name="BB_EVM_SIG_EN_I1" comment="EVM Sig. EN"/>
    <register addr="5005049c" rw_flags="RW" width="1" name="BB_DISABLE_NUDGE_GAIN_I1" comment="Nudge Gain Disable"/>
  </block>
  <block name="wl_bba_2" comment="">
    <register addr="50060000" rw_flags="RW" width="2" name="BB_LEG_DUP_DET_CONFIG_I2" comment="Contains parameters used for Non-HT Duplicate detection for 40MHz mode."/>
    <register addr="50060004" rw_flags="R" width="2" name="BB_TX_PACK_START_STATUS_I2" comment="The start time of the OFDM transmit packet, relative to the hardware timer, in units of 400 ns. For packets having a preamble, this points to the beginning of that preamble."/>
    <register addr="50060008" rw_flags="RW" width="1" name="BB_TX_PACK_TYPE_I2" comment="Packet type : should be set to TYPE_80211A for 11a/n. See definition of BB_PACK_TYPE for value."/>
    <register addr="5006000c" rw_flags="RW" width="1" name="BB_TX_PREAMB_TYPE_I2" comment="Packet preamble type : should be set to PRE_80211A for 11a/n. See definition of BB_PREAMBLE_TYPE for value."/>
    <register addr="50060010" rw_flags="R" width="2" name="BB_TX_PACK_RATE_STATUS_I2" comment="Packet type, rate and channel bandwidth."/>
    <register addr="50060014" rw_flags="R" width="1" name="BB_TX_PACK_RATE_EXT_STATUS_I2" comment="extend bits of BB_TX_PACK_RATE_STATUS for 11ac."/>
    <register addr="50060018" rw_flags="R" width="2" name="BB_TX_PACK_OPTIONS_STATUS_I2" comment="Packet transmit options."/>
    <register addr="5006001c" rw_flags="R" width="2" name="BB_TX_SIGNAL_FIELD_STATUS_I2" comment="Signal field."/>
    <register addr="50060020" rw_flags="R" width="2" name="BB_TX_PACK_SCAN_CONFIG_STATUS_I2" comment="Scan accelerator configuration."/>
    <register addr="50060024" rw_flags="R" width="2" name="BB_TX_PACK_PLEN_1_STATUS_I2" comment="For Hiperlan2: The number of OFDM symbols in the first data part of the packet. For 802.11a: bit 0 is bit 10 of N_data, where N_data is the number of OFDM symbols in the 'Data' part of the burst. Bits [8:1] contain the number of bits transmitted in the last OFDM symbol, including the 6 tail bits. For 802.11n non-STBC: bits [10:0] contain the number of bits transmitted in the last OFDM symbol, including the 6 tail bits. For 802.11n STBC: bits [10:0] contain the number of bits transmitted in the last pair of OFDM symbols, including the 6 tail bits."/>
    <register addr="50060028" rw_flags="R" width="2" name="BB_TX_PACK_PLEN_2_STATUS_I2" comment="For Hiperlan 2: The number of OFDM symbols in the second data part of the packet. For 802.11a: Bits [9:0] contain bits [9:0] of N_data. For 802.11n: Bits [14:0] contain [bits [14:0] of] N_data. Bit 15 indicates LDPC Extra OFDM symbol."/>
    <register addr="5006002c" rw_flags="RW" width="1" name="BB_TX_PACK_P1_START_I2" comment="Bit 0 is one if the first data part of the packet has P1 puncturing, else is zero. Bit 1 is one if the second data part of the packet has P1 puncturing, else is zero. 11a/n does not use P1 puncturing."/>
    <register addr="50060030" rw_flags="RW" width="1" name="BB_TX_PACK_CRC_TYPE_I2" comment="Bit 0 indicates the CRC type for the first data part of the burst (0 = CRC16, 1 = CRC24). Bit 1 indicates the CRC type for the second data part of the burst"/>
    <register addr="50060034" rw_flags="R" width="2" name="BB_TX_PACK_CRC_PERIOD_STATUS_I2" comment="For Hiperlan2: The CRC period i.e. the number of bytes over which the CRC is computed within each of the data parts of the packet. Bits [5:0] are the CRC period for the first data part of the packet, bits [11:6] are the CRC period for the second part. For 802.11a and 802.11n: The number of bytes of the payload, including the four CRC32 bytes."/>
    <register addr="50060038" rw_flags="RW" width="2" name="BB_TX_PACK_CRC_N_PERIODS_I2" comment="The number of CRC periods in each part of the packet. Bits [7:0] - the number of CRC periods in the first part of the packet. Bits [15:8] - the number of CRC periods in the second part of the packet."/>
    <register addr="5006003c" rw_flags="RW" width="1" name="BB_TX_WARMUP_I2" comment="The TX warmup time, in units of 400 ns."/>
    <register addr="50060040" rw_flags="RW" width="1" name="BB_TX_INT_MASK_I2" comment="Interrupt mask register. Setting a bit in this register against an interrupt cause bit position, ensures that it generates an interrupt."/>
    <register addr="50060044" rw_flags="R" width="1" name="BB_TX_INT_CAUSE_I2" comment="Interrupt cause register. Read by the host to determine why it was interrupted."/>
    <register addr="50060048" rw_flags="RW" width="1" name="BB_TX_INT_CLEAR_I2" comment="Interrupt clear register. Writing a one to an interrupt cause bit position clears the associated bit in the BB_**_INT_CAUSE register."/>
    <register addr="5006004c" rw_flags="RW" width="1" name="BB_TX_TIMING_I2" comment="Tx timing adjust control to allow correction for TX latency"/>
    <register addr="50060050" rw_flags="RW" width="1" name="BB_RX_INT_MASK_I2" comment="Interrupt mask register. Setting a bit in this register against an interrupt cause bit position, ensures that it generates an interrupt."/>
    <register addr="50060054" rw_flags="R" width="1" name="BB_RX_INT_CAUSE_I2" comment="Interrupt cause register. Read by the host to determine why it was interrupted."/>
    <register addr="50060058" rw_flags="RW" width="1" name="BB_RX_INT_CLEAR_I2" comment="Interrupt clear register. Writing a one to an interrupt cause bit position clears the associated bit in the BB_**_INT_CAUSE register."/>
    <register addr="5006005c" rw_flags="R" width="1" name="BB_TX_PACK_QUEUE_I2" comment="The number of packets queued for TX by the host and not yet completed."/>
    <register addr="50060060" rw_flags="R" width="1" name="BB_RX_PACK_QUEUE_I2" comment="The number of packets queued for RX by the host and not yet completed."/>
    <register addr="50060064" rw_flags="RW" width="1" name="BB_TX_SCRAMBLER_SEED_I2" comment="Scrambler seed for transmitted bursts. If this register is set to zero, then a pseudo-random scrambler seed is automatically generated for every transmit burst. If this register is set to a non-zero value, then that value is used as the scrambler seed for transmitted bursts."/>
    <register addr="50060068" rw_flags="RW" width="4" name="BB_RX_CONFIG_I2" comment="Receiver configuration"/>
    <register addr="5006006c" rw_flags="RW" width="2" name="BB_RX_CONFIG2_I2" comment="Receiver configuration"/>
    <register addr="50060070" rw_flags="RW" width="1" name="BB_SIGB_SEGPARS_I2" comment="Enable VHTSIGB Segment parsing and deparsing in Transmitter and Receiver"/>
    <register addr="50060074" rw_flags="RW" width="1" name="BB_RX_CONFIG3_I2" comment="Receiver configuration"/>
    <register addr="50060078" rw_flags="RW" width="1" name="BB_RX_PLL_COEFFS_I2" comment="Frequency tracking PLL coefficients"/>
    <register addr="5006007c" rw_flags="RW" width="2" name="BB_RX_DEMAP_METRIC_A_I2" comment="Demapper soft-decision metric as used by the Viterbi decoder"/>
    <register addr="50060080" rw_flags="RW" width="2" name="BB_RX_DEMAP_METRIC_B_I2" comment="Demapper soft-decision metric as used by the Viterbi decoder"/>
    <register addr="50060084" rw_flags="R" width="1" name="BB_STATUS_I2" comment=""/>
    <register addr="50060088" rw_flags="R" width="2" name="BB_FREQ_OFFSET_I2" comment="Frequency offset for the last received burst"/>
    <register addr="5006008c" rw_flags="R" width="2" name="BB_SIGNAL_QUALITY_I2" comment="Bits 15:8 - The estimated EVM for the receive channel. Bits 7:0 - The estimated SNR, based on the burst  preamble, for the receive channel"/>
    <register addr="50060090" rw_flags="R" width="2" name="BB_SIGNAL_QUALITY_DUAL_I2" comment="Bits 15:8 - The estimated EVM for the dual receive channel. Bits 7:0 - The estimated SNR, based on the burst  preamble, for the dual receive channel"/>
    <register addr="50060094" rw_flags="RW" width="1" name="BB_BBA_FREQ_OFFSET_MASK_CONFIG_I2" comment="Reduce the reliability of soft decsions on inner carriers (+/-1, +/-2) when estimated frequency offset exceeds certain thresholds OR permanently reduce the reliability on inner carriers regardless of frequency offset."/>
    <register addr="50060098" rw_flags="RW" width="2" name="BB_BBA_FREQ_OFFSET_MASK_CFG_MA_SC_20M_I2" comment="Reduce the reliability of soft decision on the most affected subcarriers for 20/40MHz bandwidth(1 2 3 or -1 -2 -3, when offset frequency is positive,, it corresponds to -1 -2 and -3"/>
    <register addr="5006009c" rw_flags="RW" width="2" name="BB_BBA_FREQ_OFFSET_MASK_CFG_LA_SC_20M_I2" comment="Reduce the reliability of soft decision on the less affected subcarriers for 20/40MHz bandwidth(1 2 3 or -1 -2 -3, when offset frequency is positive,, it corresponds to 1 2 and 3"/>
    <register addr="500600a0" rw_flags="RW" width="2" name="BB_BBA_FREQ_OFFSET_MASK_CFG_MA_SC_10M_I2" comment="Reduce the reliability of soft decision on the most affected subcarriers for 10MHz bandwidth(1 2 3 or -1 -2 -3, when offset frequency is positive,, it corresponds to -1 -2 and -3"/>
    <register addr="500600a4" rw_flags="RW" width="2" name="BB_BBA_FREQ_OFFSET_MASK_CFG_LA_SC_10M_I2" comment="Reduce the reliability of soft decision on the less affected subcarriers for 10MHz bandwidth(1 2 3 or -1 -2 -3, when offset frequency is positive,, it corresponds to 1 2 and 3"/>
    <register addr="500600a8" rw_flags="RW" width="2" name="BB_BBA_FREQ_OFFSET_MASK_CFG_MA_SC_5M_I2" comment="Reduce the reliability of soft decision on the most affected subcarriers for 5MHz bandwidth(1 2 3 or -1 -2 -3, when offset frequency is positive,, it corresponds to -1 -2 and -3"/>
    <register addr="500600ac" rw_flags="RW" width="2" name="BB_BBA_FREQ_OFFSET_MASK_CFG_LA_SC_5M_I2" comment="Reduce the reliability of soft decision on the less affected subcarriers for 5MHz bandwidth(1 2 3 or -1 -2 -3, when offset frequency is positive,, it corresponds to 1 2 and 3"/>
    <register addr="500600b0" rw_flags="RW" width="2" name="BB_CTRACK_UNREL_I2" comment="Thresholds to define which values of soft bits should disable channel tracking. When below ABS_THRESH on any valid soft bit, channel tracking is disabled for that subcarrier"/>
    <register addr="500600b4" rw_flags="RW" width="2" name="BB_SOFT_WEIGH_FREQ_OFFSET_HIGH_THRESH_20M_40M_I2" comment="the high threshold value for frequency offset in soft weigh for 20/40MHz bandwidth, it is derived by 122 KHz/20 MHz * 2^16"/>
    <register addr="500600b8" rw_flags="RW" width="2" name="BB_SOFT_WEIGH_FREQ_OFFSET_LOW_THRESH_20M_40M_I2" comment="the low threshold value for frequency offset in soft weigh for 20/40MHz bandwidth, it is derived by 50 KHz/20 MHz * 2^16"/>
    <register addr="500600bc" rw_flags="RW" width="2" name="BB_SOFT_WEIGH_FREQ_OFFSET_HIGH_THRESH_10M_I2" comment="the high threshold value for frequency offset in soft weigh for 10MHz bandwidth, it is derived by 84 KHz/10 MHz * 2^16"/>
    <register addr="500600c0" rw_flags="RW" width="2" name="BB_SOFT_WEIGH_FREQ_OFFSET_LOW_THRESH_10M_I2" comment="the low threshold value for frequency offset in soft weigh for 10MHz bandwidth, it is derived by 14 KHz/10 MHz * 2^16"/>
    <register addr="500600c4" rw_flags="RW" width="2" name="BB_SOFT_WEIGH_FREQ_OFFSET_HIGH_THRESH_5M_I2" comment="the high threshold value for frequency offset in soft weigh for 5MHz bandwidth, it is derived by 75 KHz/5 MHz * 2^16"/>
    <register addr="500600c8" rw_flags="RW" width="2" name="BB_SOFT_WEIGH_FREQ_OFFSET_LOW_THRESH_5M_I2" comment="the low threshold value for frequency offset in soft weigh for 5MHz bandwidth, it is derived by 31KHz/5 MHz * 2^16"/>
    <register addr="500600cc" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_SISO_BCC_AWGN_I2" comment="DEMAP SISO BCC AWGN QFAC configuration"/>
    <register addr="500600d0" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_AWGN_I2" comment="MLD MIMO BCC AWGN QFAC configuration"/>
    <register addr="500600d4" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_BCC_FADING_I2" comment="DEMAP SISO BCC FADING QFAC configuration"/>
    <register addr="500600d8" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_SISO_BCC_FADING_MCS7_I2" comment="DEMAP SISO BCC FADING MCS7 QFAC configuration"/>
    <register addr="500600dc" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_SISO_BCC_FADING_MCS8_I2" comment="DEMAP SISO BCC FADING MCS8 QFAC configuration"/>
    <register addr="500600e0" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_SISO_BCC_FADING_MCS9_I2" comment="DEMAP SISO BCC FADING MCS9 QFAC configuration"/>
    <register addr="500600e4" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS0_I2" comment="DEMAP MIMO BCC FADING MCS0 QFAC configuration"/>
    <register addr="500600e8" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS1_I2" comment="DEMAP MIMO BCC FADING MCS1 QFAC configuration"/>
    <register addr="500600ec" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS2_I2" comment="DEMAP MIMO BCC FADING MCS2 QFAC configuration"/>
    <register addr="500600f0" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS3_I2" comment="DEMAP MIMO BCC FADING MCS3 QFAC configuration"/>
    <register addr="500600f4" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS4_I2" comment="DEMAP MIMO BCC FADING MCS4 QFAC configuration"/>
    <register addr="500600f8" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS5_I2" comment="DEMAP MIMO BCC FADING MCS5 QFAC configuration"/>
    <register addr="500600fc" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS6_I2" comment="DEMAP MIMO BCC FADING MCS6 QFAC configuration"/>
    <register addr="50060100" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS7_I2" comment="DEMAP MIMO BCC FADING MCS7 QFAC configuration"/>
    <register addr="50060104" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS8_I2" comment="DEMAP MIMO BCC FADING MCS8 QFAC configuration"/>
    <register addr="50060108" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_BCC_FADING_MCS9_I2" comment="DEMAP MIMO BCC FADING MCS9 QFAC configuration"/>
    <register addr="5006010c" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_SISO_LDPC_AWGN_I2" comment="DEMAP SISO LDPC AWGN QFAC configuration"/>
    <register addr="50060110" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_AWGN_I2" comment="MLD MIMO LDPC AWGN QFAC configuration"/>
    <register addr="50060114" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS0_I2" comment="DEMAP SISO LDPC FADING MCS0 QFAC configuration"/>
    <register addr="50060118" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS1_I2" comment="DEMAP SISO LDPC FADING MCS1 QFAC configuration"/>
    <register addr="5006011c" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS2_I2" comment="DEMAP SISO LDPC FADING MCS2 QFAC configuration"/>
    <register addr="50060120" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS3_I2" comment="DEMAP SISO LDPC FADING MCS3 QFAC configuration"/>
    <register addr="50060124" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS4_I2" comment="DEMAP SISO LDPC FADING MCS4 QFAC configuration"/>
    <register addr="50060128" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS5_I2" comment="DEMAP SISO LDPC FADING MCS5 QFAC configuration"/>
    <register addr="5006012c" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS6_I2" comment="DEMAP SISO LDPC FADING MCS6 QFAC configuration"/>
    <register addr="50060130" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS7_I2" comment="DEMAP SISO LDPC FADING MCS7 QFAC configuration"/>
    <register addr="50060134" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS8_I2" comment="DEMAP SISO LDPC FADING MCS8 QFAC configuration"/>
    <register addr="50060138" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS9_I2" comment="DEMAP SISO LDPC FADING MCS9 QFAC configuration"/>
    <register addr="5006013c" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS10_I2" comment="DEMAP SISO LDPC FADING MCS10 QFAC configuration"/>
    <register addr="50060140" rw_flags="RW" width="2" name="BB_DEMAP_QFAC_SISO_LDPC_FADING_MCS11_I2" comment="DEMAP SISO LDPC FADING MCS11 QFAC configuration"/>
    <register addr="50060144" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS0_I2" comment="DEMAP MIMO LDPC FADING MCS0 QFAC configuration"/>
    <register addr="50060148" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS1_I2" comment="DEMAP MIMO LDPC FADING MCS1 QFAC configuration"/>
    <register addr="5006014c" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS2_I2" comment="DEMAP MIMO LDPC FADING MCS2 QFAC configuration"/>
    <register addr="50060150" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS3_I2" comment="DEMAP MIMO LDPC FADING MCS3 QFAC configuration"/>
    <register addr="50060154" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS4_I2" comment="DEMAP MIMO LDPC FADING MCS4 QFAC configuration"/>
    <register addr="50060158" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS5_I2" comment="DEMAP MIMO LDPC FADING MCS5 QFAC configuration"/>
    <register addr="5006015c" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS6_I2" comment="DEMAP MIMO LDPC FADING MCS6 QFAC configuration"/>
    <register addr="50060160" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS7_I2" comment="DEMAP MIMO LDPC FADING MCS7 QFAC configuration"/>
    <register addr="50060164" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS8_I2" comment="DEMAP MIMO LDPC FADING MCS8 QFAC configuration"/>
    <register addr="50060168" rw_flags="RW" width="4" name="BB_MLD_QFAC_MIMO_LDPC_FADING_MCS9_I2" comment="DEMAP MIMO LDPC FADING MCS9 QFAC configuration"/>
    <register addr="5006016c" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_STBC_BCC_AWGN_I2" comment="DEMAP STBC BCC AWGN QFAC configuration"/>
    <register addr="50060170" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_STBC_BCC_FADING_I2" comment="DEMAP STBC BCC FADING QFAC configuration"/>
    <register addr="50060174" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_STBC_LDPC_AWGN_I2" comment="DEMAP STBC LDPC AWGN QFAC configuration"/>
    <register addr="50060178" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_STBC_LDPC_FADING_I2" comment="DEMAP STBC LDPC FADING QFAC configuration"/>
    <register addr="5006017c" rw_flags="RW" width="2" name="BB_DEMAP_LLR_DOWN_I2" comment="DEMAP LLR DOWN configuration"/>
    <register addr="50060180" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_BF_LDPC_AWGN_I2" comment="DEMAP BEAMFORM LDPC AWGN QFAC configuration"/>
    <register addr="50060184" rw_flags="RW" width="4" name="BB_DEMAP_QFAC_BF_LDPC_FADING_I2" comment="DEMAP BEAMFORM LDPC FADING QFAC configuration"/>
    <register addr="50060188" rw_flags="RW" width="2" name="BB_DEMAP_NOISE_VARIANCE_I2" comment="DEMAP NOISE VARIANCE Forcing"/>
    <register addr="5006018c" rw_flags="RW" width="1" name="BB_DEMAP_NUDGE_GAIN_ADAPT_I2" comment="When set, apply Radio nudge again"/>
    <register addr="50060190" rw_flags="RW" width="2" name="BB_PILOT_PHASE_LIMIT_I2" comment="Limit the absolute pilot angle correction. This is an 11-bit unsigned number in RTL phase format (max value 1024). RTL phase format = (angle in deg / 180) * 1024. (Default = 0.4 radians)"/>
    <register addr="50060194" rw_flags="RW" width="1" name="BB_SAMP_OFFSET_I2" comment="Sampling offset. Data symbols are sampled at a position -BB_SAMP_OFFSET with respect to the beginning of the data part of the symbol."/>
    <register addr="50060198" rw_flags="RW" width="2" name="BB_DEBUG_SELECT_I2" comment="Select the set of signals output at the debug port"/>
    <register addr="5006019c" rw_flags="RW" width="2" name="BB_RX_MISC_CONFIG_I2" comment=""/>
    <register addr="500601a0" rw_flags="RW" width="2" name="BB_MIMO_RATE_MASK_I2" comment="Control rejection of HT and VHT 40MHz packets with certain MIMO rates"/>
    <register addr="500601a4" rw_flags="RW" width="2" name="BB_VHT_SS1_RATE_MASK_I2" comment="Control rejection of VHT 80MHz single spatial stream (or STBC) packets with certain rates"/>
    <register addr="500601a8" rw_flags="RW" width="2" name="BB_VHT_SS2_RATE_MASK_I2" comment="Control rejection of VHT two spatial stream packets with certain rates"/>
    <register addr="500601ac" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG1_I2" comment="synchronizer configuration"/>
    <register addr="500601b0" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG2_I2" comment="synchronizer configuration"/>
    <register addr="500601b4" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG3_I2" comment="synchronizer configuration"/>
    <register addr="500601b8" rw_flags="RW" width="1" name="BB_RX_SYNC_CONFIG4_I2" comment="synchronizer configuration"/>
    <register addr="500601bc" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG5_I2" comment="synchronizer configuration "/>
    <register addr="500601c0" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG6_I2" comment="synchronizer configuration "/>
    <register addr="500601c4" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG7_I2" comment="synchronizer configuration "/>
    <register addr="500601c8" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG8_I2" comment="Lower limit on quantization to avoid excessive AGC action "/>
    <register addr="500601cc" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG9_I2" comment="High limit on quantization to avoid excessive AGC action"/>
    <register addr="500601d0" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG10_I2" comment="Number of samples to advance the start the LTF search window"/>
    <register addr="500601d4" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG11_I2" comment="synchronizer configuration "/>
    <register addr="500601d8" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG12_I2" comment="synchronizer configuration for new new STBC sync "/>
    <register addr="500601dc" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG13_I2" comment="synchronizer configuration for new new STBC sync "/>
    <register addr="500601e0" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG14_I2" comment="LTF lock limited by distance from max peak "/>
    <register addr="500601e4" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG15_I2" comment="Threshold for comparing the combined STF correlation"/>
    <register addr="500601e8" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG16_I2" comment=" Threshold for comparing the combined STF correlation"/>
    <register addr="500601ec" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG17_I2" comment=" First and second 40MHz sync split filter"/>
    <register addr="500601f0" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG18_I2" comment=" 80MHz sync split filter"/>
    <register addr="500601f4" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG19_I2" comment="Configuration for detection logic for CCA primary and secondary"/>
    <register addr="500601f8" rw_flags="RW" width="4" name="BB_RX_SYNC_CONFIG20_I2" comment="STF sync detector configuration"/>
    <register addr="500601fc" rw_flags="RW" width="2" name="BB_RX_SYNC_CONFIG21_I2" comment="STF sync configuration with spare bits"/>
    <register addr="50060200" rw_flags="RW" width="4" name="BB_RX_SYNC_NOTCH1_I2" comment="Tone notch configuration"/>
    <register addr="50060204" rw_flags="RW" width="4" name="BB_RX_SYNC_NOTCH2_I2" comment="Tone notch configuration"/>
    <register addr="50060208" rw_flags="RW" width="4" name="BB_RX_SYNC_NOTCH3_I2" comment="Tone notch configuration"/>
    <register addr="5006020c" rw_flags="RW" width="4" name="BB_RX_SYNC_NOTCH4_I2" comment="Tone notch configuration"/>
    <register addr="50060210" rw_flags="RW" width="4" name="BB_SYNC_STF_WEIGHT_CFG0_I2" comment="STF group weight factor"/>
    <register addr="50060214" rw_flags="RW" width="4" name="BB_SYNC_STF_WEIGHT_CFG1_I2" comment="STF group weight factor"/>
    <register addr="50060218" rw_flags="RW" width="1" name="BB_SYNC_CCA_WEIGHT_SEL_I2" comment="CCA weighted combing sel"/>
    <register addr="5006021c" rw_flags="RW" width="1" name="BB_SYNC_LTF_WEIGHT_COMBINE_MODE_I2" comment="LTF MF weighted combine mode 0: no weight, 1:Bc0+0.75xBc0, 2:Bc0+0.625Bc0, 3:Bc0+0.5Bc0"/>
    <register addr="50060220" rw_flags="RW" width="1" name="BB_SYNC_LTF_MODE_I2" comment="LTF Peak selection control"/>
    <register addr="50060224" rw_flags="RW" width="1" name="BB_SYNC_LTF_THR2_I2" comment="LTF peak threshold(for index7)"/>
    <register addr="50060228" rw_flags="RW" width="1" name="BB_RX_SYNC_CCA_CFG_I2" comment="Configure to take into account the CCA of each 20M subband for the primary channel"/>
    <register addr="5006022c" rw_flags="RW" width="1" name="BB_BFEE_FDBK_DSNR_EXPR_I2" comment="Beemforming feedback deltan snr expr control"/>
    <register addr="50060230" rw_flags="RW" width="1" name="BB_BFEE_MU_CBR_I2" comment="Indication of MU/SU CBR, 0:SU, 1:MU"/>
    <register addr="50060234" rw_flags="R" width="2" name="BB_BFEE_CBR_LENGTH_I2" comment="Beamformee CBR Length."/>
    <register addr="50060238" rw_flags="R" width="2" name="BB_CEST_RE_DATA_I2" comment="Real part of data for calibration channel estimation"/>
    <register addr="5006023c" rw_flags="R" width="2" name="BB_CEST_IM_DATA_I2" comment="Imaginary part of data for calibration channel estimation"/>
    <register addr="50060240" rw_flags="R" width="1" name="BB_CEST_LTF_OFFSET_I2" comment="20 MHz Sample offset for values read from BB_CEST_ADDR[8:6]=='000' for an 11a or green-field packet. Value is in 2's complement. Negative values indicate that the LTF sync is earlier than the position indicated by the STF sync."/>
    <register addr="50060244" rw_flags="RW" width="4" name="BB_CEST_CONFIG_I2" comment="Configuration for handling data for calibration"/>
    <register addr="50060248" rw_flags="RW" width="2" name="BB_CEST_STS_MULT_I2" comment="Data needed for Space-Time-Stream combination (needed for BB_CEST_CONFIG_MODE='10')"/>
    <register addr="5006024c" rw_flags="RW" width="2" name="BB_CEST_STS_PHASE_I2" comment="Phase rotation for Space-Time-Stream channel estimate (needed for BB_CEST_CONFIG_MODE='10')"/>
    <register addr="50060250" rw_flags="R" width="2" name="BB_CEST_MAX_I2" comment="Maximum channel estimate value across all Space-Time-Streams (needed to normalise the channel estimates sent for calibration purposes)"/>
    <register addr="50060254" rw_flags="R" width="1" name="BB_CEST_STATUS_I2" comment="Status information for calibration support"/>
    <register addr="50060258" rw_flags="RW" width="2" name="BB_CEST_ADDR_I2" comment="Channel estimate value requested"/>
    <register addr="5006025c" rw_flags="RW" width="2" name="BB_CEST_SMOOTH_SNR_THRESHOLD1_I2" comment="SNR Threshold 1 channel smoothing. To program value, multiply desired SNR (in dB) by 4. If signal SNR is above threshold 1, then filter option 0 is used in channel smoothing."/>
    <register addr="50060260" rw_flags="RW" width="2" name="BB_CEST_SMOOTH_SNR_THRESHOLD2_I2" comment="SNR Threshold 2 for channel smoothing. To program value, multiply desired SNR (in dB) by 4. If signal SNR is above threshold 5, then filter option 4 is used in channel smoothing. If below, filter option 5 is used."/>
    <register addr="50060264" rw_flags="RW" width="2" name="BB_CEST_SMOOTH_SNR_THRESHOLD3_I2" comment="SNR Threshold 3 for channel smoothing. To program value, multiply desired SNR (in dB) by 4.If signal SNR is above threshold 2, then filter option 1 is used in channel smoothing."/>
    <register addr="50060268" rw_flags="RW" width="2" name="BB_CEST_SMOOTH_SNR_THRESHOLD4_I2" comment="SNR Threshold 4 for channel smoothing. To program value, multiply desired SNR (in dB) by 4. If signal SNR is above threshold 3, then filter option 2 is used in channel smoothing."/>
    <register addr="5006026c" rw_flags="RW" width="2" name="BB_CEST_SMOOTH_SNR_THRESHOLD5_I2" comment="SNR Threshold 5 for channel smoothing. To program value, multiply desired SNR (in dB) by 4. If signal SNR is above threshold 4, then filter option 3 is used in channel smoothing."/>
    <register addr="50060270" rw_flags="RW" width="2" name="BB_MRC_CONFIG_BASIC_I2" comment="Control register to configure OFDM Maximum Ratio Combining and Basic MRC block"/>
    <register addr="50060274" rw_flags="RW" width="2" name="BB_MRC_CONFIG_STBC_I2" comment="Unused register"/>
    <register addr="50060278" rw_flags="RW" width="2" name="BB_MRC_CONFIG_STREAM2_I2" comment="Unused register"/>
    <register addr="5006027c" rw_flags="RW" width="2" name="BB_MRC_CONFIG_FINAL_I2" comment="Unused register"/>
    <register addr="50060280" rw_flags="RW" width="1" name="BB_MRC_NONCONT_BANDS_I2" comment="Control register to whether MRC non contiguous bands or not."/>
    <register addr="50060284" rw_flags="RW" width="2" name="BB_SC_SOFT_WEIGH_ADDRESS_I2" comment="This register is used for the first step of a two stage process to reduce reliability of individual subcarriers. First this register is set to a subcarrier range, and then BB_SC_SOFT_WEIGH_ENABLE is used to select which sub-carrier is being targetted within this range"/>
    <register addr="50060288" rw_flags="RW" width="2" name="BB_SC_SOFT_WEIGH_ENABLE_I2" comment="Each bit can enable reduced reliability if set. The sub-carrier affected by each bit is BB_SC_SOFT_WEIGH_ADDRESS+bit_index. e.g. with BB_SC_SOFT_WEIGH_ADDRESS=-16, bit 0 targets sub-carrier -16, bit 1 targets -15 etc."/>
    <register addr="5006028c" rw_flags="R" width="2" name="BB_SC_SOFT_WEIGH_ENABLE_STATUS_I2" comment="Internal values of BB_SC_SOFT_WEIGH_ENABLE can be read by selecting the range using BB_SC_SOFT_WEIGH_ADDRESS and then reading this register. N.B. Sub-carriers that cannot be valid are returned as 0"/>
    <register addr="50060290" rw_flags="RW" width="2" name="BB_DD_CPE_CONFIG_I2" comment="Configuration for the Data Directed Common Phase Error calculation"/>
    <register addr="50060294" rw_flags="RW" width="1" name="BB_DD_CPE_CONFIG2_I2" comment="Configuration 2 for the Data Directed Common Phase Error calculation"/>
    <register addr="50060298" rw_flags="RW" width="2" name="BB_PTW70_CONFIG_I2" comment="Setup to allow detection and control relating to packets with strong phase wobble such as those from PTW70 test equipment"/>
    <register addr="5006029c" rw_flags="RW" width="2" name="BB_PTW70_CONFIG2_I2" comment="Setup 2 to allow detection and control relating to packets with strong phase wobble such as those from PTW70 test equipment"/>
    <register addr="500602a0" rw_flags="RW" width="1" name="BB_RX_RADIO_CS_CONFIG_I2" comment="RX Radio CS detection configuration for 80MHz bandwidth"/>
    <register addr="500602a4" rw_flags="RW" width="4" name="BB_RX_ENERGY_DET_THRESHOLD_I2" comment="RX energy detection threshold for primary and secondary 20MHz channel"/>
    <register addr="500602a8" rw_flags="RW" width="4" name="BB_LDPC_OFFSET_I2" comment="Min-Sum algorithm offset for LDPC decoder for AWGN and FADING"/>
    <register addr="500602ac" rw_flags="RW" width="4" name="BB_LDPC_OFFSET_1024QAM_I2" comment="Min-Sum algorithm offset for LDPC decoder for 1024QAM"/>
    <register addr="500602b0" rw_flags="RW" width="4" name="BB_QAM1024_ENABLE_I2" comment="QAM1024 Support Enable"/>
    <register addr="500602b4" rw_flags="RW" width="2" name="BB_CHDET_I2" comment="Channel Type Detection"/>
    <register addr="500602b8" rw_flags="RW" width="4" name="BB_CHDET_ZERO_THRESHOLD_SISO_I2" comment="Channel Type Detection Zero Threshold for SISO Case"/>
    <register addr="500602bc" rw_flags="RW" width="4" name="BB_CHDET_LOW_THRESHOLD_SISO_I2" comment="Channel Type Detection Low Threshold for SISO Case"/>
    <register addr="500602c0" rw_flags="RW" width="4" name="BB_CHDET_MID_THRESHOLD_SISO_I2" comment="Channel Type Detection Mid Threshold for SISO Case"/>
    <register addr="500602c4" rw_flags="RW" width="4" name="BB_CHDET_HIGH_THRESHOLD_SISO_I2" comment="Channel Type Detection High Threshold for SISO Case"/>
    <register addr="500602c8" rw_flags="RW" width="4" name="BB_CHDET_ZERO_THRESHOLD_STBC_I2" comment="Channel Type Detection Zero Threshold for STBC Case"/>
    <register addr="500602cc" rw_flags="RW" width="4" name="BB_CHDET_LOW_THRESHOLD_STBC_I2" comment="Channel Type Detection Low Threshold for STBC Case"/>
    <register addr="500602d0" rw_flags="RW" width="4" name="BB_CHDET_MID_THRESHOLD_STBC_I2" comment="Channel Type Detection Mid Threshold for STBC Case"/>
    <register addr="500602d4" rw_flags="RW" width="4" name="BB_CHDET_HIGH_THRESHOLD_STBC_I2" comment="Channel Type Detection High Threshold for STBC Case"/>
    <register addr="500602d8" rw_flags="RW" width="4" name="BB_CHDET_ZERO_THRESHOLD_BF_I2" comment="Channel Type Detection Zero Threshold for BF Case"/>
    <register addr="500602dc" rw_flags="RW" width="4" name="BB_CHDET_LOW_THRESHOLD_BF_I2" comment="Channel Type Detection Low Threshold for BF Case"/>
    <register addr="500602e0" rw_flags="RW" width="4" name="BB_CHDET_MID_THRESHOLD_BF_I2" comment="Channel Type Detection Mid Threshold for BF Case"/>
    <register addr="500602e4" rw_flags="RW" width="4" name="BB_CHDET_HIGH_THRESHOLD_BF_I2" comment="Channel Type Detection High Threshold for BF Case"/>
    <register addr="500602e8" rw_flags="RW" width="2" name="BB_RX_PAYLOAD_DET_THRESHOLD_I2" comment="RX payload detection threshold for all subbands"/>
    <register addr="500602ec" rw_flags="RW" width="1" name="BB_RX_PAYLOAD_DET_CONFIG_I2" comment="Payload Detector enables."/>
    <register addr="500602f0" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_NGI_CONFIG1_I2" comment="First configuration register for the normal guard interval (NGI) correlator within the OFDM Payload Detector."/>
    <register addr="500602f4" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_NGI_CONFIG2_I2" comment="Second configuration register for the normal guard interval (NGI) correlator within the OFDM Payload Detector."/>
    <register addr="500602f8" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_NGI_CONFIG3_I2" comment="Third configuration register for the normal guard interval (NGI) correlator within the OFDM Payload Detector."/>
    <register addr="500602fc" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_NGI_CONFIG4_I2" comment="Fourth configuration register for the normal guard interval (NGI) correlator within the OFDM Payload Detector."/>
    <register addr="50060300" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_SGI_CONFIG1_I2" comment="First configuration register for the short guard interval (SGI) correlator within the OFDM Payload Detector."/>
    <register addr="50060304" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_SGI_CONFIG2_I2" comment="Second configuration register for the short guard interval (SGI) correlator within the OFDM Payload Detector."/>
    <register addr="50060308" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_SGI_CONFIG3_I2" comment="Third configuration register for the short guard interval (SGI) correlator within the OFDM Payload Detector."/>
    <register addr="5006030c" rw_flags="RW" width="2" name="BB_RX_OFDM_DET_SGI_CONFIG4_I2" comment="Fourth configuration register for the short guard interval (SGI) correlator within the OFDM Payload Detector."/>
    <register addr="50060310" rw_flags="RW" width="1" name="BB_BBA_CCA_CFG_I2" comment="CCA ignore control on the primary channel, secondary channel, secondary 40 channel and secondary 80 channel."/>
    <register addr="50060314" rw_flags="RW" width="1" name="BB_MLD_CONFIG_I2" comment="MLD Configuration registers"/>
    <register addr="50060318" rw_flags="R" width="2" name="BB_BBA_DEBUG_I2" comment="Read access to BBA debug information. To see this data correctly, the enable bit BB_DEBUG_SELECT.BB_DEBUG_SELECT_EN must be set, to enable the register supplying this information."/>
    <register addr="5006031c" rw_flags="RW" width="2" name="BB_BBA_BF_TX_CONFIG_I2" comment="TX beamforming configuration."/>
    <register addr="50060320" rw_flags="RW" width="4" name="BB_BBA_BF_TX_KEYHOLE_I2" comment="TX beamforming configuration #2."/>
    <register addr="50060324" rw_flags="R" width="4" name="BB_BBA_BF_TX_STATUS1_I2" comment="Tx beamformer CBR category fields parsed."/>
    <register addr="50060328" rw_flags="R" width="4" name="BB_BBA_BF_TX_STATUS2_I2" comment="Tx beamformer fields parsed and DMA collision counter."/>
    <register addr="5006032c" rw_flags="R" width="4" name="BB_BBA_BF_TX_ANGLE_STORE_KEYHOLE_DATA_STATUS_I2" comment="This register is used to read the angle store data."/>
    <register addr="50060330" rw_flags="RW" width="4" name="BB_CEST_SMOOTHING_I2" comment="This register is used to control smoothing"/>
    <register addr="50060334" rw_flags="RW" width="4" name="BB_LDPC_CONFIG_I2" comment="LDPC configuration"/>
    <register addr="50060338" rw_flags="RW" width="1" name="BB_LDPC_RX_THROTTLE_ADDR_I2" comment="Address used to load different values to internal register to allow reduced data rate in LDPC output. Address to use is described in BB_LDPC_RX_THROTTLE_ADDR_REF"/>
    <register addr="5006033c" rw_flags="RW" width="2" name="BB_LDPC_RX_THROTTLE_I2" comment="Address used to load different values to internal register to allow reduced data rate in LDPC output"/>
    <register addr="50060340" rw_flags="RW" width="1" name="BB_CPE_PHASE_REG_EN_I2" comment="Enables the phase reg calculations in RTL"/>
    <register addr="50060344" rw_flags="R" width="2" name="BB_CPE_PHASE_MAX_I2" comment="Maximum CPE phase of a frame over all symbols"/>
    <register addr="50060348" rw_flags="R" width="2" name="BB_CPE_PHASE_MIN_I2" comment="Minimum CPE phase of a frame over all symbols"/>
    <register addr="5006034c" rw_flags="R" width="2" name="BB_CPE_PHASE_ACCUM_I2" comment="Phase accumulation of all symbol phase of the frame"/>
    <register addr="50060350" rw_flags="R" width="2" name="BB_CPE_PHASE_SQR_ACCUM_I2" comment="Accumulation of phase square over all symbols of the frame"/>
    <register addr="50060354" rw_flags="R" width="2" name="BB_CPE_PHASE_DIFF_ACCUM_I2" comment="Accumulation of phase difference over all symbols of the frame"/>
    <register addr="50060358" rw_flags="R" width="2" name="BB_CPE_NUM_ACCUM_I2" comment="Number of phases accumulated in the accumulation registers"/>
    <register addr="5006035c" rw_flags="RW" width="1" name="BB_FREQ_TRACK_REG_EN_I2" comment="Enables the frequency reg calculations in RTL"/>
    <register addr="50060360" rw_flags="R" width="2" name="BB_FREQ_TRACK_MAX_I2" comment="Maximum fine frequency of a frame over all symbols"/>
    <register addr="50060364" rw_flags="R" width="2" name="BB_FREQ_TRACK_MIN_I2" comment="Minimum fine frequency of a frame over all symbols"/>
    <register addr="50060368" rw_flags="R" width="2" name="BB_FREQ_TRACK_ACCUM_I2" comment="Fine frequency accumulation of all symbol phase of the frame"/>
    <register addr="5006036c" rw_flags="R" width="2" name="BB_FREQ_TRACK_SQR_ACCUM_I2" comment="Accumulation of fine frequency square over all symbols of the frame"/>
    <register addr="50060370" rw_flags="R" width="2" name="BB_FREQ_TRACK_NUM_ACCUM_I2" comment="Number of fine frequency accumulated in the accumulation registers"/>
    <register addr="50060374" rw_flags="RW" width="1" name="BB_EN_VHT_NUDGEAGAIN_I2" comment="When set enables nudge again for HT/VHT packets otherwise nudge again only for HT packets"/>
    <register addr="50060378" rw_flags="RW" width="4" name="BB_LTF_SYNC_LATENCY_I2" comment="Number of 20M clock cycles of LTF peak calculation latency"/>
    <register addr="5006037c" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT1_I2[0]" comment="Smoothing filter coefficient for SNR1 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50060380" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT1_I2[1]" comment="Smoothing filter coefficient for SNR1 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50060384" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT1_I2[2]" comment="Smoothing filter coefficient for SNR1 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50060388" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT1_I2[3]" comment="Smoothing filter coefficient for SNR1 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="5006038c" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT1_I2[4]" comment="Smoothing filter coefficient for SNR1 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50060390" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT1_I2[5]" comment="Smoothing filter coefficient for SNR1 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50060394" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT2_I2[0]" comment="Smoothing filter coefficient for SNR2 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50060398" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT2_I2[1]" comment="Smoothing filter coefficient for SNR2 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="5006039c" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT2_I2[2]" comment="Smoothing filter coefficient for SNR2 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603a0" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT2_I2[3]" comment="Smoothing filter coefficient for SNR2 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603a4" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT2_I2[4]" comment="Smoothing filter coefficient for SNR2 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603a8" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT2_I2[5]" comment="Smoothing filter coefficient for SNR2 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603ac" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT3_I2[0]" comment="Smoothing filter coefficient for SNR3 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603b0" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT3_I2[1]" comment="Smoothing filter coefficient for SNR3 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603b4" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT3_I2[2]" comment="Smoothing filter coefficient for SNR3 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603b8" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT3_I2[3]" comment="Smoothing filter coefficient for SNR3 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603bc" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT3_I2[4]" comment="Smoothing filter coefficient for SNR3 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603c0" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT3_I2[5]" comment="Smoothing filter coefficient for SNR3 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603c4" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT4_I2[0]" comment="Smoothing filter coefficient for SNR4 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603c8" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT4_I2[1]" comment="Smoothing filter coefficient for SNR4 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603cc" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT4_I2[2]" comment="Smoothing filter coefficient for SNR4 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603d0" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT4_I2[3]" comment="Smoothing filter coefficient for SNR4 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603d4" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT4_I2[4]" comment="Smoothing filter coefficient for SNR4 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603d8" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT4_I2[5]" comment="Smoothing filter coefficient for SNR4 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603dc" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT5_I2[0]" comment="Smoothing filter coefficient for SNR5 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603e0" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT5_I2[1]" comment="Smoothing filter coefficient for SNR5 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603e4" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT5_I2[2]" comment="Smoothing filter coefficient for SNR5 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603e8" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT5_I2[3]" comment="Smoothing filter coefficient for SNR5 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603ec" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT5_I2[4]" comment="Smoothing filter coefficient for SNR5 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603f0" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT5_I2[5]" comment="Smoothing filter coefficient for SNR5 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603f4" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT6_I2[0]" comment="Smoothing filter coefficient for SNR6 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603f8" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT6_I2[1]" comment="Smoothing filter coefficient for SNR6 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="500603fc" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT6_I2[2]" comment="Smoothing filter coefficient for SNR6 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50060400" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT6_I2[3]" comment="Smoothing filter coefficient for SNR6 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50060404" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT6_I2[4]" comment="Smoothing filter coefficient for SNR6 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="50060408" rw_flags="RW" width="4" name="BB_CEST_SMOOTH_COEFFICIENT6_I2[5]" comment="Smoothing filter coefficient for SNR6 (0:Fading, 1:AWGN, 2:BF Nsts1 Fading, 3:BF Nsts1 AWGN, 4:BF Nsts2 Fading, 5:BF Nsts2 AWGN)"/>
    <register addr="5006040c" rw_flags="R" width="1" name="BB_CEST_SMOOTH_DEBUG_I2" comment="Selected Smoothing filter type for debugging"/>
    <register addr="50060410" rw_flags="RW" width="4" name="BB_LPE_CONFIG_I2" comment="Linear phase estimation configuration"/>
    <register addr="50060414" rw_flags="RW" width="4" name="BB_CPE_CONFIG_I2" comment="BB DD CPE configuration"/>
    <register addr="50060418" rw_flags="RW" width="4" name="BB_DDCPE_PHASE_LIMIT_I2" comment="Phase limitation value for DD-CPE"/>
    <register addr="5006041c" rw_flags="RW" width="1" name="BB_DDCPE_PHASE_1024QAM_LIMIT_I2" comment="Phase limitation value for DD-CPE"/>
    <register addr="50060420" rw_flags="RW" width="4" name="BB_CPE_MMSE_WEIGHT_BANK0_I2" comment="Pilot weight for MMSE CPE"/>
    <register addr="50060424" rw_flags="RW" width="4" name="BB_CPE_MMSE_WEIGHT_BANK1_I2" comment="Pilot weight for MMSE CPE"/>
    <register addr="50060428" rw_flags="RW" width="4" name="BB_CPE_MMSE_WEIGHT_BANK2_I2" comment="Pilot weight for MMSE CPE"/>
    <register addr="5006042c" rw_flags="RW" width="4" name="BB_DDCPE_MMSE_PILOT_WEIGHT_BANK0_I2" comment="Pilot weight for MMSE DD-CPE"/>
    <register addr="50060430" rw_flags="RW" width="4" name="BB_DDCPE_MMSE_PILOT_WEIGHT_BANK1_I2" comment="Pilot weight for MMSE DD-CPE"/>
    <register addr="50060434" rw_flags="RW" width="2" name="BB_DDCPE_MMSE_PILOT_WEIGHT_BANK2_I2" comment="Pilot weight for MMSE DD-CPE"/>
    <register addr="50060438" rw_flags="RW" width="4" name="BB_DDCPE_MMSE_DATA_WEIGHT_BANK0_I2" comment="Data weight for MMSE DD-CPE"/>
    <register addr="5006043c" rw_flags="RW" width="4" name="BB_DDCPE_MMSE_DATA_WEIGHT_BANK1_I2" comment="Data weight for MMSE DD-CPE"/>
    <register addr="50060440" rw_flags="RW" width="2" name="BB_DDCPE_MMSE_DATA_WEIGHT_BANK2_I2" comment="Data weight for MMSE DD-CPE"/>
    <register addr="50060444" rw_flags="RW" width="4" name="BB_DDCPE_LLR_THRES_BCC_I2" comment="DDCPE LLR threshold for BCC"/>
    <register addr="50060448" rw_flags="RW" width="4" name="BB_DDCPE_LLR_THRES_LDPC_I2" comment="DDCPE LLR threshold for LDPC"/>
    <register addr="5006044c" rw_flags="RW" width="2" name="BB_MMSE_SYM_OFFSET_I2" comment="Symbol Offset to skip MMSE-CPE"/>
    <register addr="50060450" rw_flags="R" width="4" name="BB_DEBUG_STATUS_MISC_I2" comment="Misc Internal signal status"/>
    <register addr="50060454" rw_flags="RW" width="4" name="BB_GID_MEMBERSHIP_L_I2" comment="Membership status array"/>
    <register addr="50060458" rw_flags="RW" width="4" name="BB_GID_MEMBERSHIP_H_I2" comment="Membership status array"/>
    <register addr="5006045c" rw_flags="RW" width="4" name="BB_GID_USERPOSITION_LL_I2" comment="User Position Array 2 bits"/>
    <register addr="50060460" rw_flags="RW" width="4" name="BB_GID_USERPOSITION_LH_I2" comment="User Position Array 2 bits"/>
    <register addr="50060464" rw_flags="RW" width="4" name="BB_GID_USERPOSITION_HL_I2" comment="User Position Array 2 bits"/>
    <register addr="50060468" rw_flags="RW" width="4" name="BB_GID_USERPOSITION_HH_I2" comment="User Position Array 2 bits"/>
    <register addr="5006046c" rw_flags="RW" width="1" name="BB_IEEE_NDP_CTRL_I2" comment="NDP Decision Method Control"/>
    <register addr="50060470" rw_flags="RW" width="4" name="BASEBAND_TX_CONFIG_I2" comment="Config for PAPR module"/>
    <register addr="50060474" rw_flags="RW" width="2" name="BASEBAND_TX_CONFIG2_I2" comment="Config for Tx filtering stages and papr"/>
    <register addr="50060478" rw_flags="RW" width="1" name="BASEBAND_TX_EVM_PARAMS_I2" comment="Used to tune the gain in the upsample filters in preproc to enhance the Evm across the preproc"/>
    <register addr="5006047c" rw_flags="RW" width="4" name="BB_TX_SWED_PAPR_CONFIG_I2" comment="SWED PAPR Configuration"/>
    <register addr="50060480" rw_flags="RW" width="4" name="BB_DIRECTION_FIND_CONFIG_I2" comment="Configuration for direction finder"/>
    <register addr="50060484" rw_flags="R" width="4" name="BB_DIRECTION_FIND_PHASE_01_I2" comment="This register is used to read the phase of symbol 0 and 1 ."/>
    <register addr="50060488" rw_flags="R" width="4" name="BB_DIRECTION_FIND_PHASE_23_I2" comment="This register is used to read the phase of symbol 2 and 3 ."/>
    <register addr="5006048c" rw_flags="R" width="4" name="BB_DIRECTION_FIND_PHASE_45_I2" comment="This register is used to read the phase of symbol 4 and 5 ."/>
    <register addr="50060490" rw_flags="R" width="4" name="BB_DIRECTION_FIND_PHASE_67_I2" comment="This register is used to read the phase of symbol 6 and 7 ."/>
    <register addr="50060494" rw_flags="R" width="4" name="BB_DIRECTION_FIND_PHASE_89_I2" comment="This register is used to read the phase of symbol 8 and 9 ."/>
    <register addr="50060498" rw_flags="RW" width="1" name="BB_EVM_SIG_EN_I2" comment="EVM Sig. EN"/>
    <register addr="5006049c" rw_flags="RW" width="1" name="BB_DISABLE_NUDGE_GAIN_I2" comment="Nudge Gain Disable"/>
  </block>
  <block name="wl_bbb" comment="">
    <register addr="50070000" rw_flags="R" width="2" name="BBB_TX_BURST_START_STATUS" comment=""/>
    <register addr="50070004" rw_flags="R" width="1" name="BBB_TX_PREAMB_TYPE_STATUS" comment=""/>
    <register addr="50070008" rw_flags="R" width="1" name="BBB_TX_BURST_RATE_STATUS" comment="Transmit burst status information: rate and duplicate mode config for DSSS/CCK (a non-standard feature)"/>
    <register addr="5007000c" rw_flags="R" width="2" name="BBB_TX_BURST_LEN_STATUS" comment=""/>
    <register addr="50070010" rw_flags="R" width="2" name="BBB_TX_BURST_OPTIONS_STATUS" comment="Packet transmit options."/>
    <register addr="50070014" rw_flags="R" width="2" name="BBB_TX_BURST_SCAN_CONFIG_STATUS" comment="Scan accelerator configuration."/>
    <register addr="50070018" rw_flags="RW" width="1" name="BBB_TX_PKT_CONFIG" comment=""/>
    <register addr="5007001c" rw_flags="RW" width="2" name="BBB_TX_MOD_CONFIG" comment=""/>
    <register addr="50070020" rw_flags="RW" width="2" name="BBB_TX_FILTER_CONFIG" comment=""/>
    <register addr="50070024" rw_flags="RW" width="4" name="BBB_TX_TIMER_CONFIG" comment=""/>
    <register addr="50070028" rw_flags="RW" width="2" name="BBB_TX_INT_MASK" comment=""/>
    <register addr="5007002c" rw_flags="RW" width="2" name="BBB_TX_INT_CLEAR" comment=""/>
    <register addr="50070030" rw_flags="R" width="2" name="BBB_TX_INT_CAUSE" comment=""/>
    <register addr="50070034" rw_flags="R" width="1" name="BBB_TX_EVENT_TYPE" comment=""/>
    <register addr="50070038" rw_flags="R" width="1" name="BBB_TX_PKT_STATUS" comment="CCK transmitter state machine current state"/>
    <register addr="5007003c" rw_flags="RW" width="1" name="BBB_RX_PKT_CONFIG" comment=""/>
    <register addr="50070040" rw_flags="RW" width="1" name="BBB_RX_FILTER_CONFIG" comment="40 to 44MHz resampling filter settings.  These settings are applied to the two instances of this filter module, for I and Q signals."/>
    <register addr="50070044" rw_flags="RW" width="4" name="BBB_RX_SYNC_SYM_CONFIG" comment=""/>
    <register addr="50070048" rw_flags="RW" width="2" name="BBB_RX_SYNC_PKT_CONFIG" comment="Configures detection of SFD (Start Frame Delimiter), aka Packet Sync"/>
    <register addr="5007004c" rw_flags="RW" width="1" name="BBB_RX_SLICER_CONFIG" comment=""/>
    <register addr="50070050" rw_flags="RW" width="2" name="BBB_RX_FREQ_EST_CONFIG" comment=""/>
    <register addr="50070054" rw_flags="RW" width="2" name="BBB_RX_CHAN_EST_CONFIG" comment=""/>
    <register addr="50070058" rw_flags="RW" width="1" name="BBB_RX_CLKTRACK_CONFIG" comment=""/>
    <register addr="5007005c" rw_flags="RW" width="2" name="BBB_RX_DESPREAD_CONFIG" comment=""/>
    <register addr="50070060" rw_flags="RW" width="4" name="BBB_RX_DESPREAD_CONFIG2" comment=""/>
    <register addr="50070064" rw_flags="RW" width="4" name="BBB_RX_TIMER_CONFIG" comment=""/>
    <register addr="50070068" rw_flags="RW" width="1" name="BBB_RX_AGC_GAIN_INIT" comment=""/>
    <register addr="5007006c" rw_flags="RW" width="2" name="BBB_RX_AGC_GAIN_LIMITS" comment=""/>
    <register addr="50070070" rw_flags="RW" width="2" name="BBB_RX_AGC_TARGETS" comment=""/>
    <register addr="50070074" rw_flags="RW" width="2" name="BBB_RX_AGC_CONFIG" comment=""/>
    <register addr="50070078" rw_flags="RW" width="2" name="BBB_RX_INT_MASK" comment=""/>
    <register addr="5007007c" rw_flags="RW" width="2" name="BBB_RX_INT_CLEAR" comment=""/>
    <register addr="50070080" rw_flags="RW" width="2" name="BBB_RX_SYNC_SYM_CONFIG2" comment=""/>
    <register addr="50070084" rw_flags="RW" width="2" name="BBB_RX_SYNC_SYM_CONFIG3" comment="Configuration of CCK symbol synchronizer with pattern matching criteria (See B-65913)"/>
    <register addr="50070088" rw_flags="RW" width="1" name="BBB_RX_SYNC_SYM_CONFIG4" comment="More configuration related to CCK symbol synchronizer with pattern matching criteria (See B-65913 and B-77346)"/>
    <register addr="5007008c" rw_flags="RW" width="1" name="BBB_RX_DIVERSITY_CFG" comment="Configuration for DSSS/CCK switched diversity reception"/>
    <register addr="50070090" rw_flags="RW" width="4" name="BBB_RX_JUMP_DET_CONFIG" comment="B Modem signal jump detector configuration"/>
    <register addr="50070094" rw_flags="RW" width="4" name="BBB_RX_SYNC_SYM_PAT_L" comment="Pattern to match for Long preamble"/>
    <register addr="50070098" rw_flags="RW" width="4" name="BBB_RX_SYNC_SYM_PAT_S" comment="Pattern to match for Short preamble"/>
    <register addr="5007009c" rw_flags="RW" width="2" name="BBB_RX_DEBUG_CONFIG" comment=""/>
    <register addr="500700a0" rw_flags="R" width="2" name="BBB_RX_INT_CAUSE" comment=""/>
    <register addr="500700a4" rw_flags="R" width="1" name="BBB_RX_PREAMB_TYPE" comment=""/>
    <register addr="500700a8" rw_flags="R" width="1" name="BBB_RX_BURST_RATE" comment=""/>
    <register addr="500700ac" rw_flags="R" width="2" name="BBB_RX_BURST_LEN" comment=""/>
    <register addr="500700b0" rw_flags="R" width="1" name="BBB_RX_EVENT_TYPE" comment=""/>
    <register addr="500700b4" rw_flags="R" width="2" name="BBB_RX_SIGNAL_QUALITY" comment=""/>
    <register addr="500700b8" rw_flags="R" width="4" name="BBB_RX_FREQ_ERROR" comment="RxFreqErrorKHz = ((Reg Value in 2s complement) * 44000) / (11 * 65536 * 4)"/>
    <register addr="500700bc" rw_flags="R" width="2" name="BBB_RX_DESPREAD_MARGIN" comment=""/>
    <register addr="500700c0" rw_flags="R" width="1" name="BBB_RX_SLICE_MARGIN" comment=""/>
    <register addr="500700c4" rw_flags="R" width="1" name="BBB_RX_SYNC_SCORE" comment=""/>
    <register addr="500700c8" rw_flags="R" width="1" name="BBB_RX_PKT_STATUS" comment="CCK receiver state machine current state"/>
    <register addr="500700cc" rw_flags="R" width="4" name="BBB_RX_CHAN_TAP_AMPLS_0" comment="least significant 32 bits"/>
    <register addr="500700d0" rw_flags="R" width="4" name="BBB_RX_CHAN_TAP_AMPLS_1" comment="most significant 32 bits"/>
    <register addr="500700d4" rw_flags="R" width="1" name="BBB_RX_AGC_GAIN" comment=""/>
    <register addr="500700d8" rw_flags="R" width="2" name="BBB_RX_DEBUG" comment="Contents of this register are only available when BBB_RX_DEBUG_CONFIG_EN has been enabled"/>
    <register addr="500700dc" rw_flags="RW" width="1" name="BBB_RX_CHAN_EQ_CONFIG" comment=""/>
    <register addr="500700e0" rw_flags="RW" width="1" name="BBB_SPARE1" comment=""/>
    <register addr="500700e4" rw_flags="RW" width="1" name="BBB_SPARE2" comment=""/>
    <register addr="500700e8" rw_flags="RW" width="1" name="BBB_RX_SYNC_SYM_BLANK_TIME" comment="Interval at start of CCK symbol detection time to blank if needed to avoid transient effects after rx antenna switch in CCK switched diversity chop mode. Each unit of time is 1 microsec"/>
  </block>
  <block name="wl_enc_dma_0" comment="">
    <register addr="50400000" rw_flags="RW" width="1" name="ENC_DMA_INT_CLEAR_I0" comment=""/>
    <register addr="50400004" rw_flags="RW" width="1" name="ENC_DMA_INT_MASK_I0" comment=""/>
    <register addr="50400008" rw_flags="RW" width="1" name="ENC_DMA_ENCR_TYPE_I0" comment="Encryption operation, one of:"/>
    <register addr="5040000c" rw_flags="RW" width="1" name="ENC_DMA_KEY_LENGTH_I0" comment="Encryption key length 128 or 256"/>
    <register addr="50400010" rw_flags="RW" width="2" name="ENC_DMA_FRAME_LENGTH_I0" comment="Frame body length in octets"/>
    <register addr="50400014" rw_flags="RW" width="1" name="ENC_DMA_HDR_LENGTH_I0" comment="Frame header length in octets"/>
    <register addr="50400018" rw_flags="RW" width="1" name="ENC_DMA_ENC_CONFIG_I0" comment="Contains the following configuration bits:"/>
    <register addr="5040001c" rw_flags="RW" width="1" name="ENC_DMA_PRIORITY_OCTET_I0" comment="Priority octet used in TKIP MIC calculation. Set to zero in this case. For CCMP operation, bits set to 1 in this octet will be set to one in the Nonce Flags Octet. It should be set to 0x10 for Management frames but should be set to 0xFF for Cisco CCX S67 compatibility; it must be set to 0x0 otherwise. (Refer to 802.11w section 8.3.3.3.3)"/>
    <register addr="50400020" rw_flags="RW" width="2" name="ENC_DMA_FC_MASK_I0" comment="Frame Control Mask. Determines which Frame Control bits are masked (i.e. included in the AAD calculation) in CCMP mode. Its default value is 0xC78F. (Refer to 802.11n section 8.3.3.3.2)"/>
    <register addr="50400024" rw_flags="RW" width="1" name="ENC_DMA_AAD_QC_MASK_I0" comment="Additional Authentication Data QoS Control field mask value for CCMP encryption. Set to 0x0F unless both the STA and its peer have their SPP A-MSDU Capable fields set to 1. In that case, set to 0x8F.  (Refer to 802.11n section 8.3.3.3.2 g)"/>
    <register addr="50400028" rw_flags="RW" width="4" name="ENC_DMA_SRC_START_ADDR_I0[0]" comment="Scatter-gather list, Source block address."/>
    <register addr="5040002c" rw_flags="RW" width="2" name="ENC_DMA_SRC_BLOCK_CONFIG_I0[0]" comment="Scatter-gather list, Source block configuration"/>
    <register addr="50400030" rw_flags="RW" width="4" name="ENC_DMA_DST_START_ADDR_I0[0]" comment="Scatter-gather list, Destination block address low"/>
    <register addr="50400034" rw_flags="RW" width="2" name="ENC_DMA_DST_BLOCK_CONFIG_I0[0]" comment="Scatter-gather list, Destination block length in bytes."/>
    <register addr="50400038" rw_flags="RW" width="4" name="ENC_DMA_SRC_START_ADDR_I0[1]" comment="Scatter-gather list, Source block address."/>
    <register addr="5040003c" rw_flags="RW" width="2" name="ENC_DMA_SRC_BLOCK_CONFIG_I0[1]" comment="Scatter-gather list, Source block configuration"/>
    <register addr="50400040" rw_flags="RW" width="4" name="ENC_DMA_DST_START_ADDR_I0[1]" comment="Scatter-gather list, Destination block address low"/>
    <register addr="50400044" rw_flags="RW" width="2" name="ENC_DMA_DST_BLOCK_CONFIG_I0[1]" comment="Scatter-gather list, Destination block length in bytes."/>
    <register addr="50400048" rw_flags="RW" width="4" name="ENC_DMA_SRC_START_ADDR_I0[2]" comment="Scatter-gather list, Source block address."/>
    <register addr="5040004c" rw_flags="RW" width="2" name="ENC_DMA_SRC_BLOCK_CONFIG_I0[2]" comment="Scatter-gather list, Source block configuration"/>
    <register addr="50400050" rw_flags="RW" width="4" name="ENC_DMA_DST_START_ADDR_I0[2]" comment="Scatter-gather list, Destination block address low"/>
    <register addr="50400054" rw_flags="RW" width="2" name="ENC_DMA_DST_BLOCK_CONFIG_I0[2]" comment="Scatter-gather list, Destination block length in bytes."/>
    <register addr="50400058" rw_flags="RW" width="4" name="ENC_DMA_SRC_START_ADDR_I0[3]" comment="Scatter-gather list, Source block address."/>
    <register addr="5040005c" rw_flags="RW" width="2" name="ENC_DMA_SRC_BLOCK_CONFIG_I0[3]" comment="Scatter-gather list, Source block configuration"/>
    <register addr="50400060" rw_flags="RW" width="4" name="ENC_DMA_DST_START_ADDR_I0[3]" comment="Scatter-gather list, Destination block address low"/>
    <register addr="50400064" rw_flags="RW" width="2" name="ENC_DMA_DST_BLOCK_CONFIG_I0[3]" comment="Scatter-gather list, Destination block length in bytes."/>
    <register addr="50400068" rw_flags="RW" width="4" name="ENC_DMA_SRC_START_ADDR_I0[4]" comment="Scatter-gather list, Source block address."/>
    <register addr="5040006c" rw_flags="RW" width="2" name="ENC_DMA_SRC_BLOCK_CONFIG_I0[4]" comment="Scatter-gather list, Source block configuration"/>
    <register addr="50400070" rw_flags="RW" width="4" name="ENC_DMA_DST_START_ADDR_I0[4]" comment="Scatter-gather list, Destination block address low"/>
    <register addr="50400074" rw_flags="RW" width="2" name="ENC_DMA_DST_BLOCK_CONFIG_I0[4]" comment="Scatter-gather list, Destination block length in bytes."/>
    <register addr="50400078" rw_flags="RW" width="4" name="ENC_DMA_SRC_START_ADDR_I0[5]" comment="Scatter-gather list, Source block address."/>
    <register addr="5040007c" rw_flags="RW" width="2" name="ENC_DMA_SRC_BLOCK_CONFIG_I0[5]" comment="Scatter-gather list, Source block configuration"/>
    <register addr="50400080" rw_flags="RW" width="4" name="ENC_DMA_DST_START_ADDR_I0[5]" comment="Scatter-gather list, Destination block address low"/>
    <register addr="50400084" rw_flags="RW" width="2" name="ENC_DMA_DST_BLOCK_CONFIG_I0[5]" comment="Scatter-gather list, Destination block length in bytes."/>
    <register addr="50400088" rw_flags="RW" width="4" name="ENC_DMA_SRC_START_ADDR_I0[6]" comment="Scatter-gather list, Source block address."/>
    <register addr="5040008c" rw_flags="RW" width="2" name="ENC_DMA_SRC_BLOCK_CONFIG_I0[6]" comment="Scatter-gather list, Source block configuration"/>
    <register addr="50400090" rw_flags="RW" width="4" name="ENC_DMA_DST_START_ADDR_I0[6]" comment="Scatter-gather list, Destination block address low"/>
    <register addr="50400094" rw_flags="RW" width="2" name="ENC_DMA_DST_BLOCK_CONFIG_I0[6]" comment="Scatter-gather list, Destination block length in bytes."/>
    <register addr="50400098" rw_flags="RW" width="4" name="ENC_DMA_SRC_START_ADDR_I0[7]" comment="Scatter-gather list, Source block address."/>
    <register addr="5040009c" rw_flags="RW" width="2" name="ENC_DMA_SRC_BLOCK_CONFIG_I0[7]" comment="Scatter-gather list, Source block configuration"/>
    <register addr="504000a0" rw_flags="RW" width="4" name="ENC_DMA_DST_START_ADDR_I0[7]" comment="Scatter-gather list, Destination block address low"/>
    <register addr="504000a4" rw_flags="RW" width="2" name="ENC_DMA_DST_BLOCK_CONFIG_I0[7]" comment="Scatter-gather list, Destination block length in bytes."/>
    <register addr="504000a8" rw_flags="RW" width="1" name="ENC_DMA_DST_FIFO_READ_TIMEOUT_I0" comment="If the destination scatter-gather list is such that the wide output FIFO gets stuck with less data than a whole word width in it before the last AXI burst occurs then wait this many cycles before forcing the final read from the FIFO."/>
    <register addr="504000ac" rw_flags="RW" width="1" name="ENC_DMA_STROBE_I0" comment="Contains the following bits:"/>
    <register addr="504000b0" rw_flags="R" width="1" name="ENC_DMA_QUEUE_STATUS_I0" comment="Bits [2:1] contain the number of operations currently in progress or completed. The processor must read this number before programming any configuration registers, and may write configuration registers only when this number is less than 2. Bits [1:0] contain the number of sets of status registers in the status queue."/>
    <register addr="504000b4" rw_flags="R" width="1" name="ENC_DMA_OPERATION_STATUS_I0" comment="Indicates the outcome of the corresponding encryption operation. One of: ENC_DONE, ENC_STATUS_MIC_FAIL (MIC failed), ENC_DMA_DONE (DMA operation has been finished), AXI_READ_SLAVE_ERROR, AXI_READ_DECODE_ERROR, AXI_WRITE_SLAVE_ERROR, AXI_WRITE_DECODE_ERROR"/>
    <register addr="504000b8" rw_flags="R" width="2" name="ENC_DMA_STATE_I0" comment="DMA current state for debug purposes"/>
    <register addr="504000bc" rw_flags="R" width="4" name="ENC_DMA_STATE_FIFOS_I0" comment="DMA current state for debug purposes"/>
    <register addr="504000c0" rw_flags="R" width="1" name="ENC_CORE_STATUS_I0" comment="Encryption accelerator state for debug purposes"/>
    <register addr="504000c4" rw_flags="RW" width="1" name="ENC_DMA_MAX_AXI_READ_BURST_NUM_I0" comment="Max mumber of outstanding read AXI bursts, for debug only. Upto 15 are theoretically supported in the logic but only if there is space for all of them in the SRC FIFO."/>
    <register addr="504000c8" rw_flags="RW" width="2" name="ENC_DMA_AXI_CACHE_CONFIG_I0" comment="AXI cache control settings, for debug only"/>
    <register addr="504000cc" rw_flags="RW" width="1" name="ENC_DMA_AXI_BURST_CONFIG_I0" comment="Generate AXI access depending on FIFO state configuration, for debug only"/>
  </block>
  <block name="wl_enc_dma_1" comment="">
    <register addr="50500000" rw_flags="RW" width="1" name="ENC_DMA_INT_CLEAR_I1" comment=""/>
    <register addr="50500004" rw_flags="RW" width="1" name="ENC_DMA_INT_MASK_I1" comment=""/>
    <register addr="50500008" rw_flags="RW" width="1" name="ENC_DMA_ENCR_TYPE_I1" comment="Encryption operation, one of:"/>
    <register addr="5050000c" rw_flags="RW" width="1" name="ENC_DMA_KEY_LENGTH_I1" comment="Encryption key length 128 or 256"/>
    <register addr="50500010" rw_flags="RW" width="2" name="ENC_DMA_FRAME_LENGTH_I1" comment="Frame body length in octets"/>
    <register addr="50500014" rw_flags="RW" width="1" name="ENC_DMA_HDR_LENGTH_I1" comment="Frame header length in octets"/>
    <register addr="50500018" rw_flags="RW" width="1" name="ENC_DMA_ENC_CONFIG_I1" comment="Contains the following configuration bits:"/>
    <register addr="5050001c" rw_flags="RW" width="1" name="ENC_DMA_PRIORITY_OCTET_I1" comment="Priority octet used in TKIP MIC calculation. Set to zero in this case. For CCMP operation, bits set to 1 in this octet will be set to one in the Nonce Flags Octet. It should be set to 0x10 for Management frames but should be set to 0xFF for Cisco CCX S67 compatibility; it must be set to 0x0 otherwise. (Refer to 802.11w section 8.3.3.3.3)"/>
    <register addr="50500020" rw_flags="RW" width="2" name="ENC_DMA_FC_MASK_I1" comment="Frame Control Mask. Determines which Frame Control bits are masked (i.e. included in the AAD calculation) in CCMP mode. Its default value is 0xC78F. (Refer to 802.11n section 8.3.3.3.2)"/>
    <register addr="50500024" rw_flags="RW" width="1" name="ENC_DMA_AAD_QC_MASK_I1" comment="Additional Authentication Data QoS Control field mask value for CCMP encryption. Set to 0x0F unless both the STA and its peer have their SPP A-MSDU Capable fields set to 1. In that case, set to 0x8F.  (Refer to 802.11n section 8.3.3.3.2 g)"/>
    <register addr="50500028" rw_flags="RW" width="4" name="ENC_DMA_SRC_START_ADDR_I1[0]" comment="Scatter-gather list, Source block address."/>
    <register addr="5050002c" rw_flags="RW" width="2" name="ENC_DMA_SRC_BLOCK_CONFIG_I1[0]" comment="Scatter-gather list, Source block configuration"/>
    <register addr="50500030" rw_flags="RW" width="4" name="ENC_DMA_DST_START_ADDR_I1[0]" comment="Scatter-gather list, Destination block address low"/>
    <register addr="50500034" rw_flags="RW" width="2" name="ENC_DMA_DST_BLOCK_CONFIG_I1[0]" comment="Scatter-gather list, Destination block length in bytes."/>
    <register addr="50500038" rw_flags="RW" width="4" name="ENC_DMA_SRC_START_ADDR_I1[1]" comment="Scatter-gather list, Source block address."/>
    <register addr="5050003c" rw_flags="RW" width="2" name="ENC_DMA_SRC_BLOCK_CONFIG_I1[1]" comment="Scatter-gather list, Source block configuration"/>
    <register addr="50500040" rw_flags="RW" width="4" name="ENC_DMA_DST_START_ADDR_I1[1]" comment="Scatter-gather list, Destination block address low"/>
    <register addr="50500044" rw_flags="RW" width="2" name="ENC_DMA_DST_BLOCK_CONFIG_I1[1]" comment="Scatter-gather list, Destination block length in bytes."/>
    <register addr="50500048" rw_flags="RW" width="4" name="ENC_DMA_SRC_START_ADDR_I1[2]" comment="Scatter-gather list, Source block address."/>
    <register addr="5050004c" rw_flags="RW" width="2" name="ENC_DMA_SRC_BLOCK_CONFIG_I1[2]" comment="Scatter-gather list, Source block configuration"/>
    <register addr="50500050" rw_flags="RW" width="4" name="ENC_DMA_DST_START_ADDR_I1[2]" comment="Scatter-gather list, Destination block address low"/>
    <register addr="50500054" rw_flags="RW" width="2" name="ENC_DMA_DST_BLOCK_CONFIG_I1[2]" comment="Scatter-gather list, Destination block length in bytes."/>
    <register addr="50500058" rw_flags="RW" width="4" name="ENC_DMA_SRC_START_ADDR_I1[3]" comment="Scatter-gather list, Source block address."/>
    <register addr="5050005c" rw_flags="RW" width="2" name="ENC_DMA_SRC_BLOCK_CONFIG_I1[3]" comment="Scatter-gather list, Source block configuration"/>
    <register addr="50500060" rw_flags="RW" width="4" name="ENC_DMA_DST_START_ADDR_I1[3]" comment="Scatter-gather list, Destination block address low"/>
    <register addr="50500064" rw_flags="RW" width="2" name="ENC_DMA_DST_BLOCK_CONFIG_I1[3]" comment="Scatter-gather list, Destination block length in bytes."/>
    <register addr="50500068" rw_flags="RW" width="4" name="ENC_DMA_SRC_START_ADDR_I1[4]" comment="Scatter-gather list, Source block address."/>
    <register addr="5050006c" rw_flags="RW" width="2" name="ENC_DMA_SRC_BLOCK_CONFIG_I1[4]" comment="Scatter-gather list, Source block configuration"/>
    <register addr="50500070" rw_flags="RW" width="4" name="ENC_DMA_DST_START_ADDR_I1[4]" comment="Scatter-gather list, Destination block address low"/>
    <register addr="50500074" rw_flags="RW" width="2" name="ENC_DMA_DST_BLOCK_CONFIG_I1[4]" comment="Scatter-gather list, Destination block length in bytes."/>
    <register addr="50500078" rw_flags="RW" width="4" name="ENC_DMA_SRC_START_ADDR_I1[5]" comment="Scatter-gather list, Source block address."/>
    <register addr="5050007c" rw_flags="RW" width="2" name="ENC_DMA_SRC_BLOCK_CONFIG_I1[5]" comment="Scatter-gather list, Source block configuration"/>
    <register addr="50500080" rw_flags="RW" width="4" name="ENC_DMA_DST_START_ADDR_I1[5]" comment="Scatter-gather list, Destination block address low"/>
    <register addr="50500084" rw_flags="RW" width="2" name="ENC_DMA_DST_BLOCK_CONFIG_I1[5]" comment="Scatter-gather list, Destination block length in bytes."/>
    <register addr="50500088" rw_flags="RW" width="4" name="ENC_DMA_SRC_START_ADDR_I1[6]" comment="Scatter-gather list, Source block address."/>
    <register addr="5050008c" rw_flags="RW" width="2" name="ENC_DMA_SRC_BLOCK_CONFIG_I1[6]" comment="Scatter-gather list, Source block configuration"/>
    <register addr="50500090" rw_flags="RW" width="4" name="ENC_DMA_DST_START_ADDR_I1[6]" comment="Scatter-gather list, Destination block address low"/>
    <register addr="50500094" rw_flags="RW" width="2" name="ENC_DMA_DST_BLOCK_CONFIG_I1[6]" comment="Scatter-gather list, Destination block length in bytes."/>
    <register addr="50500098" rw_flags="RW" width="4" name="ENC_DMA_SRC_START_ADDR_I1[7]" comment="Scatter-gather list, Source block address."/>
    <register addr="5050009c" rw_flags="RW" width="2" name="ENC_DMA_SRC_BLOCK_CONFIG_I1[7]" comment="Scatter-gather list, Source block configuration"/>
    <register addr="505000a0" rw_flags="RW" width="4" name="ENC_DMA_DST_START_ADDR_I1[7]" comment="Scatter-gather list, Destination block address low"/>
    <register addr="505000a4" rw_flags="RW" width="2" name="ENC_DMA_DST_BLOCK_CONFIG_I1[7]" comment="Scatter-gather list, Destination block length in bytes."/>
    <register addr="505000a8" rw_flags="RW" width="1" name="ENC_DMA_DST_FIFO_READ_TIMEOUT_I1" comment="If the destination scatter-gather list is such that the wide output FIFO gets stuck with less data than a whole word width in it before the last AXI burst occurs then wait this many cycles before forcing the final read from the FIFO."/>
    <register addr="505000ac" rw_flags="RW" width="1" name="ENC_DMA_STROBE_I1" comment="Contains the following bits:"/>
    <register addr="505000b0" rw_flags="R" width="1" name="ENC_DMA_QUEUE_STATUS_I1" comment="Bits [2:1] contain the number of operations currently in progress or completed. The processor must read this number before programming any configuration registers, and may write configuration registers only when this number is less than 2. Bits [1:0] contain the number of sets of status registers in the status queue."/>
    <register addr="505000b4" rw_flags="R" width="1" name="ENC_DMA_OPERATION_STATUS_I1" comment="Indicates the outcome of the corresponding encryption operation. One of: ENC_DONE, ENC_STATUS_MIC_FAIL (MIC failed), ENC_DMA_DONE (DMA operation has been finished), AXI_READ_SLAVE_ERROR, AXI_READ_DECODE_ERROR, AXI_WRITE_SLAVE_ERROR, AXI_WRITE_DECODE_ERROR"/>
    <register addr="505000b8" rw_flags="R" width="2" name="ENC_DMA_STATE_I1" comment="DMA current state for debug purposes"/>
    <register addr="505000bc" rw_flags="R" width="4" name="ENC_DMA_STATE_FIFOS_I1" comment="DMA current state for debug purposes"/>
    <register addr="505000c0" rw_flags="R" width="1" name="ENC_CORE_STATUS_I1" comment="Encryption accelerator state for debug purposes"/>
    <register addr="505000c4" rw_flags="RW" width="1" name="ENC_DMA_MAX_AXI_READ_BURST_NUM_I1" comment="Max mumber of outstanding read AXI bursts, for debug only. Upto 15 are theoretically supported in the logic but only if there is space for all of them in the SRC FIFO."/>
    <register addr="505000c8" rw_flags="RW" width="2" name="ENC_DMA_AXI_CACHE_CONFIG_I1" comment="AXI cache control settings, for debug only"/>
    <register addr="505000cc" rw_flags="RW" width="1" name="ENC_DMA_AXI_BURST_CONFIG_I1" comment="Generate AXI access depending on FIFO state configuration, for debug only"/>
  </block>
  <block name="wl_mac_0" comment="">
    <register addr="50200000" rw_flags="RW" width="2" name="CLKGEN_MAC_ENABLES_I0" comment="This register enables clocks for MAC_IF_ and MAC_ACC. When a corresponding bit is set, the clock is enabled, regardless of any corresponding clock request"/>
    <register addr="50200004" rw_flags="RW" width="1" name="MAC_DEBUG_SEL_I0" comment="Select MAC debug port output (this is in addition to MAC IF and MAC ACC ports)"/>
    <register addr="50200008" rw_flags="R" width="4" name="MAC_DEBUG_STATUS_I0" comment="Read MAC debug {MAC_ACC, MAC_IF}"/>
  </block>
  <block name="wl_mac_1" comment="">
    <register addr="50300000" rw_flags="RW" width="2" name="CLKGEN_MAC_ENABLES_I1" comment="This register enables clocks for MAC_IF_ and MAC_ACC. When a corresponding bit is set, the clock is enabled, regardless of any corresponding clock request"/>
    <register addr="50300004" rw_flags="RW" width="1" name="MAC_DEBUG_SEL_I1" comment="Select MAC debug port output (this is in addition to MAC IF and MAC ACC ports)"/>
    <register addr="50300008" rw_flags="R" width="4" name="MAC_DEBUG_STATUS_I1" comment="Read MAC debug {MAC_ACC, MAC_IF}"/>
  </block>
  <block name="wl_mac_acc_0" comment="">
    <register addr="50220000" rw_flags="RW" width="1" name="MAC_ACC_CONTROL_I0" comment="Resets and enables the MAC accelerator."/>
    <register addr="50220004" rw_flags="R" width="1" name="MAC_BA_TX_ACTIVITY_I0" comment="MAC BA_TX activity status."/>
    <register addr="50220008" rw_flags="RW" width="2" name="MAC_BA_ENABLE_I0" comment="Enables for the BA_RX/BA_TX instances."/>
    <register addr="5022000c" rw_flags="RW" width="1" name="MAC_MODULE_RESET_I0" comment="This register can be used to reset MAC submodules individually [one at a time]."/>
    <register addr="50220010" rw_flags="RW" width="2" name="MAC_CLOCK_DISABLE_I0" comment="Clock disable signals that control the local clock gating logic of MAC submodules."/>
    <register addr="50220014" rw_flags="RW" width="4" name="MAC_STATION_MAC_ADDRESS_BYTE3_0_I0" comment="Primary MAC address"/>
    <register addr="50220018" rw_flags="RW" width="2" name="MAC_STATION_MAC_ADDRESS_BYTE5_4_I0" comment="Primary MAC address"/>
    <register addr="5022001c" rw_flags="RW" width="4" name="MAC_STATION_MAC_ADDRESS1_BYTE3_0_I0" comment="MAC address #1"/>
    <register addr="50220020" rw_flags="RW" width="2" name="MAC_STATION_MAC_ADDRESS1_BYTE5_4_I0" comment="MAC address #1"/>
    <register addr="50220024" rw_flags="RW" width="4" name="MAC_STATION_MAC_ADDRESS2_BYTE3_0_I0" comment="MAC address #2"/>
    <register addr="50220028" rw_flags="RW" width="2" name="MAC_STATION_MAC_ADDRESS2_BYTE5_4_I0" comment="MAC address #2"/>
    <register addr="5022002c" rw_flags="RW" width="4" name="MAC_STATION_MAC_ADDRESS3_BYTE3_0_I0" comment="MAC address #3"/>
    <register addr="50220030" rw_flags="RW" width="2" name="MAC_STATION_MAC_ADDRESS3_BYTE5_4_I0" comment="MAC address #3"/>
    <register addr="50220034" rw_flags="RW" width="4" name="MAC_STATION_MAC_ADDRESS3_MASK_BYTE3_0_I0" comment="If a bit is set, then that bit"/>
    <register addr="50220038" rw_flags="RW" width="2" name="MAC_STATION_MAC_ADDRESS3_MASK_BYTE5_4_I0" comment="is ignored for receive Address1 matching."/>
    <register addr="5022003c" rw_flags="RW" width="1" name="MAC_STATION_ADDRESS_CONFIG_I0" comment="Configures receive Address1 matching on our MAC addresses."/>
    <register addr="50220040" rw_flags="RW" width="4" name="MAC_GROUP_PLAY_PEER_ADDR_BYTE3_0_I0" comment="Group Play Transmit Leader MAC address"/>
    <register addr="50220044" rw_flags="RW" width="2" name="MAC_GROUP_PLAY_PEER_ADDR_BYTE5_4_I0" comment="Group Play Transmit Leader MAC address"/>
    <register addr="50220048" rw_flags="RW" width="4" name="MAC_GROUP_PLAY_PEER_ADDR1_BYTE3_0_I0" comment="Group Play Transmit Leader MAC address"/>
    <register addr="5022004c" rw_flags="RW" width="2" name="MAC_GROUP_PLAY_PEER_ADDR1_BYTE5_4_I0" comment="Group Play Transmit Leader MAC address"/>
    <register addr="50220050" rw_flags="RW" width="4" name="MAC_GROUP_PLAY_PEER_ADDR2_BYTE3_0_I0" comment="Group Play Transmit Leader MAC address"/>
    <register addr="50220054" rw_flags="RW" width="2" name="MAC_GROUP_PLAY_PEER_ADDR2_BYTE5_4_I0" comment="Group Play Transmit Leader MAC address"/>
    <register addr="50220058" rw_flags="RW" width="4" name="MAC_GROUP_PLAY_PEER_ADDR3_BYTE3_0_I0" comment="Group Play Transmit Leader MAC address"/>
    <register addr="5022005c" rw_flags="RW" width="2" name="MAC_GROUP_PLAY_PEER_ADDR3_BYTE5_4_I0" comment="Group Play Transmit Leader MAC address"/>
    <register addr="50220060" rw_flags="RW" width="1" name="MAC_GRP_ACK_CONFIG_I0" comment="Configures immediate ACK behaviour for reception of Group Addressed frames"/>
    <register addr="50220064" rw_flags="RW" width="2" name="MAC_GRP_ACK_TYPE_MANAGEMENT_SUBTYPE_EN_I0" comment="Each bit corresponds to a data subtype. If set to 1, it means that subtype will get ACKed."/>
    <register addr="50220068" rw_flags="RW" width="2" name="MAC_GRP_ACK_TYPE_CONTROL_SUBTYPE_EN_I0" comment="Each bit corresponds to a data subtype. If set to 1, it means that subtype will get ACKed."/>
    <register addr="5022006c" rw_flags="RW" width="2" name="MAC_GRP_ACK_TYPE_DATA_SUBTYPE_EN_I0" comment="Each bit corresponds to a data subtype. If set to 1, it means that subtype will get ACKed."/>
    <register addr="50220070" rw_flags="RW" width="2" name="MAC_GRP_ACK_TYPE_RESERVED_SUBTYPE_EN_I0" comment="Each bit corresponds to a data subtype. If set to 1, it means that subtype will get ACKed."/>
    <register addr="50220074" rw_flags="RW" width="4" name="MAC_BSSID_BYTE3_0_I0" comment="BSSID"/>
    <register addr="50220078" rw_flags="RW" width="2" name="MAC_BSSID_BYTE5_4_I0" comment="BSSID"/>
    <register addr="5022007c" rw_flags="RW" width="4" name="MAC_ALT_BSSID_BYTE3_0_I0" comment="Alternative BSSID"/>
    <register addr="50220080" rw_flags="RW" width="2" name="MAC_ALT_BSSID_BYTE5_4_I0" comment="Alternative BSSID"/>
    <register addr="50220084" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_01MBPS_I0" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="50220088" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_02MBPS_I0" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="5022008c" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_5M5BPS_I0" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="50220090" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_11MBPS_I0" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="50220094" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_06MBPS_I0" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="50220098" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_09MBPS_I0" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="5022009c" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_12MBPS_I0" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="502200a0" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_18MBPS_I0" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="502200a4" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_24MBPS_I0" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="502200a8" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_36MBPS_I0" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="502200ac" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_48MBPS_I0" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="502200b0" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_54MBPS_I0" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="502200b4" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS0_I0" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="502200b8" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS1_I0" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="502200bc" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS2_I0" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="502200c0" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS3_I0" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="502200c4" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS4_I0" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="502200c8" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS5_I0" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="502200cc" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS6_I0" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="502200d0" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS7_I0" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="502200d4" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS8_I0" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="502200d8" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS9_I0" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="502200dc" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS10_I0" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="502200e0" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS11_I0" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="502200e4" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS12_I0" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="502200e8" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS13_I0" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="502200ec" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS14_I0" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="502200f0" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS15_I0" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="502200f4" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS32_I0" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="502200f8" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS0_I0" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="502200fc" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS1_I0" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50220100" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS2_I0" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50220104" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS3_I0" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50220108" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS4_I0" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="5022010c" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS5_I0" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50220110" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS6_I0" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50220114" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS7_I0" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50220118" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS8_I0" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="5022011c" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS9_I0" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50220120" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS0_NSS2_I0" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50220124" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS1_NSS2_I0" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50220128" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS2_NSS2_I0" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="5022012c" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS3_NSS2_I0" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50220130" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS4_NSS2_I0" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50220134" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS5_NSS2_I0" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50220138" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS6_NSS2_I0" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="5022013c" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS7_NSS2_I0" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50220140" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS8_NSS2_I0" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50220144" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS9_NSS2_I0" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50220148" rw_flags="RW" width="2" name="MAC_CTRL_MAC2_FLAGS_I0" comment="Flags [Configuration bits] register 2"/>
    <register addr="5022014c" rw_flags="RW" width="2" name="MAC_CTRL_MAC3_FLAGS_I0" comment="Flags [Configuration bits] register 3"/>
    <register addr="50220150" rw_flags="RW" width="2" name="MAC_CTRL_MAC4_FLAGS_I0" comment="Flags [Configuration bits] register 4"/>
    <register addr="50220154" rw_flags="RW" width="2" name="MAC_CTRL_MAC5_FLAGS_I0" comment="Flags [Configuration bits] register 5"/>
    <register addr="50220158" rw_flags="RW" width="2" name="MAC_CTRL_MAC6_FLAGS_I0" comment="Flags [Configuration bits] register 6"/>
    <register addr="5022015c" rw_flags="RW" width="2" name="MAC_CTRL_MAC7_FLAGS_I0" comment="Flags [Configuration bits] register 7"/>
    <register addr="50220160" rw_flags="RW" width="2" name="MAC_CTRL_MAC10_FLAGS_I0" comment="Flags [Configuration bits] register 10"/>
    <register addr="50220164" rw_flags="RW" width="2" name="MAC_CTRL_MAC11_FLAGS_I0" comment="Flags [Configuration bits] register 11 (This replaces some ACTING_AS_AP functionality by splitting it into several programmable bits."/>
    <register addr="50220168" rw_flags="RW" width="2" name="MAC_CTRL_MAC12_FLAGS_I0" comment="Flags [Configuration bits] register 12."/>
    <register addr="5022016c" rw_flags="RW" width="2" name="MAC_RX_FILTER_CONFIG_I0" comment="RX filter configuration"/>
    <register addr="50220170" rw_flags="RW" width="2" name="MAC_MIN_MPDU_LEN_I0" comment="Minimum RX MPDU length. Received MPDUs shorter than this are discarded."/>
    <register addr="50220174" rw_flags="RW" width="2" name="MAC_MAX_MPDU_LEN_I0" comment="Maximum RX MPDU length. Received MPDUs longer than this are discarded."/>
    <register addr="50220178" rw_flags="RW" width="2" name="MAC_CCA_CFG_I0" comment="Configures CCA utilisation."/>
    <register addr="5022017c" rw_flags="RW" width="2" name="MAC_CTRL_RESPONSE_TX_LEVEL_I0" comment="Transmit level for control response frames."/>
    <register addr="50220180" rw_flags="RW" width="1" name="MAC_CTRL_RESPONSE_TX_ANT_I0" comment="Transmit antenna configuration for control response frames."/>
    <register addr="50220184" rw_flags="RW" width="2" name="MAC_AC_BK_TXOP_LIMIT_I0" comment="TXOP limit in units of 32 us for the AC_BK EDCA queue."/>
    <register addr="50220188" rw_flags="RW" width="2" name="MAC_AC_BE_TXOP_LIMIT_I0" comment="TXOP limit in units of 32 us for the AC_BE EDCA queue."/>
    <register addr="5022018c" rw_flags="RW" width="2" name="MAC_AC_VI_TXOP_LIMIT_I0" comment="TXOP limit in units of 32 us for the AC_VI EDCA queue."/>
    <register addr="50220190" rw_flags="RW" width="2" name="MAC_AC_VO_TXOP_LIMIT_I0" comment="TXOP limit in units of 32 us for the AC_VO EDCA queue."/>
    <register addr="50220194" rw_flags="R" width="2" name="MAC_TXOP_TIME_LEFT_I0" comment="The firmware can read from this register the time remaining in the current TXOP, in units of 1 us."/>
    <register addr="50220198" rw_flags="RW" width="2" name="MAC_EIFS_I0" comment="Programmable EIFS"/>
    <register addr="5022019c" rw_flags="RW" width="1" name="MAC_SLOT_TIME_US_I0" comment="Programmable slot time in us"/>
    <register addr="502201a0" rw_flags="RW" width="2" name="MAC_NDP_MCS_I0" comment="Programs MCS used for HT NDP or VHT NDP transmission."/>
    <register addr="502201a4" rw_flags="RW" width="2" name="MAC_BFER_CFG_I0" comment="Configures beamformer."/>
    <register addr="502201a8" rw_flags="RW" width="2" name="MAC_BFEE_CFG_I0" comment="Configures beamformee."/>
    <register addr="502201ac" rw_flags="RW" width="2" name="MAC_MCS_FEEDBACK_CONFIG_I0" comment="MCS feedback configuration"/>
    <register addr="502201b0" rw_flags="RW" width="4" name="MAC_TID_QSIZE_MAP_I0" comment="Maps one of 16 TIDs to one of four queue sizes, for the purpose of setting the 'Queue Size' field in transmitted QoS frames."/>
    <register addr="502201b4" rw_flags="RW" width="4" name="MAC_TID_QSIZE_I0" comment="Queue sizes numbers 0, 1, 2 and 3."/>
    <register addr="502201b8" rw_flags="R" width="4" name="MAC_M_NAV_END_I0" comment="The firmware can read from this register the NAV end time."/>
    <register addr="502201bc" rw_flags="R" width="4" name="MAC_NAV_BSSID_BYTE3_0_I0" comment="The firmware can read from this register the BSSID associated to the current NAV."/>
    <register addr="502201c0" rw_flags="R" width="2" name="MAC_NAV_BSSID_BYTE5_4_I0" comment=""/>
    <register addr="502201c4" rw_flags="R" width="4" name="MAC_TXOPHOLDER_BYTE3_0_I0" comment="The firmware can read from this register the TXOP holder associated to the current NAV."/>
    <register addr="502201c8" rw_flags="R" width="2" name="MAC_TXOPHOLDER_BYTE5_4_I0" comment=""/>
    <register addr="502201cc" rw_flags="R" width="1" name="MAC_NAV_SRC_I0" comment="NAV sources. See 802.11-1999 as amended in 802.11-2007."/>
    <register addr="502201d0" rw_flags="RW" width="4" name="MAC_TX_SIFS_REF_I0" comment="Adjust the timing of Data frame following a CTS-to-self. This is nominally the time between the on-air end of frame to the point when MAC issues PHY RX End signal. This is measured in 25 ns units."/>
    <register addr="502201d4" rw_flags="RW" width="4" name="MAC_TX_RIFS_REF_I0" comment="Adjust TX timing references to achieve RIFS transmission. This is 25 ns units."/>
    <register addr="502201d8" rw_flags="RW" width="2" name="MAC_RESPONSE_DELAY_SIFS_I0" comment="Bits 7 down to 0 are programmable time in 25ns units to delay response frames such that SIFS is met. Bit 8 allows timing at the end of HT-MM short GI frames to be measured on 4us symbol boundaries. This affects SIFS timing of short GI frames."/>
    <register addr="502201dc" rw_flags="RW" width="2" name="MAC_TXEND_LATENCY_I0" comment="The time between the modem sending a 'TX End' signal to the actual on-air end of frame. This is measured in 25 ns units. This is used as an 'off-air' indicator. "/>
    <register addr="502201e0" rw_flags="RW" width="4" name="MAC_CSTATE_IFS_ADJUST_I0" comment="Adjust IFS timing for in channel state module"/>
    <register addr="502201e4" rw_flags="RW" width="1" name="MAC_PHYIF_SYMB_START_11B_I0" comment="Programmable time in 25ns units that adjusts the symbol start time in MAC_PHY_INTERFACE (+) for 11b. This adjusts the position of the PHY preamble."/>
    <register addr="502201e8" rw_flags="RW" width="2" name="MAC_PHYIF_SYMB_END_11B_I0" comment="Programmable time that adjust 11b RX latency to meet SIFS. The format is 4.6 unsigned. The integer part is in microseconds. The fractional part is in 25 ns."/>
    <register addr="502201ec" rw_flags="RW" width="1" name="MAC_PHYIF_SYMB_START_ADJUST_I0" comment="Programmable time in 25ns units that adjusts the symbol start time in MAC_PHY_INTERFACE (+/-) for OFDM."/>
    <register addr="502201f0" rw_flags="RW" width="1" name="MAC_PHYIF_SYMB_END_ADJUST_I0" comment="Programmable time in 25ns units that adjusts the symbol end time in MAC_PHY_INTERFACE (+/-) for OFDM."/>
    <register addr="502201f4" rw_flags="RW" width="1" name="MAC_PHYIF_STBC_WITH_LDPC_SYMB_END_ADJUST_I0" comment="Programmable time in 25ns units that adjusts the symbol end time in MAC_PHY_INTERFACE for a received frame containing both STBC and LDPC (+/-) for OFDM."/>
    <register addr="502201f8" rw_flags="RW" width="2" name="MAC_PHYIF_STBC_LDPC_SYMB_END_ADJUST_I0" comment="Programmable time in 25us units that adjusts the symbol end time in MAC_PHY_INTERFACE for STBC or LDPC reception (+/-) for OFDM."/>
    <register addr="502201fc" rw_flags="RW" width="1" name="MAC_PHYIF_RXSTART_ADJUST_I0" comment="Programmable time in 1us unit that adjusts the RX_START start time in MAC_PHY_INTERFACE."/>
    <register addr="50220200" rw_flags="RW" width="1" name="MAC_TX_CTSRESPONSE_ADJUST_I0" comment="Programmable time in 25ns units that adjusts the start of the TX of the frame sent at SIFS after a CTS TX or RX."/>
    <register addr="50220204" rw_flags="RW" width="2" name="MAC_RESPONSE_TIMEOUT_11A_I0" comment="Programmable time in us that the MAC waits for a response in 11a."/>
    <register addr="50220208" rw_flags="RW" width="2" name="MAC_RESPONSE_TIMEOUT_11B_I0" comment="Programmable time in us that the MAC waits for a response in 11b."/>
    <register addr="5022020c" rw_flags="RW" width="2" name="MAC_RX_AMPDU_CFG_I0" comment="Receive A-MPDU configuration."/>
    <register addr="50220210" rw_flags="RW" width="2" name="MAC_SEC_CHAN_CLEAR_TIME_I0" comment="Secondary Channel must be free for this amount of time (50ns unit) before it is declared non-busy for starting a Txop."/>
    <register addr="50220214" rw_flags="RW" width="2" name="MAC_SEC_CHAN_CLEAR_TIME_CTS_I0" comment="The bottom 10 bits means secondary channel must be free for this amount of time (50ns unit) before it is declared non-busy for CTS response to a RTS signalling TA. Bits [13:10] is a signed number that adjusts the delay between the start of frame and the synchronisation start pulse from the modem."/>
    <register addr="50220218" rw_flags="RW" width="2" name="MAC_TX_DELAY_FINE_TUNE_I0" comment="Transmit delay fine tune. Provides fine adjustment of inter-frame spacing."/>
    <register addr="5022021c" rw_flags="RW" width="2" name="MAC_CS_LATENCY_I0" comment="CS latency in units of 25 ns: time that medium is still marked busy after CS becomes inactive. The purpose of this is to stretch CCA status from CS latency to nominal OFDM RX latency."/>
    <register addr="50220220" rw_flags="RW" width="2" name="MAC_RADIO_SYNC_LATENCY_I0" comment="Radio sync latency in units of 25 ns: time that medium is still marked busy after CS becomes inactive. The purpose of this is to cover the time between modem indicates CCA busy to the start of packet pulse."/>
    <register addr="50220224" rw_flags="RW" width="2" name="MAC_MODEM_SYNC_LATENCY_I0" comment="Modem sync latency in units of 25 ns: time that medium is still marked busy after CS becomes inactive. The purpose of this is to cover the time between OFDM STF sync to the start of packet pulse."/>
    <register addr="50220228" rw_flags="RW" width="1" name="MAC_DEFAULT_AMPDU_DURATION_I0" comment="This is the duration of an A-MPDU frame exchange when it is the next frame from the frame at the head of a queue."/>
    <register addr="5022022c" rw_flags="RW" width="4" name="MAC_MAX_ACK_DURATION_I0" comment="Maximum ACK duration for DSSS/CCK and OFDM."/>
    <register addr="50220230" rw_flags="R" width="4" name="MAC_DOT11_FCS_ERROR_COUNT_I0" comment="Received frame FCS error counter."/>
    <register addr="50220234" rw_flags="R" width="4" name="MAC_DOT11_FCS_GOOD_COUNT_I0" comment="Received frame FCS good counter."/>
    <register addr="50220238" rw_flags="R" width="4" name="MAC_DOT11_ERROR_COUNT_I0" comment="Received frame error counter that is NOT a FCS error."/>
    <register addr="5022023c" rw_flags="R" width="4" name="MAC_BAD_SIG_COUNT_I0" comment="Received frame bad signal counter."/>
    <register addr="50220240" rw_flags="R" width="4" name="MAC_TX_UNDER_COUNT_I0" comment="TX frames which were corrupted by the accelerator due to TX underflow."/>
    <register addr="50220244" rw_flags="R" width="4" name="MAC_RX_VHT_MU_UNMATCHED_GID_I0" comment="VHT MU frames where GID does not match."/>
    <register addr="50220248" rw_flags="R" width="2" name="MAC_AC_BK_TIME_SPENT_I0" comment="This register counts the time spent transmitting from the AC_BK queue, in units of 16 us."/>
    <register addr="5022024c" rw_flags="R" width="4" name="MAC_DOT11_RX_OCTETS_IN_AMPDUS_I0" comment="Counts of the number of octets received in AMPDUs."/>
    <register addr="50220250" rw_flags="R" width="2" name="MAC_DOT11_RX_AMPDUS_COUNT_I0" comment="Counts of the number of received AMPDUs."/>
    <register addr="50220254" rw_flags="R" width="2" name="MAC_DOT11_RX_MPDUS_IN_AMPDUS_COUNT_I0" comment="Counts of the number of MPDUs received in AMPDUs."/>
    <register addr="50220258" rw_flags="R" width="2" name="MAC_DOT11_RX_AMPDU_DELIM_LEN_ERR_COUNT_I0" comment="Counts the number of length errors in MPDU delimiters found in received AMPDUs."/>
    <register addr="5022025c" rw_flags="R" width="2" name="MAC_DOT11_RX_AMPDU_DELIM_SPACING_ERR_COUNT_I0" comment="Counts the number of start spacing errors in MPDU delimiters found in received AMPDUs."/>
    <register addr="50220260" rw_flags="R" width="2" name="MAC_DOT11_RX_AMPDU_DELIM_SINGLE_ERR_COUNT_I0" comment="Counts the number of VHT single errors in MPDU delimiters found in received AMPDUs."/>
    <register addr="50220264" rw_flags="R" width="2" name="MAC_AC_BE_TIME_SPENT_I0" comment="This register counts the time spent transmitting from the AC_BE queue, in units of 16 us."/>
    <register addr="50220268" rw_flags="R" width="2" name="MAC_AC_VI_TIME_SPENT_I0" comment="This register counts the time spent transmitting from the AC_VI queue, in units of 16 us."/>
    <register addr="5022026c" rw_flags="R" width="2" name="MAC_AC_VO_TIME_SPENT_I0" comment="This register counts the time spent transmitting from the AC_VO queue, in units of 16 us."/>
    <register addr="50220270" rw_flags="R" width="2" name="MAC_AC_CBR_TIME_SPENT_I0" comment="This register counts the time spent transmitting from the AC_CBR queue, in units of 16 us."/>
    <register addr="50220274" rw_flags="R" width="2" name="MAC_TXRX_TIME_SPENT_I0" comment="This register counts the time spent transmitting and receiving, in units of 16 us."/>
    <register addr="50220278" rw_flags="R" width="2" name="MAC_CCA_BUSY_TIME_I0" comment="This register counts the time CCA indicates busy, in units of 16 us."/>
    <register addr="5022027c" rw_flags="R" width="2" name="MAC_SEC_BUSY_TIME_I0" comment="This register counts the time secondary channel is busy, in units of 16 us."/>
    <register addr="50220280" rw_flags="R" width="2" name="MAC_SEC40_BUSY_TIME_I0" comment="This register counts the time secondary40 channel is busy, in units of 16 us."/>
    <register addr="50220284" rw_flags="R" width="2" name="MAC_SEC80_BUSY_TIME_I0" comment="This register counts the time secondary80 channel is busy, in units of 16 us."/>
    <register addr="50220288" rw_flags="RW" width="2" name="MAC_DEBUG_MUX_SEL_I0" comment="Multiplexor select for debug bus readable via emulation/ASIC PIOs."/>
    <register addr="5022028c" rw_flags="RW" width="2" name="MAC_DEBUG_TRIG_CFG_I0" comment="Multiplexor select for debug bus readable via emulation/ASIC PIOs."/>
    <register addr="50220290" rw_flags="RW" width="2" name="MAC_DEBUG_TRIG_SOURCE_I0" comment="For edge trigger modes, a '1' selects the source. For logic trigger modes, a '1' defines input."/>
    <register addr="50220294" rw_flags="RW" width="2" name="MAC_DEBUG_TRIG_LEVEL_I0" comment="For logic trigger modes, each bit defines level for logic."/>
    <register addr="50220298" rw_flags="RW" width="1" name="MAC_DEBUG_SELECT_I0" comment="Select register for MAC debug multiplexer."/>
    <register addr="5022029c" rw_flags="R" width="2" name="MAC_DEBUG_X00_I0" comment="Debug bus."/>
    <register addr="502202a0" rw_flags="R" width="2" name="MAC_DEBUG_X01_I0" comment="Debug bus."/>
    <register addr="502202a4" rw_flags="R" width="2" name="MAC_DEBUG_X02_I0" comment="Debug bus."/>
    <register addr="502202a8" rw_flags="R" width="2" name="MAC_DEBUG_X03_I0" comment="Debug bus."/>
    <register addr="502202ac" rw_flags="R" width="2" name="MAC_DEBUG_X04_I0" comment="Debug bus."/>
    <register addr="502202b0" rw_flags="R" width="2" name="MAC_DEBUG_X05_I0" comment="Debug bus."/>
    <register addr="502202b4" rw_flags="R" width="2" name="MAC_DEBUG_X06_I0" comment="Debug bus."/>
    <register addr="502202b8" rw_flags="R" width="2" name="MAC_DEBUG_X07_I0" comment="Debug bus."/>
    <register addr="502202bc" rw_flags="R" width="2" name="MAC_DEBUG_X08_I0" comment="Debug bus."/>
    <register addr="502202c0" rw_flags="R" width="2" name="MAC_DEBUG_X09_I0" comment="Debug bus."/>
    <register addr="502202c4" rw_flags="R" width="2" name="MAC_DEBUG_X0A_I0" comment="Debug bus."/>
    <register addr="502202c8" rw_flags="R" width="2" name="MAC_DEBUG_X0B_I0" comment="Debug bus."/>
    <register addr="502202cc" rw_flags="R" width="2" name="MAC_DEBUG_X0C_I0" comment="Debug bus."/>
    <register addr="502202d0" rw_flags="R" width="2" name="MAC_DEBUG_X0D_I0" comment="Debug bus."/>
    <register addr="502202d4" rw_flags="R" width="2" name="MAC_DEBUG_X0E_I0" comment="Debug bus."/>
    <register addr="502202d8" rw_flags="R" width="2" name="MAC_DEBUG_X0F_I0" comment="Debug bus."/>
    <register addr="502202dc" rw_flags="R" width="2" name="MAC_DEBUG_X10_I0" comment="Debug bus."/>
    <register addr="502202e0" rw_flags="R" width="2" name="MAC_DEBUG_X11_I0" comment="Debug bus."/>
    <register addr="502202e4" rw_flags="R" width="2" name="MAC_DEBUG_X12_I0" comment="Debug bus."/>
    <register addr="502202e8" rw_flags="R" width="2" name="MAC_DEBUG_X13_I0" comment="Debug bus."/>
    <register addr="502202ec" rw_flags="R" width="2" name="MAC_DEBUG_X14_I0" comment="Debug bus."/>
    <register addr="502202f0" rw_flags="R" width="2" name="MAC_DEBUG_X15_I0" comment="Debug bus."/>
    <register addr="502202f4" rw_flags="R" width="2" name="MAC_DEBUG_X16_I0" comment="Debug bus."/>
    <register addr="502202f8" rw_flags="R" width="2" name="MAC_DEBUG_X17_I0" comment="Debug bus."/>
    <register addr="502202fc" rw_flags="R" width="2" name="MAC_DEBUG_X18_I0" comment="Debug bus."/>
    <register addr="50220300" rw_flags="R" width="2" name="MAC_DEBUG_X19_I0" comment="Debug bus."/>
    <register addr="50220304" rw_flags="R" width="2" name="MAC_DEBUG_X1A_I0" comment="Debug bus."/>
    <register addr="50220308" rw_flags="R" width="2" name="MAC_DEBUG_X1B_I0" comment="Debug bus."/>
    <register addr="5022030c" rw_flags="R" width="2" name="MAC_DEBUG_X1C_I0" comment="Debug bus."/>
    <register addr="50220310" rw_flags="R" width="2" name="MAC_DEBUG_X1D_I0" comment="Debug bus."/>
    <register addr="50220314" rw_flags="R" width="2" name="MAC_DEBUG_X1E_I0" comment="Debug bus."/>
    <register addr="50220318" rw_flags="R" width="2" name="MAC_DEBUG_X1F_I0" comment="Debug bus."/>
    <register addr="5022031c" rw_flags="R" width="2" name="MAC_DEBUG_X20_I0" comment="Debug bus."/>
    <register addr="50220320" rw_flags="R" width="2" name="MAC_DEBUG_X21_I0" comment="Debug bus."/>
    <register addr="50220324" rw_flags="R" width="2" name="MAC_DEBUG_X22_I0" comment="Debug bus."/>
    <register addr="50220328" rw_flags="R" width="2" name="MAC_DEBUG_X23_I0" comment="Debug bus."/>
    <register addr="5022032c" rw_flags="R" width="2" name="MAC_DEBUG_X24_I0" comment="Debug bus."/>
    <register addr="50220330" rw_flags="R" width="2" name="MAC_DEBUG_X25_I0" comment="Debug bus."/>
    <register addr="50220334" rw_flags="R" width="2" name="MAC_DEBUG_X26_I0" comment="Debug bus."/>
    <register addr="50220338" rw_flags="R" width="2" name="MAC_DEBUG_X27_I0" comment="Debug bus."/>
    <register addr="5022033c" rw_flags="R" width="2" name="MAC_DEBUG_X28_I0" comment="Debug bus."/>
    <register addr="50220340" rw_flags="R" width="2" name="MAC_DEBUG_X29_I0" comment="Debug bus."/>
    <register addr="50220344" rw_flags="R" width="2" name="MAC_DEBUG_X2A_I0" comment="Debug bus."/>
    <register addr="50220348" rw_flags="R" width="2" name="MAC_DEBUG_X2B_I0" comment="Debug bus."/>
    <register addr="5022034c" rw_flags="R" width="2" name="MAC_DEBUG_X2C_I0" comment="Debug bus."/>
    <register addr="50220350" rw_flags="R" width="2" name="MAC_DEBUG_X2D_I0" comment="Debug bus."/>
    <register addr="50220354" rw_flags="R" width="2" name="MAC_DEBUG_X2E_I0" comment="Debug bus."/>
    <register addr="50220358" rw_flags="R" width="2" name="MAC_DEBUG_X2F_I0" comment="Debug bus."/>
    <register addr="5022035c" rw_flags="R" width="2" name="MAC_DEBUG_X30_I0" comment="Debug bus."/>
    <register addr="50220360" rw_flags="R" width="2" name="MAC_DEBUG_X31_I0" comment="Debug bus."/>
    <register addr="50220364" rw_flags="R" width="2" name="MAC_DEBUG_X32_I0" comment="Debug bus."/>
    <register addr="50220368" rw_flags="R" width="2" name="MAC_DEBUG_X33_I0" comment="Debug bus."/>
    <register addr="5022036c" rw_flags="R" width="2" name="MAC_DEBUG_X34_I0" comment="Debug bus."/>
    <register addr="50220370" rw_flags="R" width="2" name="MAC_DEBUG_X35_I0" comment="Debug bus."/>
    <register addr="50220374" rw_flags="R" width="2" name="MAC_DEBUG_X36_I0" comment="Debug bus."/>
    <register addr="50220378" rw_flags="R" width="2" name="MAC_DEBUG_X37_I0" comment="Debug bus."/>
    <register addr="5022037c" rw_flags="R" width="1" name="MAC_SM_STATE_PHY_INTERFACE_I0" comment="State of state machine."/>
    <register addr="50220380" rw_flags="R" width="1" name="MAC_SM_STATE_VALIDATE_MPDU_I0" comment="State of state machine."/>
    <register addr="50220384" rw_flags="R" width="1" name="MAC_SM_STATE_FILTER_MPDU_I0" comment="State of state machine."/>
    <register addr="50220388" rw_flags="R" width="1" name="MAC_SM_STATE_DEFRAGMENT_I0" comment="State of state machine."/>
    <register addr="5022038c" rw_flags="R" width="1" name="MAC_SM_STATE_RX_COORDINATION_I0" comment="State of state machine."/>
    <register addr="50220390" rw_flags="R" width="1" name="MAC_SM_STATE_CHANNEL_STATE_I0" comment="State of state machine."/>
    <register addr="50220394" rw_flags="R" width="1" name="MAC_SM_STATE_BACKOFF_BE_I0" comment="State of state machine."/>
    <register addr="50220398" rw_flags="R" width="1" name="MAC_SM_STATE_BACKOFF_BK_I0" comment="State of state machine."/>
    <register addr="5022039c" rw_flags="R" width="1" name="MAC_SM_STATE_BACKOFF_VI_I0" comment="State of state machine."/>
    <register addr="502203a0" rw_flags="R" width="1" name="MAC_SM_STATE_BACKOFF_VO_I0" comment="State of state machine."/>
    <register addr="502203a4" rw_flags="R" width="1" name="MAC_SM_STATE_DATA_PUMP_I0" comment="State of state machine."/>
    <register addr="502203a8" rw_flags="R" width="1" name="MAC_SM_STATE_TX_COORDINATION_I0" comment="State of state machine."/>
    <register addr="502203ac" rw_flags="R" width="1" name="MAC_SM_STATE_TX_AGGREGATION_I0" comment="State of state machine."/>
    <register addr="502203b0" rw_flags="R" width="1" name="MAC_SM_STATE_RX_DEAGGREGATION_I0" comment="State of state machine."/>
    <register addr="502203b4" rw_flags="R" width="4" name="MAC_RX_LAST_MODEMA_I0" comment="Time of last A modem start of packet."/>
    <register addr="502203b8" rw_flags="R" width="4" name="MAC_RX_LAST_MODEMB_I0" comment="Time of last B modem start of packet."/>
    <register addr="502203bc" rw_flags="R" width="4" name="PDU_LAST_CBR_REQ_I0" comment="Time of last TX request on the CBR queue."/>
    <register addr="502203c0" rw_flags="RW" width="4" name="MAC_BA_RX_0_PEER_ADDRESS_LSB_I0" comment="BA RX 0 peer address [31:0]"/>
    <register addr="502203c4" rw_flags="RW" width="2" name="MAC_BA_RX_0_PEER_ADDRESS_MSB_I0" comment="BA RX 0 peer address [47:32]"/>
    <register addr="502203c8" rw_flags="RW" width="4" name="MAC_BA_RX_0_CONFIG_I0" comment="BA RX 0 configuration"/>
    <register addr="502203cc" rw_flags="RW" width="4" name="MAC_BA_RX_1_PEER_ADDRESS_LSB_I0" comment="BA RX 1 peer address [31:0]"/>
    <register addr="502203d0" rw_flags="RW" width="2" name="MAC_BA_RX_1_PEER_ADDRESS_MSB_I0" comment="BA RX 1 peer address [47:32]"/>
    <register addr="502203d4" rw_flags="RW" width="4" name="MAC_BA_RX_1_CONFIG_I0" comment="BA RX 1 configuration"/>
    <register addr="502203d8" rw_flags="RW" width="4" name="MAC_BA_RX_2_PEER_ADDRESS_LSB_I0" comment="BA RX 2 peer address [31:0]"/>
    <register addr="502203dc" rw_flags="RW" width="2" name="MAC_BA_RX_2_PEER_ADDRESS_MSB_I0" comment="BA RX 2 peer address [47:32]"/>
    <register addr="502203e0" rw_flags="RW" width="4" name="MAC_BA_RX_2_CONFIG_I0" comment="BA RX 2 configuration"/>
    <register addr="502203e4" rw_flags="RW" width="4" name="MAC_BA_RX_3_PEER_ADDRESS_LSB_I0" comment="BA RX 3 peer address [31:0]"/>
    <register addr="502203e8" rw_flags="RW" width="2" name="MAC_BA_RX_3_PEER_ADDRESS_MSB_I0" comment="BA RX 3 peer address [47:32]"/>
    <register addr="502203ec" rw_flags="RW" width="4" name="MAC_BA_RX_3_CONFIG_I0" comment="BA RX 3 configuration"/>
    <register addr="502203f0" rw_flags="RW" width="4" name="MAC_BA_RX_4_PEER_ADDRESS_LSB_I0" comment="BA RX 4 peer address [31:0]"/>
    <register addr="502203f4" rw_flags="RW" width="2" name="MAC_BA_RX_4_PEER_ADDRESS_MSB_I0" comment="BA RX 4 peer address [47:32]"/>
    <register addr="502203f8" rw_flags="RW" width="4" name="MAC_BA_RX_4_CONFIG_I0" comment="BA RX 4 configuration"/>
    <register addr="502203fc" rw_flags="RW" width="4" name="MAC_BA_RX_5_PEER_ADDRESS_LSB_I0" comment="BA RX 5 peer address [31:0]"/>
    <register addr="50220400" rw_flags="RW" width="2" name="MAC_BA_RX_5_PEER_ADDRESS_MSB_I0" comment="BA RX 5 peer address [47:32]"/>
    <register addr="50220404" rw_flags="RW" width="4" name="MAC_BA_RX_5_CONFIG_I0" comment="BA RX 5 configuration"/>
    <register addr="50220408" rw_flags="RW" width="4" name="MAC_BA_RX_6_PEER_ADDRESS_LSB_I0" comment="BA RX 6 peer address [31:0]"/>
    <register addr="5022040c" rw_flags="RW" width="2" name="MAC_BA_RX_6_PEER_ADDRESS_MSB_I0" comment="BA RX 6 peer address [47:32]"/>
    <register addr="50220410" rw_flags="RW" width="4" name="MAC_BA_RX_6_CONFIG_I0" comment="BA RX 6 configuration"/>
    <register addr="50220414" rw_flags="RW" width="4" name="MAC_BA_RX_7_PEER_ADDRESS_LSB_I0" comment="BA RX 7 peer address [31:0]"/>
    <register addr="50220418" rw_flags="RW" width="2" name="MAC_BA_RX_7_PEER_ADDRESS_MSB_I0" comment="BA RX 7 peer address [47:32]"/>
    <register addr="5022041c" rw_flags="RW" width="4" name="MAC_BA_RX_7_CONFIG_I0" comment="BA RX 7 configuration"/>
    <register addr="50220420" rw_flags="RW" width="4" name="MAC_BA_RX_CONFIG_BITMAP_LSB_I0" comment="Global bitmap value loaded into every BA RX instance when they are initialised. Can be used for interop recovery. [31:0]"/>
    <register addr="50220424" rw_flags="RW" width="4" name="MAC_BA_RX_CONFIG_BITMAP_MSB_I0" comment="Global bitmap value loaded into every BA RX instance when they are initialised. Can be used for interop recovery. [63:32]"/>
    <register addr="50220428" rw_flags="R" width="4" name="MAC_BA_RX_BITMAP_LSB_I0" comment="Current BA RX bitmap from the selected instance. [31:0]"/>
    <register addr="5022042c" rw_flags="R" width="4" name="MAC_BA_RX_BITMAP_MSB_I0" comment="Current BA RX bitmap from the selected instance. [61:32]"/>
    <register addr="50220430" rw_flags="RW" width="1" name="MAC_BA_RX_BITMAP_SELECT_I0" comment="Select which BA RX instance has its bitmap readable on MAC_BA_RX_BITMAP."/>
    <register addr="50220434" rw_flags="RW" width="1" name="MAC_CHANGE_NAV_SOURCE_I0" comment="NAV Source"/>
    <register addr="50220438" rw_flags="RW" width="4" name="MAC_CHANGE_NAV_BSSID_LSB_I0" comment="BSSID [31:0]"/>
    <register addr="5022043c" rw_flags="RW" width="2" name="MAC_CHANGE_NAV_BSSID_MSB_I0" comment="BSSID [47:32]"/>
    <register addr="50220440" rw_flags="RW" width="4" name="MAC_CHANGE_NAV_END_I0" comment="NAV End"/>
    <register addr="50220444" rw_flags="RW" width="2" name="MAC_CHANGE_STATE_I0" comment="Change internal states"/>
  </block>
  <block name="wl_mac_acc_1" comment="">
    <register addr="50320000" rw_flags="RW" width="1" name="MAC_ACC_CONTROL_I1" comment="Resets and enables the MAC accelerator."/>
    <register addr="50320004" rw_flags="R" width="1" name="MAC_BA_TX_ACTIVITY_I1" comment="MAC BA_TX activity status."/>
    <register addr="50320008" rw_flags="RW" width="2" name="MAC_BA_ENABLE_I1" comment="Enables for the BA_RX/BA_TX instances."/>
    <register addr="5032000c" rw_flags="RW" width="1" name="MAC_MODULE_RESET_I1" comment="This register can be used to reset MAC submodules individually [one at a time]."/>
    <register addr="50320010" rw_flags="RW" width="2" name="MAC_CLOCK_DISABLE_I1" comment="Clock disable signals that control the local clock gating logic of MAC submodules."/>
    <register addr="50320014" rw_flags="RW" width="4" name="MAC_STATION_MAC_ADDRESS_BYTE3_0_I1" comment="Primary MAC address"/>
    <register addr="50320018" rw_flags="RW" width="2" name="MAC_STATION_MAC_ADDRESS_BYTE5_4_I1" comment="Primary MAC address"/>
    <register addr="5032001c" rw_flags="RW" width="4" name="MAC_STATION_MAC_ADDRESS1_BYTE3_0_I1" comment="MAC address #1"/>
    <register addr="50320020" rw_flags="RW" width="2" name="MAC_STATION_MAC_ADDRESS1_BYTE5_4_I1" comment="MAC address #1"/>
    <register addr="50320024" rw_flags="RW" width="4" name="MAC_STATION_MAC_ADDRESS2_BYTE3_0_I1" comment="MAC address #2"/>
    <register addr="50320028" rw_flags="RW" width="2" name="MAC_STATION_MAC_ADDRESS2_BYTE5_4_I1" comment="MAC address #2"/>
    <register addr="5032002c" rw_flags="RW" width="4" name="MAC_STATION_MAC_ADDRESS3_BYTE3_0_I1" comment="MAC address #3"/>
    <register addr="50320030" rw_flags="RW" width="2" name="MAC_STATION_MAC_ADDRESS3_BYTE5_4_I1" comment="MAC address #3"/>
    <register addr="50320034" rw_flags="RW" width="4" name="MAC_STATION_MAC_ADDRESS3_MASK_BYTE3_0_I1" comment="If a bit is set, then that bit"/>
    <register addr="50320038" rw_flags="RW" width="2" name="MAC_STATION_MAC_ADDRESS3_MASK_BYTE5_4_I1" comment="is ignored for receive Address1 matching."/>
    <register addr="5032003c" rw_flags="RW" width="1" name="MAC_STATION_ADDRESS_CONFIG_I1" comment="Configures receive Address1 matching on our MAC addresses."/>
    <register addr="50320040" rw_flags="RW" width="4" name="MAC_GROUP_PLAY_PEER_ADDR_BYTE3_0_I1" comment="Group Play Transmit Leader MAC address"/>
    <register addr="50320044" rw_flags="RW" width="2" name="MAC_GROUP_PLAY_PEER_ADDR_BYTE5_4_I1" comment="Group Play Transmit Leader MAC address"/>
    <register addr="50320048" rw_flags="RW" width="4" name="MAC_GROUP_PLAY_PEER_ADDR1_BYTE3_0_I1" comment="Group Play Transmit Leader MAC address"/>
    <register addr="5032004c" rw_flags="RW" width="2" name="MAC_GROUP_PLAY_PEER_ADDR1_BYTE5_4_I1" comment="Group Play Transmit Leader MAC address"/>
    <register addr="50320050" rw_flags="RW" width="4" name="MAC_GROUP_PLAY_PEER_ADDR2_BYTE3_0_I1" comment="Group Play Transmit Leader MAC address"/>
    <register addr="50320054" rw_flags="RW" width="2" name="MAC_GROUP_PLAY_PEER_ADDR2_BYTE5_4_I1" comment="Group Play Transmit Leader MAC address"/>
    <register addr="50320058" rw_flags="RW" width="4" name="MAC_GROUP_PLAY_PEER_ADDR3_BYTE3_0_I1" comment="Group Play Transmit Leader MAC address"/>
    <register addr="5032005c" rw_flags="RW" width="2" name="MAC_GROUP_PLAY_PEER_ADDR3_BYTE5_4_I1" comment="Group Play Transmit Leader MAC address"/>
    <register addr="50320060" rw_flags="RW" width="1" name="MAC_GRP_ACK_CONFIG_I1" comment="Configures immediate ACK behaviour for reception of Group Addressed frames"/>
    <register addr="50320064" rw_flags="RW" width="2" name="MAC_GRP_ACK_TYPE_MANAGEMENT_SUBTYPE_EN_I1" comment="Each bit corresponds to a data subtype. If set to 1, it means that subtype will get ACKed."/>
    <register addr="50320068" rw_flags="RW" width="2" name="MAC_GRP_ACK_TYPE_CONTROL_SUBTYPE_EN_I1" comment="Each bit corresponds to a data subtype. If set to 1, it means that subtype will get ACKed."/>
    <register addr="5032006c" rw_flags="RW" width="2" name="MAC_GRP_ACK_TYPE_DATA_SUBTYPE_EN_I1" comment="Each bit corresponds to a data subtype. If set to 1, it means that subtype will get ACKed."/>
    <register addr="50320070" rw_flags="RW" width="2" name="MAC_GRP_ACK_TYPE_RESERVED_SUBTYPE_EN_I1" comment="Each bit corresponds to a data subtype. If set to 1, it means that subtype will get ACKed."/>
    <register addr="50320074" rw_flags="RW" width="4" name="MAC_BSSID_BYTE3_0_I1" comment="BSSID"/>
    <register addr="50320078" rw_flags="RW" width="2" name="MAC_BSSID_BYTE5_4_I1" comment="BSSID"/>
    <register addr="5032007c" rw_flags="RW" width="4" name="MAC_ALT_BSSID_BYTE3_0_I1" comment="Alternative BSSID"/>
    <register addr="50320080" rw_flags="RW" width="2" name="MAC_ALT_BSSID_BYTE5_4_I1" comment="Alternative BSSID"/>
    <register addr="50320084" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_01MBPS_I1" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="50320088" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_02MBPS_I1" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="5032008c" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_5M5BPS_I1" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="50320090" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_11MBPS_I1" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="50320094" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_06MBPS_I1" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="50320098" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_09MBPS_I1" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="5032009c" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_12MBPS_I1" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="503200a0" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_18MBPS_I1" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="503200a4" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_24MBPS_I1" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="503200a8" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_36MBPS_I1" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="503200ac" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_48MBPS_I1" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="503200b0" rw_flags="RW" width="2" name="MAC_RESPONSE_RATES_54MBPS_I1" comment="Non-HT response rates associated with primary and secondary MAC addresses."/>
    <register addr="503200b4" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS0_I1" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="503200b8" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS1_I1" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="503200bc" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS2_I1" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="503200c0" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS3_I1" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="503200c4" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS4_I1" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="503200c8" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS5_I1" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="503200cc" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS6_I1" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="503200d0" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS7_I1" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="503200d4" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS8_I1" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="503200d8" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS9_I1" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="503200dc" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS10_I1" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="503200e0" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS11_I1" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="503200e4" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS12_I1" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="503200e8" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS13_I1" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="503200ec" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS14_I1" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="503200f0" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS15_I1" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="503200f4" rw_flags="RW" width="2" name="MAC_HT_RESPONSE_RATES_MCS32_I1" comment="HT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="503200f8" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS0_I1" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="503200fc" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS1_I1" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50320100" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS2_I1" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50320104" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS3_I1" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50320108" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS4_I1" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="5032010c" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS5_I1" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50320110" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS6_I1" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50320114" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS7_I1" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50320118" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS8_I1" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="5032011c" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS9_I1" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50320120" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS0_NSS2_I1" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50320124" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS1_NSS2_I1" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50320128" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS2_NSS2_I1" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="5032012c" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS3_NSS2_I1" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50320130" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS4_NSS2_I1" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50320134" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS5_NSS2_I1" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50320138" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS6_NSS2_I1" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="5032013c" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS7_NSS2_I1" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50320140" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS8_NSS2_I1" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50320144" rw_flags="RW" width="2" name="MAC_VHT_RESPONSE_RATES_MCS9_NSS2_I1" comment="VHT response rates tables associated with primary and secondary MAC addresses."/>
    <register addr="50320148" rw_flags="RW" width="2" name="MAC_CTRL_MAC2_FLAGS_I1" comment="Flags [Configuration bits] register 2"/>
    <register addr="5032014c" rw_flags="RW" width="2" name="MAC_CTRL_MAC3_FLAGS_I1" comment="Flags [Configuration bits] register 3"/>
    <register addr="50320150" rw_flags="RW" width="2" name="MAC_CTRL_MAC4_FLAGS_I1" comment="Flags [Configuration bits] register 4"/>
    <register addr="50320154" rw_flags="RW" width="2" name="MAC_CTRL_MAC5_FLAGS_I1" comment="Flags [Configuration bits] register 5"/>
    <register addr="50320158" rw_flags="RW" width="2" name="MAC_CTRL_MAC6_FLAGS_I1" comment="Flags [Configuration bits] register 6"/>
    <register addr="5032015c" rw_flags="RW" width="2" name="MAC_CTRL_MAC7_FLAGS_I1" comment="Flags [Configuration bits] register 7"/>
    <register addr="50320160" rw_flags="RW" width="2" name="MAC_CTRL_MAC10_FLAGS_I1" comment="Flags [Configuration bits] register 10"/>
    <register addr="50320164" rw_flags="RW" width="2" name="MAC_CTRL_MAC11_FLAGS_I1" comment="Flags [Configuration bits] register 11 (This replaces some ACTING_AS_AP functionality by splitting it into several programmable bits."/>
    <register addr="50320168" rw_flags="RW" width="2" name="MAC_CTRL_MAC12_FLAGS_I1" comment="Flags [Configuration bits] register 12."/>
    <register addr="5032016c" rw_flags="RW" width="2" name="MAC_RX_FILTER_CONFIG_I1" comment="RX filter configuration"/>
    <register addr="50320170" rw_flags="RW" width="2" name="MAC_MIN_MPDU_LEN_I1" comment="Minimum RX MPDU length. Received MPDUs shorter than this are discarded."/>
    <register addr="50320174" rw_flags="RW" width="2" name="MAC_MAX_MPDU_LEN_I1" comment="Maximum RX MPDU length. Received MPDUs longer than this are discarded."/>
    <register addr="50320178" rw_flags="RW" width="2" name="MAC_CCA_CFG_I1" comment="Configures CCA utilisation."/>
    <register addr="5032017c" rw_flags="RW" width="2" name="MAC_CTRL_RESPONSE_TX_LEVEL_I1" comment="Transmit level for control response frames."/>
    <register addr="50320180" rw_flags="RW" width="1" name="MAC_CTRL_RESPONSE_TX_ANT_I1" comment="Transmit antenna configuration for control response frames."/>
    <register addr="50320184" rw_flags="RW" width="2" name="MAC_AC_BK_TXOP_LIMIT_I1" comment="TXOP limit in units of 32 us for the AC_BK EDCA queue."/>
    <register addr="50320188" rw_flags="RW" width="2" name="MAC_AC_BE_TXOP_LIMIT_I1" comment="TXOP limit in units of 32 us for the AC_BE EDCA queue."/>
    <register addr="5032018c" rw_flags="RW" width="2" name="MAC_AC_VI_TXOP_LIMIT_I1" comment="TXOP limit in units of 32 us for the AC_VI EDCA queue."/>
    <register addr="50320190" rw_flags="RW" width="2" name="MAC_AC_VO_TXOP_LIMIT_I1" comment="TXOP limit in units of 32 us for the AC_VO EDCA queue."/>
    <register addr="50320194" rw_flags="R" width="2" name="MAC_TXOP_TIME_LEFT_I1" comment="The firmware can read from this register the time remaining in the current TXOP, in units of 1 us."/>
    <register addr="50320198" rw_flags="RW" width="2" name="MAC_EIFS_I1" comment="Programmable EIFS"/>
    <register addr="5032019c" rw_flags="RW" width="1" name="MAC_SLOT_TIME_US_I1" comment="Programmable slot time in us"/>
    <register addr="503201a0" rw_flags="RW" width="2" name="MAC_NDP_MCS_I1" comment="Programs MCS used for HT NDP or VHT NDP transmission."/>
    <register addr="503201a4" rw_flags="RW" width="2" name="MAC_BFER_CFG_I1" comment="Configures beamformer."/>
    <register addr="503201a8" rw_flags="RW" width="2" name="MAC_BFEE_CFG_I1" comment="Configures beamformee."/>
    <register addr="503201ac" rw_flags="RW" width="2" name="MAC_MCS_FEEDBACK_CONFIG_I1" comment="MCS feedback configuration"/>
    <register addr="503201b0" rw_flags="RW" width="4" name="MAC_TID_QSIZE_MAP_I1" comment="Maps one of 16 TIDs to one of four queue sizes, for the purpose of setting the 'Queue Size' field in transmitted QoS frames."/>
    <register addr="503201b4" rw_flags="RW" width="4" name="MAC_TID_QSIZE_I1" comment="Queue sizes numbers 0, 1, 2 and 3."/>
    <register addr="503201b8" rw_flags="R" width="4" name="MAC_M_NAV_END_I1" comment="The firmware can read from this register the NAV end time."/>
    <register addr="503201bc" rw_flags="R" width="4" name="MAC_NAV_BSSID_BYTE3_0_I1" comment="The firmware can read from this register the BSSID associated to the current NAV."/>
    <register addr="503201c0" rw_flags="R" width="2" name="MAC_NAV_BSSID_BYTE5_4_I1" comment=""/>
    <register addr="503201c4" rw_flags="R" width="4" name="MAC_TXOPHOLDER_BYTE3_0_I1" comment="The firmware can read from this register the TXOP holder associated to the current NAV."/>
    <register addr="503201c8" rw_flags="R" width="2" name="MAC_TXOPHOLDER_BYTE5_4_I1" comment=""/>
    <register addr="503201cc" rw_flags="R" width="1" name="MAC_NAV_SRC_I1" comment="NAV sources. See 802.11-1999 as amended in 802.11-2007."/>
    <register addr="503201d0" rw_flags="RW" width="4" name="MAC_TX_SIFS_REF_I1" comment="Adjust the timing of Data frame following a CTS-to-self. This is nominally the time between the on-air end of frame to the point when MAC issues PHY RX End signal. This is measured in 25 ns units."/>
    <register addr="503201d4" rw_flags="RW" width="4" name="MAC_TX_RIFS_REF_I1" comment="Adjust TX timing references to achieve RIFS transmission. This is 25 ns units."/>
    <register addr="503201d8" rw_flags="RW" width="2" name="MAC_RESPONSE_DELAY_SIFS_I1" comment="Bits 7 down to 0 are programmable time in 25ns units to delay response frames such that SIFS is met. Bit 8 allows timing at the end of HT-MM short GI frames to be measured on 4us symbol boundaries. This affects SIFS timing of short GI frames."/>
    <register addr="503201dc" rw_flags="RW" width="2" name="MAC_TXEND_LATENCY_I1" comment="The time between the modem sending a 'TX End' signal to the actual on-air end of frame. This is measured in 25 ns units. This is used as an 'off-air' indicator. "/>
    <register addr="503201e0" rw_flags="RW" width="4" name="MAC_CSTATE_IFS_ADJUST_I1" comment="Adjust IFS timing for in channel state module"/>
    <register addr="503201e4" rw_flags="RW" width="1" name="MAC_PHYIF_SYMB_START_11B_I1" comment="Programmable time in 25ns units that adjusts the symbol start time in MAC_PHY_INTERFACE (+) for 11b. This adjusts the position of the PHY preamble."/>
    <register addr="503201e8" rw_flags="RW" width="2" name="MAC_PHYIF_SYMB_END_11B_I1" comment="Programmable time that adjust 11b RX latency to meet SIFS. The format is 4.6 unsigned. The integer part is in microseconds. The fractional part is in 25 ns."/>
    <register addr="503201ec" rw_flags="RW" width="1" name="MAC_PHYIF_SYMB_START_ADJUST_I1" comment="Programmable time in 25ns units that adjusts the symbol start time in MAC_PHY_INTERFACE (+/-) for OFDM."/>
    <register addr="503201f0" rw_flags="RW" width="1" name="MAC_PHYIF_SYMB_END_ADJUST_I1" comment="Programmable time in 25ns units that adjusts the symbol end time in MAC_PHY_INTERFACE (+/-) for OFDM."/>
    <register addr="503201f4" rw_flags="RW" width="1" name="MAC_PHYIF_STBC_WITH_LDPC_SYMB_END_ADJUST_I1" comment="Programmable time in 25ns units that adjusts the symbol end time in MAC_PHY_INTERFACE for a received frame containing both STBC and LDPC (+/-) for OFDM."/>
    <register addr="503201f8" rw_flags="RW" width="2" name="MAC_PHYIF_STBC_LDPC_SYMB_END_ADJUST_I1" comment="Programmable time in 25us units that adjusts the symbol end time in MAC_PHY_INTERFACE for STBC or LDPC reception (+/-) for OFDM."/>
    <register addr="503201fc" rw_flags="RW" width="1" name="MAC_PHYIF_RXSTART_ADJUST_I1" comment="Programmable time in 1us unit that adjusts the RX_START start time in MAC_PHY_INTERFACE."/>
    <register addr="50320200" rw_flags="RW" width="1" name="MAC_TX_CTSRESPONSE_ADJUST_I1" comment="Programmable time in 25ns units that adjusts the start of the TX of the frame sent at SIFS after a CTS TX or RX."/>
    <register addr="50320204" rw_flags="RW" width="2" name="MAC_RESPONSE_TIMEOUT_11A_I1" comment="Programmable time in us that the MAC waits for a response in 11a."/>
    <register addr="50320208" rw_flags="RW" width="2" name="MAC_RESPONSE_TIMEOUT_11B_I1" comment="Programmable time in us that the MAC waits for a response in 11b."/>
    <register addr="5032020c" rw_flags="RW" width="2" name="MAC_RX_AMPDU_CFG_I1" comment="Receive A-MPDU configuration."/>
    <register addr="50320210" rw_flags="RW" width="2" name="MAC_SEC_CHAN_CLEAR_TIME_I1" comment="Secondary Channel must be free for this amount of time (50ns unit) before it is declared non-busy for starting a Txop."/>
    <register addr="50320214" rw_flags="RW" width="2" name="MAC_SEC_CHAN_CLEAR_TIME_CTS_I1" comment="The bottom 10 bits means secondary channel must be free for this amount of time (50ns unit) before it is declared non-busy for CTS response to a RTS signalling TA. Bits [13:10] is a signed number that adjusts the delay between the start of frame and the synchronisation start pulse from the modem."/>
    <register addr="50320218" rw_flags="RW" width="2" name="MAC_TX_DELAY_FINE_TUNE_I1" comment="Transmit delay fine tune. Provides fine adjustment of inter-frame spacing."/>
    <register addr="5032021c" rw_flags="RW" width="2" name="MAC_CS_LATENCY_I1" comment="CS latency in units of 25 ns: time that medium is still marked busy after CS becomes inactive. The purpose of this is to stretch CCA status from CS latency to nominal OFDM RX latency."/>
    <register addr="50320220" rw_flags="RW" width="2" name="MAC_RADIO_SYNC_LATENCY_I1" comment="Radio sync latency in units of 25 ns: time that medium is still marked busy after CS becomes inactive. The purpose of this is to cover the time between modem indicates CCA busy to the start of packet pulse."/>
    <register addr="50320224" rw_flags="RW" width="2" name="MAC_MODEM_SYNC_LATENCY_I1" comment="Modem sync latency in units of 25 ns: time that medium is still marked busy after CS becomes inactive. The purpose of this is to cover the time between OFDM STF sync to the start of packet pulse."/>
    <register addr="50320228" rw_flags="RW" width="1" name="MAC_DEFAULT_AMPDU_DURATION_I1" comment="This is the duration of an A-MPDU frame exchange when it is the next frame from the frame at the head of a queue."/>
    <register addr="5032022c" rw_flags="RW" width="4" name="MAC_MAX_ACK_DURATION_I1" comment="Maximum ACK duration for DSSS/CCK and OFDM."/>
    <register addr="50320230" rw_flags="R" width="4" name="MAC_DOT11_FCS_ERROR_COUNT_I1" comment="Received frame FCS error counter."/>
    <register addr="50320234" rw_flags="R" width="4" name="MAC_DOT11_FCS_GOOD_COUNT_I1" comment="Received frame FCS good counter."/>
    <register addr="50320238" rw_flags="R" width="4" name="MAC_DOT11_ERROR_COUNT_I1" comment="Received frame error counter that is NOT a FCS error."/>
    <register addr="5032023c" rw_flags="R" width="4" name="MAC_BAD_SIG_COUNT_I1" comment="Received frame bad signal counter."/>
    <register addr="50320240" rw_flags="R" width="4" name="MAC_TX_UNDER_COUNT_I1" comment="TX frames which were corrupted by the accelerator due to TX underflow."/>
    <register addr="50320244" rw_flags="R" width="4" name="MAC_RX_VHT_MU_UNMATCHED_GID_I1" comment="VHT MU frames where GID does not match."/>
    <register addr="50320248" rw_flags="R" width="2" name="MAC_AC_BK_TIME_SPENT_I1" comment="This register counts the time spent transmitting from the AC_BK queue, in units of 16 us."/>
    <register addr="5032024c" rw_flags="R" width="4" name="MAC_DOT11_RX_OCTETS_IN_AMPDUS_I1" comment="Counts of the number of octets received in AMPDUs."/>
    <register addr="50320250" rw_flags="R" width="2" name="MAC_DOT11_RX_AMPDUS_COUNT_I1" comment="Counts of the number of received AMPDUs."/>
    <register addr="50320254" rw_flags="R" width="2" name="MAC_DOT11_RX_MPDUS_IN_AMPDUS_COUNT_I1" comment="Counts of the number of MPDUs received in AMPDUs."/>
    <register addr="50320258" rw_flags="R" width="2" name="MAC_DOT11_RX_AMPDU_DELIM_LEN_ERR_COUNT_I1" comment="Counts the number of length errors in MPDU delimiters found in received AMPDUs."/>
    <register addr="5032025c" rw_flags="R" width="2" name="MAC_DOT11_RX_AMPDU_DELIM_SPACING_ERR_COUNT_I1" comment="Counts the number of start spacing errors in MPDU delimiters found in received AMPDUs."/>
    <register addr="50320260" rw_flags="R" width="2" name="MAC_DOT11_RX_AMPDU_DELIM_SINGLE_ERR_COUNT_I1" comment="Counts the number of VHT single errors in MPDU delimiters found in received AMPDUs."/>
    <register addr="50320264" rw_flags="R" width="2" name="MAC_AC_BE_TIME_SPENT_I1" comment="This register counts the time spent transmitting from the AC_BE queue, in units of 16 us."/>
    <register addr="50320268" rw_flags="R" width="2" name="MAC_AC_VI_TIME_SPENT_I1" comment="This register counts the time spent transmitting from the AC_VI queue, in units of 16 us."/>
    <register addr="5032026c" rw_flags="R" width="2" name="MAC_AC_VO_TIME_SPENT_I1" comment="This register counts the time spent transmitting from the AC_VO queue, in units of 16 us."/>
    <register addr="50320270" rw_flags="R" width="2" name="MAC_AC_CBR_TIME_SPENT_I1" comment="This register counts the time spent transmitting from the AC_CBR queue, in units of 16 us."/>
    <register addr="50320274" rw_flags="R" width="2" name="MAC_TXRX_TIME_SPENT_I1" comment="This register counts the time spent transmitting and receiving, in units of 16 us."/>
    <register addr="50320278" rw_flags="R" width="2" name="MAC_CCA_BUSY_TIME_I1" comment="This register counts the time CCA indicates busy, in units of 16 us."/>
    <register addr="5032027c" rw_flags="R" width="2" name="MAC_SEC_BUSY_TIME_I1" comment="This register counts the time secondary channel is busy, in units of 16 us."/>
    <register addr="50320280" rw_flags="R" width="2" name="MAC_SEC40_BUSY_TIME_I1" comment="This register counts the time secondary40 channel is busy, in units of 16 us."/>
    <register addr="50320284" rw_flags="R" width="2" name="MAC_SEC80_BUSY_TIME_I1" comment="This register counts the time secondary80 channel is busy, in units of 16 us."/>
    <register addr="50320288" rw_flags="RW" width="2" name="MAC_DEBUG_MUX_SEL_I1" comment="Multiplexor select for debug bus readable via emulation/ASIC PIOs."/>
    <register addr="5032028c" rw_flags="RW" width="2" name="MAC_DEBUG_TRIG_CFG_I1" comment="Multiplexor select for debug bus readable via emulation/ASIC PIOs."/>
    <register addr="50320290" rw_flags="RW" width="2" name="MAC_DEBUG_TRIG_SOURCE_I1" comment="For edge trigger modes, a '1' selects the source. For logic trigger modes, a '1' defines input."/>
    <register addr="50320294" rw_flags="RW" width="2" name="MAC_DEBUG_TRIG_LEVEL_I1" comment="For logic trigger modes, each bit defines level for logic."/>
    <register addr="50320298" rw_flags="RW" width="1" name="MAC_DEBUG_SELECT_I1" comment="Select register for MAC debug multiplexer."/>
    <register addr="5032029c" rw_flags="R" width="2" name="MAC_DEBUG_X00_I1" comment="Debug bus."/>
    <register addr="503202a0" rw_flags="R" width="2" name="MAC_DEBUG_X01_I1" comment="Debug bus."/>
    <register addr="503202a4" rw_flags="R" width="2" name="MAC_DEBUG_X02_I1" comment="Debug bus."/>
    <register addr="503202a8" rw_flags="R" width="2" name="MAC_DEBUG_X03_I1" comment="Debug bus."/>
    <register addr="503202ac" rw_flags="R" width="2" name="MAC_DEBUG_X04_I1" comment="Debug bus."/>
    <register addr="503202b0" rw_flags="R" width="2" name="MAC_DEBUG_X05_I1" comment="Debug bus."/>
    <register addr="503202b4" rw_flags="R" width="2" name="MAC_DEBUG_X06_I1" comment="Debug bus."/>
    <register addr="503202b8" rw_flags="R" width="2" name="MAC_DEBUG_X07_I1" comment="Debug bus."/>
    <register addr="503202bc" rw_flags="R" width="2" name="MAC_DEBUG_X08_I1" comment="Debug bus."/>
    <register addr="503202c0" rw_flags="R" width="2" name="MAC_DEBUG_X09_I1" comment="Debug bus."/>
    <register addr="503202c4" rw_flags="R" width="2" name="MAC_DEBUG_X0A_I1" comment="Debug bus."/>
    <register addr="503202c8" rw_flags="R" width="2" name="MAC_DEBUG_X0B_I1" comment="Debug bus."/>
    <register addr="503202cc" rw_flags="R" width="2" name="MAC_DEBUG_X0C_I1" comment="Debug bus."/>
    <register addr="503202d0" rw_flags="R" width="2" name="MAC_DEBUG_X0D_I1" comment="Debug bus."/>
    <register addr="503202d4" rw_flags="R" width="2" name="MAC_DEBUG_X0E_I1" comment="Debug bus."/>
    <register addr="503202d8" rw_flags="R" width="2" name="MAC_DEBUG_X0F_I1" comment="Debug bus."/>
    <register addr="503202dc" rw_flags="R" width="2" name="MAC_DEBUG_X10_I1" comment="Debug bus."/>
    <register addr="503202e0" rw_flags="R" width="2" name="MAC_DEBUG_X11_I1" comment="Debug bus."/>
    <register addr="503202e4" rw_flags="R" width="2" name="MAC_DEBUG_X12_I1" comment="Debug bus."/>
    <register addr="503202e8" rw_flags="R" width="2" name="MAC_DEBUG_X13_I1" comment="Debug bus."/>
    <register addr="503202ec" rw_flags="R" width="2" name="MAC_DEBUG_X14_I1" comment="Debug bus."/>
    <register addr="503202f0" rw_flags="R" width="2" name="MAC_DEBUG_X15_I1" comment="Debug bus."/>
    <register addr="503202f4" rw_flags="R" width="2" name="MAC_DEBUG_X16_I1" comment="Debug bus."/>
    <register addr="503202f8" rw_flags="R" width="2" name="MAC_DEBUG_X17_I1" comment="Debug bus."/>
    <register addr="503202fc" rw_flags="R" width="2" name="MAC_DEBUG_X18_I1" comment="Debug bus."/>
    <register addr="50320300" rw_flags="R" width="2" name="MAC_DEBUG_X19_I1" comment="Debug bus."/>
    <register addr="50320304" rw_flags="R" width="2" name="MAC_DEBUG_X1A_I1" comment="Debug bus."/>
    <register addr="50320308" rw_flags="R" width="2" name="MAC_DEBUG_X1B_I1" comment="Debug bus."/>
    <register addr="5032030c" rw_flags="R" width="2" name="MAC_DEBUG_X1C_I1" comment="Debug bus."/>
    <register addr="50320310" rw_flags="R" width="2" name="MAC_DEBUG_X1D_I1" comment="Debug bus."/>
    <register addr="50320314" rw_flags="R" width="2" name="MAC_DEBUG_X1E_I1" comment="Debug bus."/>
    <register addr="50320318" rw_flags="R" width="2" name="MAC_DEBUG_X1F_I1" comment="Debug bus."/>
    <register addr="5032031c" rw_flags="R" width="2" name="MAC_DEBUG_X20_I1" comment="Debug bus."/>
    <register addr="50320320" rw_flags="R" width="2" name="MAC_DEBUG_X21_I1" comment="Debug bus."/>
    <register addr="50320324" rw_flags="R" width="2" name="MAC_DEBUG_X22_I1" comment="Debug bus."/>
    <register addr="50320328" rw_flags="R" width="2" name="MAC_DEBUG_X23_I1" comment="Debug bus."/>
    <register addr="5032032c" rw_flags="R" width="2" name="MAC_DEBUG_X24_I1" comment="Debug bus."/>
    <register addr="50320330" rw_flags="R" width="2" name="MAC_DEBUG_X25_I1" comment="Debug bus."/>
    <register addr="50320334" rw_flags="R" width="2" name="MAC_DEBUG_X26_I1" comment="Debug bus."/>
    <register addr="50320338" rw_flags="R" width="2" name="MAC_DEBUG_X27_I1" comment="Debug bus."/>
    <register addr="5032033c" rw_flags="R" width="2" name="MAC_DEBUG_X28_I1" comment="Debug bus."/>
    <register addr="50320340" rw_flags="R" width="2" name="MAC_DEBUG_X29_I1" comment="Debug bus."/>
    <register addr="50320344" rw_flags="R" width="2" name="MAC_DEBUG_X2A_I1" comment="Debug bus."/>
    <register addr="50320348" rw_flags="R" width="2" name="MAC_DEBUG_X2B_I1" comment="Debug bus."/>
    <register addr="5032034c" rw_flags="R" width="2" name="MAC_DEBUG_X2C_I1" comment="Debug bus."/>
    <register addr="50320350" rw_flags="R" width="2" name="MAC_DEBUG_X2D_I1" comment="Debug bus."/>
    <register addr="50320354" rw_flags="R" width="2" name="MAC_DEBUG_X2E_I1" comment="Debug bus."/>
    <register addr="50320358" rw_flags="R" width="2" name="MAC_DEBUG_X2F_I1" comment="Debug bus."/>
    <register addr="5032035c" rw_flags="R" width="2" name="MAC_DEBUG_X30_I1" comment="Debug bus."/>
    <register addr="50320360" rw_flags="R" width="2" name="MAC_DEBUG_X31_I1" comment="Debug bus."/>
    <register addr="50320364" rw_flags="R" width="2" name="MAC_DEBUG_X32_I1" comment="Debug bus."/>
    <register addr="50320368" rw_flags="R" width="2" name="MAC_DEBUG_X33_I1" comment="Debug bus."/>
    <register addr="5032036c" rw_flags="R" width="2" name="MAC_DEBUG_X34_I1" comment="Debug bus."/>
    <register addr="50320370" rw_flags="R" width="2" name="MAC_DEBUG_X35_I1" comment="Debug bus."/>
    <register addr="50320374" rw_flags="R" width="2" name="MAC_DEBUG_X36_I1" comment="Debug bus."/>
    <register addr="50320378" rw_flags="R" width="2" name="MAC_DEBUG_X37_I1" comment="Debug bus."/>
    <register addr="5032037c" rw_flags="R" width="1" name="MAC_SM_STATE_PHY_INTERFACE_I1" comment="State of state machine."/>
    <register addr="50320380" rw_flags="R" width="1" name="MAC_SM_STATE_VALIDATE_MPDU_I1" comment="State of state machine."/>
    <register addr="50320384" rw_flags="R" width="1" name="MAC_SM_STATE_FILTER_MPDU_I1" comment="State of state machine."/>
    <register addr="50320388" rw_flags="R" width="1" name="MAC_SM_STATE_DEFRAGMENT_I1" comment="State of state machine."/>
    <register addr="5032038c" rw_flags="R" width="1" name="MAC_SM_STATE_RX_COORDINATION_I1" comment="State of state machine."/>
    <register addr="50320390" rw_flags="R" width="1" name="MAC_SM_STATE_CHANNEL_STATE_I1" comment="State of state machine."/>
    <register addr="50320394" rw_flags="R" width="1" name="MAC_SM_STATE_BACKOFF_BE_I1" comment="State of state machine."/>
    <register addr="50320398" rw_flags="R" width="1" name="MAC_SM_STATE_BACKOFF_BK_I1" comment="State of state machine."/>
    <register addr="5032039c" rw_flags="R" width="1" name="MAC_SM_STATE_BACKOFF_VI_I1" comment="State of state machine."/>
    <register addr="503203a0" rw_flags="R" width="1" name="MAC_SM_STATE_BACKOFF_VO_I1" comment="State of state machine."/>
    <register addr="503203a4" rw_flags="R" width="1" name="MAC_SM_STATE_DATA_PUMP_I1" comment="State of state machine."/>
    <register addr="503203a8" rw_flags="R" width="1" name="MAC_SM_STATE_TX_COORDINATION_I1" comment="State of state machine."/>
    <register addr="503203ac" rw_flags="R" width="1" name="MAC_SM_STATE_TX_AGGREGATION_I1" comment="State of state machine."/>
    <register addr="503203b0" rw_flags="R" width="1" name="MAC_SM_STATE_RX_DEAGGREGATION_I1" comment="State of state machine."/>
    <register addr="503203b4" rw_flags="R" width="4" name="MAC_RX_LAST_MODEMA_I1" comment="Time of last A modem start of packet."/>
    <register addr="503203b8" rw_flags="R" width="4" name="MAC_RX_LAST_MODEMB_I1" comment="Time of last B modem start of packet."/>
    <register addr="503203bc" rw_flags="R" width="4" name="PDU_LAST_CBR_REQ_I1" comment="Time of last TX request on the CBR queue."/>
    <register addr="503203c0" rw_flags="RW" width="4" name="MAC_BA_RX_0_PEER_ADDRESS_LSB_I1" comment="BA RX 0 peer address [31:0]"/>
    <register addr="503203c4" rw_flags="RW" width="2" name="MAC_BA_RX_0_PEER_ADDRESS_MSB_I1" comment="BA RX 0 peer address [47:32]"/>
    <register addr="503203c8" rw_flags="RW" width="4" name="MAC_BA_RX_0_CONFIG_I1" comment="BA RX 0 configuration"/>
    <register addr="503203cc" rw_flags="RW" width="4" name="MAC_BA_RX_1_PEER_ADDRESS_LSB_I1" comment="BA RX 1 peer address [31:0]"/>
    <register addr="503203d0" rw_flags="RW" width="2" name="MAC_BA_RX_1_PEER_ADDRESS_MSB_I1" comment="BA RX 1 peer address [47:32]"/>
    <register addr="503203d4" rw_flags="RW" width="4" name="MAC_BA_RX_1_CONFIG_I1" comment="BA RX 1 configuration"/>
    <register addr="503203d8" rw_flags="RW" width="4" name="MAC_BA_RX_2_PEER_ADDRESS_LSB_I1" comment="BA RX 2 peer address [31:0]"/>
    <register addr="503203dc" rw_flags="RW" width="2" name="MAC_BA_RX_2_PEER_ADDRESS_MSB_I1" comment="BA RX 2 peer address [47:32]"/>
    <register addr="503203e0" rw_flags="RW" width="4" name="MAC_BA_RX_2_CONFIG_I1" comment="BA RX 2 configuration"/>
    <register addr="503203e4" rw_flags="RW" width="4" name="MAC_BA_RX_3_PEER_ADDRESS_LSB_I1" comment="BA RX 3 peer address [31:0]"/>
    <register addr="503203e8" rw_flags="RW" width="2" name="MAC_BA_RX_3_PEER_ADDRESS_MSB_I1" comment="BA RX 3 peer address [47:32]"/>
    <register addr="503203ec" rw_flags="RW" width="4" name="MAC_BA_RX_3_CONFIG_I1" comment="BA RX 3 configuration"/>
    <register addr="503203f0" rw_flags="RW" width="4" name="MAC_BA_RX_4_PEER_ADDRESS_LSB_I1" comment="BA RX 4 peer address [31:0]"/>
    <register addr="503203f4" rw_flags="RW" width="2" name="MAC_BA_RX_4_PEER_ADDRESS_MSB_I1" comment="BA RX 4 peer address [47:32]"/>
    <register addr="503203f8" rw_flags="RW" width="4" name="MAC_BA_RX_4_CONFIG_I1" comment="BA RX 4 configuration"/>
    <register addr="503203fc" rw_flags="RW" width="4" name="MAC_BA_RX_5_PEER_ADDRESS_LSB_I1" comment="BA RX 5 peer address [31:0]"/>
    <register addr="50320400" rw_flags="RW" width="2" name="MAC_BA_RX_5_PEER_ADDRESS_MSB_I1" comment="BA RX 5 peer address [47:32]"/>
    <register addr="50320404" rw_flags="RW" width="4" name="MAC_BA_RX_5_CONFIG_I1" comment="BA RX 5 configuration"/>
    <register addr="50320408" rw_flags="RW" width="4" name="MAC_BA_RX_6_PEER_ADDRESS_LSB_I1" comment="BA RX 6 peer address [31:0]"/>
    <register addr="5032040c" rw_flags="RW" width="2" name="MAC_BA_RX_6_PEER_ADDRESS_MSB_I1" comment="BA RX 6 peer address [47:32]"/>
    <register addr="50320410" rw_flags="RW" width="4" name="MAC_BA_RX_6_CONFIG_I1" comment="BA RX 6 configuration"/>
    <register addr="50320414" rw_flags="RW" width="4" name="MAC_BA_RX_7_PEER_ADDRESS_LSB_I1" comment="BA RX 7 peer address [31:0]"/>
    <register addr="50320418" rw_flags="RW" width="2" name="MAC_BA_RX_7_PEER_ADDRESS_MSB_I1" comment="BA RX 7 peer address [47:32]"/>
    <register addr="5032041c" rw_flags="RW" width="4" name="MAC_BA_RX_7_CONFIG_I1" comment="BA RX 7 configuration"/>
    <register addr="50320420" rw_flags="RW" width="4" name="MAC_BA_RX_CONFIG_BITMAP_LSB_I1" comment="Global bitmap value loaded into every BA RX instance when they are initialised. Can be used for interop recovery. [31:0]"/>
    <register addr="50320424" rw_flags="RW" width="4" name="MAC_BA_RX_CONFIG_BITMAP_MSB_I1" comment="Global bitmap value loaded into every BA RX instance when they are initialised. Can be used for interop recovery. [63:32]"/>
    <register addr="50320428" rw_flags="R" width="4" name="MAC_BA_RX_BITMAP_LSB_I1" comment="Current BA RX bitmap from the selected instance. [31:0]"/>
    <register addr="5032042c" rw_flags="R" width="4" name="MAC_BA_RX_BITMAP_MSB_I1" comment="Current BA RX bitmap from the selected instance. [61:32]"/>
    <register addr="50320430" rw_flags="RW" width="1" name="MAC_BA_RX_BITMAP_SELECT_I1" comment="Select which BA RX instance has its bitmap readable on MAC_BA_RX_BITMAP."/>
    <register addr="50320434" rw_flags="RW" width="1" name="MAC_CHANGE_NAV_SOURCE_I1" comment="NAV Source"/>
    <register addr="50320438" rw_flags="RW" width="4" name="MAC_CHANGE_NAV_BSSID_LSB_I1" comment="BSSID [31:0]"/>
    <register addr="5032043c" rw_flags="RW" width="2" name="MAC_CHANGE_NAV_BSSID_MSB_I1" comment="BSSID [47:32]"/>
    <register addr="50320440" rw_flags="RW" width="4" name="MAC_CHANGE_NAV_END_I1" comment="NAV End"/>
    <register addr="50320444" rw_flags="RW" width="2" name="MAC_CHANGE_STATE_I1" comment="Change internal states"/>
  </block>
  <block name="wl_mac_acc_fast_0" comment="">
    <register addr="50230000" rw_flags="R" width="4" name="MAC_ACC_STATUS_I0" comment="MAC Accerator status"/>
    <register addr="50230004" rw_flags="R" width="2" name="MAC_IND_MAC_FLAGS_I0" comment="MAC status register"/>
    <register addr="50230008" rw_flags="R" width="4" name="MAC_NO_ACK_COUNT_I0" comment="Counts correctly received frames that are not acknowledged because the MAC_IF is short of available receive slots."/>
    <register addr="5023000c" rw_flags="RW" width="1" name="MAC_PAUSE_TX_QUEUES_I0" comment="Pause Tx queues if they are paused."/>
    <register addr="50230010" rw_flags="RW" width="1" name="MAC_UNPAUSE_TX_QUEUES_I0" comment="Unpause Tx queues if they are paused."/>
    <register addr="50230014" rw_flags="R" width="4" name="MAC_TIME_I0" comment="Current time."/>
    <register addr="50230018" rw_flags="RW" width="4" name="MAC_TIMER_I0" comment="MAC timer can be used by firmware to generate interrupts when the accelerator's time reaches programmable values. This is can be used to achieved timed transmission."/>
    <register addr="5023001c" rw_flags="RW" width="2" name="MAC_CTRL_MAC_FLAGS_I0" comment="Flags [Configuration bits] register 1"/>
    <register addr="50230020" rw_flags="RW" width="1" name="MAC_BFEE_FLAGS_I0" comment="Flags [Configuration bits] register 1"/>
    <register addr="50230024" rw_flags="RW" width="4" name="BFER_MAC_ADDRESS_BYTE3_0_I0" comment="The MAC ACC will respond to BF report polls coming from this peer."/>
    <register addr="50230028" rw_flags="RW" width="2" name="BFER_MAC_ADDRESS_BYTE5_4_I0" comment="The MAC ACC will respond to BF report polls coming from this peer."/>
    <register addr="5023002c" rw_flags="RW" width="4" name="BFEE_MAC_ADDRESS_BYTE3_0_I0" comment="The MAC ACC will tell the PHY to beamform any transmission made to this peer."/>
    <register addr="50230030" rw_flags="RW" width="2" name="BFEE_MAC_ADDRESS_BYTE5_4_I0" comment="The MAC ACC will tell the PHY to beamform any transmission made to this peer."/>
    <register addr="50230034" rw_flags="R" width="1" name="MAC_INT_ERROR_CAUSE_I0" comment="Cause of error in MAC_INT_ERROR"/>
    <register addr="50230038" rw_flags="R" width="1" name="MAC_INT_TX_DENIED_CAUSE_I0" comment="Cause of error in MAC_INT_TX_DENIED"/>
    <register addr="5023003c" rw_flags="R" width="4" name="MAC_INT_CAUSE_I0" comment="Interrupt cause register."/>
    <register addr="50230040" rw_flags="R" width="4" name="MAC_BA_TX_BITMAP_LSB_I0" comment="BA TX bitmap bits 31 down to 0"/>
    <register addr="50230044" rw_flags="R" width="4" name="MAC_BA_TX_BITMAP_MSB_I0" comment="BA TX bitmap bits 63 down to 32"/>
    <register addr="50230048" rw_flags="R" width="4" name="MAC_BA_TX_STATUS_I0" comment="BA TX status information"/>
    <register addr="5023004c" rw_flags="RW" width="4" name="MAC_INT_MASK_I0" comment="Interrupt mask register."/>
    <register addr="50230050" rw_flags="RW" width="4" name="MAC_INT_CLEAR_I0" comment="Interrupt clear register"/>
    <register addr="50230054" rw_flags="RW" width="4" name="MAC_TX_DEADLINE_I0" comment="Sets the transmit deadline with respect to time."/>
    <register addr="50230058" rw_flags="R" width="4" name="MAC_BE_BK_BKOFF_COUNTER_I0" comment="BE and BK backoff counter"/>
    <register addr="5023005c" rw_flags="R" width="4" name="MAC_VO_VI_BKOFF_COUNTER_I0" comment="VO and VI backoff counter"/>
    <register addr="50230060" rw_flags="RW" width="2" name="MAC_BA_TX_MMSS_I0" comment="Sets A-MPDU TX minimum MPDU start spacing in words."/>
    <register addr="50230064" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[0]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230068" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[1]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="5023006c" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[2]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230070" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[3]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230074" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[4]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230078" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[5]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="5023007c" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[6]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230080" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[7]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230084" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[8]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230088" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[9]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="5023008c" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[10]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230090" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[11]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230094" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[12]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230098" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[13]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="5023009c" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[14]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300a0" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[15]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300a4" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[16]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300a8" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[17]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300ac" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[18]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300b0" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[19]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300b4" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[20]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300b8" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[21]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300bc" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[22]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300c0" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[23]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300c4" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[24]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300c8" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[25]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300cc" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[26]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300d0" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[27]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300d4" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[28]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300d8" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[29]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300dc" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[30]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300e0" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[31]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300e4" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[32]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300e8" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[33]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300ec" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[34]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300f0" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[35]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300f4" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[36]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300f8" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[37]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="502300fc" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[38]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230100" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[39]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230104" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[40]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230108" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[41]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="5023010c" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[42]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230110" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[43]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230114" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[44]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230118" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[45]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="5023011c" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[46]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230120" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[47]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230124" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[48]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230128" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[49]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="5023012c" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[50]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230130" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[51]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230134" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[52]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230138" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[53]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="5023013c" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[54]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230140" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[55]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230144" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[56]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230148" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[57]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="5023014c" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[58]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230150" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[59]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230154" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[60]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230158" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[61]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="5023015c" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[62]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230160" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I0[63]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50230164" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[0]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230168" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[1]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="5023016c" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[2]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230170" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[3]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230174" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[4]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230178" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[5]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="5023017c" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[6]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230180" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[7]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230184" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[8]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230188" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[9]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="5023018c" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[10]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230190" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[11]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230194" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[12]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230198" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[13]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="5023019c" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[14]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301a0" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[15]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301a4" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[16]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301a8" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[17]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301ac" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[18]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301b0" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[19]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301b4" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[20]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301b8" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[21]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301bc" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[22]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301c0" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[23]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301c4" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[24]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301c8" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[25]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301cc" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[26]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301d0" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[27]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301d4" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[28]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301d8" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[29]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301dc" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[30]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301e0" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[31]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301e4" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[32]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301e8" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[33]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301ec" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[34]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301f0" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[35]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301f4" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[36]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301f8" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[37]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="502301fc" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[38]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230200" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[39]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230204" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[40]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230208" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[41]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="5023020c" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[42]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230210" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[43]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230214" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[44]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230218" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[45]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="5023021c" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[46]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230220" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[47]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230224" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[48]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230228" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[49]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="5023022c" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[50]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230230" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[51]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230234" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[52]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230238" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[53]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="5023023c" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[54]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230240" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[55]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230244" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[56]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230248" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[57]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="5023024c" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[58]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230250" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[59]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230254" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[60]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230258" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[61]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="5023025c" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[62]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230260" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I0[63]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50230264" rw_flags="RW" width="2" name="MAC_PDU_CANCEL_I0" comment="PDU cancel bitmap"/>
    <register addr="50230268" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_CBR_ADDR_I0" comment="PDU on CBR queue: Start address"/>
    <register addr="5023026c" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_CBR_ID_LEN_I0" comment="PDU on CBR queue: VHT Group ID and Partial AID, and Length"/>
    <register addr="50230270" rw_flags="RW" width="2" name="MAC_PDU_REQUEST_CBR_TX_RATE_I0" comment="PDU on CBR queue: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="50230274" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_CBR_TX_LEVEL_COEX_I0" comment="PDU on CBR queue: TX level and Coex"/>
    <register addr="50230278" rw_flags="R" width="1" name="MAC_PDU_CBR_STATUS_I0" comment="CBR status"/>
    <register addr="5023027c" rw_flags="R" width="1" name="MAC_TX_CBR_STATUS_I0" comment="CBR TX status"/>
    <register addr="50230280" rw_flags="R" width="1" name="MAC_TX_RESP_STATUS_I0" comment="Resp TX status"/>
    <register addr="50230284" rw_flags="RW" width="4" name="MAC_PDU_BK_SLOT_BEACON_GEN_TIME_I0[0]" comment="MAC time when the last beacon was generated by firmware."/>
    <register addr="50230288" rw_flags="RW" width="4" name="MAC_PDU_BK_SLOT_BEACON_GEN_TIME_I0[1]" comment="MAC time when the last beacon was generated by firmware."/>
    <register addr="5023028c" rw_flags="RW" width="4" name="MAC_PDU_BK_SLOT_BEACON_GEN_TIME_I0[2]" comment="MAC time when the last beacon was generated by firmware."/>
    <register addr="50230290" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_ADDR_I0[0]" comment="PDU on BK queue, slot 0: Start address"/>
    <register addr="50230294" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_ID_LEN_I0[0]" comment="PDU on BK queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="50230298" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_TX_RATE_I0[0]" comment="PDU on BK queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="5023029c" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_TX_LEVEL_COEX_I0[0]" comment="PDU on BK queue, slot 0: TX level and Coex"/>
    <register addr="502302a0" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_BACKOFF_I0[0]" comment="PDU on BK queue, slot 0: Backoff parameters"/>
    <register addr="502302a4" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_OPTIONS_I0[0]" comment="PDU on BK queue, slot 0: Options"/>
    <register addr="502302a8" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_ADDR_I0[1]" comment="PDU on BK queue, slot 0: Start address"/>
    <register addr="502302ac" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_ID_LEN_I0[1]" comment="PDU on BK queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="502302b0" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_TX_RATE_I0[1]" comment="PDU on BK queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="502302b4" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_TX_LEVEL_COEX_I0[1]" comment="PDU on BK queue, slot 0: TX level and Coex"/>
    <register addr="502302b8" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_BACKOFF_I0[1]" comment="PDU on BK queue, slot 0: Backoff parameters"/>
    <register addr="502302bc" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_OPTIONS_I0[1]" comment="PDU on BK queue, slot 0: Options"/>
    <register addr="502302c0" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_ADDR_I0[2]" comment="PDU on BK queue, slot 0: Start address"/>
    <register addr="502302c4" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_ID_LEN_I0[2]" comment="PDU on BK queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="502302c8" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_TX_RATE_I0[2]" comment="PDU on BK queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="502302cc" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_TX_LEVEL_COEX_I0[2]" comment="PDU on BK queue, slot 0: TX level and Coex"/>
    <register addr="502302d0" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_BACKOFF_I0[2]" comment="PDU on BK queue, slot 0: Backoff parameters"/>
    <register addr="502302d4" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_OPTIONS_I0[2]" comment="PDU on BK queue, slot 0: Options"/>
    <register addr="502302d8" rw_flags="R" width="4" name="MAC_PDU_BK_STATUS_I0" comment="BK status"/>
    <register addr="502302dc" rw_flags="R" width="4" name="MAC_TX_BK_STATUS_I0" comment="BK TX status from the PHY"/>
    <register addr="502302e0" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_ADDR_I0[0]" comment="PDU on BE queue, slot 0: Start address"/>
    <register addr="502302e4" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_ID_LEN_I0[0]" comment="PDU on BE queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="502302e8" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_TX_RATE_I0[0]" comment="PDU on BE queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="502302ec" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_TX_LEVEL_COEX_I0[0]" comment="PDU on BE queue, slot 0: TX level and Coex"/>
    <register addr="502302f0" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_BACKOFF_I0[0]" comment="PDU on BE queue, slot 0: Backoff parameters"/>
    <register addr="502302f4" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_OPTIONS_I0[0]" comment="PDU on BE queue, slot 0: Options"/>
    <register addr="502302f8" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_ADDR_I0[1]" comment="PDU on BE queue, slot 0: Start address"/>
    <register addr="502302fc" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_ID_LEN_I0[1]" comment="PDU on BE queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="50230300" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_TX_RATE_I0[1]" comment="PDU on BE queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="50230304" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_TX_LEVEL_COEX_I0[1]" comment="PDU on BE queue, slot 0: TX level and Coex"/>
    <register addr="50230308" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_BACKOFF_I0[1]" comment="PDU on BE queue, slot 0: Backoff parameters"/>
    <register addr="5023030c" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_OPTIONS_I0[1]" comment="PDU on BE queue, slot 0: Options"/>
    <register addr="50230310" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_ADDR_I0[2]" comment="PDU on BE queue, slot 0: Start address"/>
    <register addr="50230314" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_ID_LEN_I0[2]" comment="PDU on BE queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="50230318" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_TX_RATE_I0[2]" comment="PDU on BE queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="5023031c" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_TX_LEVEL_COEX_I0[2]" comment="PDU on BE queue, slot 0: TX level and Coex"/>
    <register addr="50230320" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_BACKOFF_I0[2]" comment="PDU on BE queue, slot 0: Backoff parameters"/>
    <register addr="50230324" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_OPTIONS_I0[2]" comment="PDU on BE queue, slot 0: Options"/>
    <register addr="50230328" rw_flags="R" width="4" name="MAC_PDU_BE_STATUS_I0" comment="BE status"/>
    <register addr="5023032c" rw_flags="R" width="4" name="MAC_TX_BE_STATUS_I0" comment="BE TX status"/>
    <register addr="50230330" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_ADDR_I0[0]" comment="PDU on VI queue, slot 0: Start address"/>
    <register addr="50230334" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_ID_LEN_I0[0]" comment="PDU on VI queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="50230338" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_TX_RATE_I0[0]" comment="PDU on VI queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="5023033c" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_TX_LEVEL_COEX_I0[0]" comment="PDU on VI queue, slot 0: TX level and Coex"/>
    <register addr="50230340" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_BACKOFF_I0[0]" comment="PDU on VI queue, slot 0: Backoff parameters"/>
    <register addr="50230344" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_OPTIONS_I0[0]" comment="PDU on VI queue, slot 0: Options"/>
    <register addr="50230348" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_ADDR_I0[1]" comment="PDU on VI queue, slot 0: Start address"/>
    <register addr="5023034c" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_ID_LEN_I0[1]" comment="PDU on VI queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="50230350" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_TX_RATE_I0[1]" comment="PDU on VI queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="50230354" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_TX_LEVEL_COEX_I0[1]" comment="PDU on VI queue, slot 0: TX level and Coex"/>
    <register addr="50230358" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_BACKOFF_I0[1]" comment="PDU on VI queue, slot 0: Backoff parameters"/>
    <register addr="5023035c" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_OPTIONS_I0[1]" comment="PDU on VI queue, slot 0: Options"/>
    <register addr="50230360" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_ADDR_I0[2]" comment="PDU on VI queue, slot 0: Start address"/>
    <register addr="50230364" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_ID_LEN_I0[2]" comment="PDU on VI queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="50230368" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_TX_RATE_I0[2]" comment="PDU on VI queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="5023036c" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_TX_LEVEL_COEX_I0[2]" comment="PDU on VI queue, slot 0: TX level and Coex"/>
    <register addr="50230370" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_BACKOFF_I0[2]" comment="PDU on VI queue, slot 0: Backoff parameters"/>
    <register addr="50230374" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_OPTIONS_I0[2]" comment="PDU on VI queue, slot 0: Options"/>
    <register addr="50230378" rw_flags="R" width="4" name="MAC_PDU_VI_STATUS_I0" comment="VI status"/>
    <register addr="5023037c" rw_flags="R" width="4" name="MAC_TX_VI_STATUS_I0" comment="VI TX status"/>
    <register addr="50230380" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_ADDR_I0[0]" comment="PDU on VO queue, slot 0: Start address"/>
    <register addr="50230384" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_ID_LEN_I0[0]" comment="PDU on VO queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="50230388" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_TX_RATE_I0[0]" comment="PDU on VO queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="5023038c" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_TX_LEVEL_COEX_I0[0]" comment="PDU on VO queue, slot 0: TX level and Coex"/>
    <register addr="50230390" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_BACKOFF_I0[0]" comment="PDU on VO queue, slot 0: Backoff parameters"/>
    <register addr="50230394" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_OPTIONS_I0[0]" comment="PDU on VO queue, slot 0: Options"/>
    <register addr="50230398" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_ADDR_I0[1]" comment="PDU on VO queue, slot 0: Start address"/>
    <register addr="5023039c" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_ID_LEN_I0[1]" comment="PDU on VO queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="502303a0" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_TX_RATE_I0[1]" comment="PDU on VO queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="502303a4" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_TX_LEVEL_COEX_I0[1]" comment="PDU on VO queue, slot 0: TX level and Coex"/>
    <register addr="502303a8" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_BACKOFF_I0[1]" comment="PDU on VO queue, slot 0: Backoff parameters"/>
    <register addr="502303ac" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_OPTIONS_I0[1]" comment="PDU on VO queue, slot 0: Options"/>
    <register addr="502303b0" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_ADDR_I0[2]" comment="PDU on VO queue, slot 0: Start address"/>
    <register addr="502303b4" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_ID_LEN_I0[2]" comment="PDU on VO queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="502303b8" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_TX_RATE_I0[2]" comment="PDU on VO queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="502303bc" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_TX_LEVEL_COEX_I0[2]" comment="PDU on VO queue, slot 0: TX level and Coex"/>
    <register addr="502303c0" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_BACKOFF_I0[2]" comment="PDU on VO queue, slot 0: Backoff parameters"/>
    <register addr="502303c4" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_OPTIONS_I0[2]" comment="PDU on VO queue, slot 0: Options"/>
    <register addr="502303c8" rw_flags="R" width="4" name="MAC_PDU_VO_STATUS_I0" comment="VO status"/>
    <register addr="502303cc" rw_flags="R" width="4" name="MAC_TX_VO_STATUS_I0" comment="VO TX status"/>
  </block>
  <block name="wl_mac_acc_fast_1" comment="">
    <register addr="50330000" rw_flags="R" width="4" name="MAC_ACC_STATUS_I1" comment="MAC Accerator status"/>
    <register addr="50330004" rw_flags="R" width="2" name="MAC_IND_MAC_FLAGS_I1" comment="MAC status register"/>
    <register addr="50330008" rw_flags="R" width="4" name="MAC_NO_ACK_COUNT_I1" comment="Counts correctly received frames that are not acknowledged because the MAC_IF is short of available receive slots."/>
    <register addr="5033000c" rw_flags="RW" width="1" name="MAC_PAUSE_TX_QUEUES_I1" comment="Pause Tx queues if they are paused."/>
    <register addr="50330010" rw_flags="RW" width="1" name="MAC_UNPAUSE_TX_QUEUES_I1" comment="Unpause Tx queues if they are paused."/>
    <register addr="50330014" rw_flags="R" width="4" name="MAC_TIME_I1" comment="Current time."/>
    <register addr="50330018" rw_flags="RW" width="4" name="MAC_TIMER_I1" comment="MAC timer can be used by firmware to generate interrupts when the accelerator's time reaches programmable values. This is can be used to achieved timed transmission."/>
    <register addr="5033001c" rw_flags="RW" width="2" name="MAC_CTRL_MAC_FLAGS_I1" comment="Flags [Configuration bits] register 1"/>
    <register addr="50330020" rw_flags="RW" width="1" name="MAC_BFEE_FLAGS_I1" comment="Flags [Configuration bits] register 1"/>
    <register addr="50330024" rw_flags="RW" width="4" name="BFER_MAC_ADDRESS_BYTE3_0_I1" comment="The MAC ACC will respond to BF report polls coming from this peer."/>
    <register addr="50330028" rw_flags="RW" width="2" name="BFER_MAC_ADDRESS_BYTE5_4_I1" comment="The MAC ACC will respond to BF report polls coming from this peer."/>
    <register addr="5033002c" rw_flags="RW" width="4" name="BFEE_MAC_ADDRESS_BYTE3_0_I1" comment="The MAC ACC will tell the PHY to beamform any transmission made to this peer."/>
    <register addr="50330030" rw_flags="RW" width="2" name="BFEE_MAC_ADDRESS_BYTE5_4_I1" comment="The MAC ACC will tell the PHY to beamform any transmission made to this peer."/>
    <register addr="50330034" rw_flags="R" width="1" name="MAC_INT_ERROR_CAUSE_I1" comment="Cause of error in MAC_INT_ERROR"/>
    <register addr="50330038" rw_flags="R" width="1" name="MAC_INT_TX_DENIED_CAUSE_I1" comment="Cause of error in MAC_INT_TX_DENIED"/>
    <register addr="5033003c" rw_flags="R" width="4" name="MAC_INT_CAUSE_I1" comment="Interrupt cause register."/>
    <register addr="50330040" rw_flags="R" width="4" name="MAC_BA_TX_BITMAP_LSB_I1" comment="BA TX bitmap bits 31 down to 0"/>
    <register addr="50330044" rw_flags="R" width="4" name="MAC_BA_TX_BITMAP_MSB_I1" comment="BA TX bitmap bits 63 down to 32"/>
    <register addr="50330048" rw_flags="R" width="4" name="MAC_BA_TX_STATUS_I1" comment="BA TX status information"/>
    <register addr="5033004c" rw_flags="RW" width="4" name="MAC_INT_MASK_I1" comment="Interrupt mask register."/>
    <register addr="50330050" rw_flags="RW" width="4" name="MAC_INT_CLEAR_I1" comment="Interrupt clear register"/>
    <register addr="50330054" rw_flags="RW" width="4" name="MAC_TX_DEADLINE_I1" comment="Sets the transmit deadline with respect to time."/>
    <register addr="50330058" rw_flags="R" width="4" name="MAC_BE_BK_BKOFF_COUNTER_I1" comment="BE and BK backoff counter"/>
    <register addr="5033005c" rw_flags="R" width="4" name="MAC_VO_VI_BKOFF_COUNTER_I1" comment="VO and VI backoff counter"/>
    <register addr="50330060" rw_flags="RW" width="2" name="MAC_BA_TX_MMSS_I1" comment="Sets A-MPDU TX minimum MPDU start spacing in words."/>
    <register addr="50330064" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[0]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330068" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[1]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="5033006c" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[2]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330070" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[3]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330074" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[4]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330078" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[5]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="5033007c" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[6]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330080" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[7]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330084" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[8]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330088" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[9]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="5033008c" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[10]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330090" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[11]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330094" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[12]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330098" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[13]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="5033009c" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[14]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300a0" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[15]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300a4" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[16]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300a8" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[17]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300ac" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[18]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300b0" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[19]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300b4" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[20]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300b8" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[21]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300bc" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[22]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300c0" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[23]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300c4" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[24]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300c8" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[25]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300cc" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[26]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300d0" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[27]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300d4" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[28]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300d8" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[29]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300dc" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[30]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300e0" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[31]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300e4" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[32]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300e8" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[33]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300ec" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[34]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300f0" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[35]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300f4" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[36]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300f8" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[37]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="503300fc" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[38]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330100" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[39]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330104" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[40]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330108" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[41]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="5033010c" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[42]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330110" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[43]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330114" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[44]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330118" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[45]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="5033011c" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[46]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330120" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[47]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330124" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[48]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330128" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[49]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="5033012c" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[50]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330130" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[51]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330134" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[52]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330138" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[53]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="5033013c" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[54]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330140" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[55]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330144" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[56]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330148" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[57]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="5033014c" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[58]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330150" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[59]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330154" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[60]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330158" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[61]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="5033015c" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[62]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330160" rw_flags="RW" width="2" name="MAC_A_MPDU_TX_LEN_I1[63]" comment="Length (minus FCS) of MPDU in an A-MPDU."/>
    <register addr="50330164" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[0]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330168" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[1]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="5033016c" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[2]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330170" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[3]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330174" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[4]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330178" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[5]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="5033017c" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[6]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330180" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[7]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330184" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[8]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330188" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[9]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="5033018c" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[10]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330190" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[11]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330194" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[12]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330198" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[13]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="5033019c" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[14]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301a0" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[15]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301a4" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[16]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301a8" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[17]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301ac" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[18]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301b0" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[19]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301b4" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[20]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301b8" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[21]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301bc" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[22]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301c0" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[23]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301c4" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[24]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301c8" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[25]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301cc" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[26]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301d0" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[27]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301d4" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[28]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301d8" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[29]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301dc" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[30]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301e0" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[31]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301e4" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[32]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301e8" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[33]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301ec" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[34]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301f0" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[35]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301f4" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[36]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301f8" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[37]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="503301fc" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[38]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330200" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[39]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330204" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[40]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330208" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[41]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="5033020c" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[42]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330210" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[43]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330214" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[44]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330218" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[45]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="5033021c" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[46]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330220" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[47]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330224" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[48]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330228" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[49]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="5033022c" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[50]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330230" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[51]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330234" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[52]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330238" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[53]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="5033023c" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[54]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330240" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[55]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330244" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[56]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330248" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[57]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="5033024c" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[58]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330250" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[59]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330254" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[60]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330258" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[61]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="5033025c" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[62]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330260" rw_flags="RW" width="4" name="MAC_A_MPDU_TX_ADDR_I1[63]" comment="Start address of MPDU in an A-MPDU."/>
    <register addr="50330264" rw_flags="RW" width="2" name="MAC_PDU_CANCEL_I1" comment="PDU cancel bitmap"/>
    <register addr="50330268" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_CBR_ADDR_I1" comment="PDU on CBR queue: Start address"/>
    <register addr="5033026c" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_CBR_ID_LEN_I1" comment="PDU on CBR queue: VHT Group ID and Partial AID, and Length"/>
    <register addr="50330270" rw_flags="RW" width="2" name="MAC_PDU_REQUEST_CBR_TX_RATE_I1" comment="PDU on CBR queue: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="50330274" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_CBR_TX_LEVEL_COEX_I1" comment="PDU on CBR queue: TX level and Coex"/>
    <register addr="50330278" rw_flags="R" width="1" name="MAC_PDU_CBR_STATUS_I1" comment="CBR status"/>
    <register addr="5033027c" rw_flags="R" width="1" name="MAC_TX_CBR_STATUS_I1" comment="CBR TX status"/>
    <register addr="50330280" rw_flags="R" width="1" name="MAC_TX_RESP_STATUS_I1" comment="Resp TX status"/>
    <register addr="50330284" rw_flags="RW" width="4" name="MAC_PDU_BK_SLOT_BEACON_GEN_TIME_I1[0]" comment="MAC time when the last beacon was generated by firmware."/>
    <register addr="50330288" rw_flags="RW" width="4" name="MAC_PDU_BK_SLOT_BEACON_GEN_TIME_I1[1]" comment="MAC time when the last beacon was generated by firmware."/>
    <register addr="5033028c" rw_flags="RW" width="4" name="MAC_PDU_BK_SLOT_BEACON_GEN_TIME_I1[2]" comment="MAC time when the last beacon was generated by firmware."/>
    <register addr="50330290" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_ADDR_I1[0]" comment="PDU on BK queue, slot 0: Start address"/>
    <register addr="50330294" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_ID_LEN_I1[0]" comment="PDU on BK queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="50330298" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_TX_RATE_I1[0]" comment="PDU on BK queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="5033029c" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_TX_LEVEL_COEX_I1[0]" comment="PDU on BK queue, slot 0: TX level and Coex"/>
    <register addr="503302a0" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_BACKOFF_I1[0]" comment="PDU on BK queue, slot 0: Backoff parameters"/>
    <register addr="503302a4" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_OPTIONS_I1[0]" comment="PDU on BK queue, slot 0: Options"/>
    <register addr="503302a8" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_ADDR_I1[1]" comment="PDU on BK queue, slot 0: Start address"/>
    <register addr="503302ac" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_ID_LEN_I1[1]" comment="PDU on BK queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="503302b0" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_TX_RATE_I1[1]" comment="PDU on BK queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="503302b4" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_TX_LEVEL_COEX_I1[1]" comment="PDU on BK queue, slot 0: TX level and Coex"/>
    <register addr="503302b8" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_BACKOFF_I1[1]" comment="PDU on BK queue, slot 0: Backoff parameters"/>
    <register addr="503302bc" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_OPTIONS_I1[1]" comment="PDU on BK queue, slot 0: Options"/>
    <register addr="503302c0" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_ADDR_I1[2]" comment="PDU on BK queue, slot 0: Start address"/>
    <register addr="503302c4" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_ID_LEN_I1[2]" comment="PDU on BK queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="503302c8" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_TX_RATE_I1[2]" comment="PDU on BK queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="503302cc" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_TX_LEVEL_COEX_I1[2]" comment="PDU on BK queue, slot 0: TX level and Coex"/>
    <register addr="503302d0" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_BACKOFF_I1[2]" comment="PDU on BK queue, slot 0: Backoff parameters"/>
    <register addr="503302d4" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BK_SLOT_OPTIONS_I1[2]" comment="PDU on BK queue, slot 0: Options"/>
    <register addr="503302d8" rw_flags="R" width="4" name="MAC_PDU_BK_STATUS_I1" comment="BK status"/>
    <register addr="503302dc" rw_flags="R" width="4" name="MAC_TX_BK_STATUS_I1" comment="BK TX status from the PHY"/>
    <register addr="503302e0" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_ADDR_I1[0]" comment="PDU on BE queue, slot 0: Start address"/>
    <register addr="503302e4" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_ID_LEN_I1[0]" comment="PDU on BE queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="503302e8" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_TX_RATE_I1[0]" comment="PDU on BE queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="503302ec" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_TX_LEVEL_COEX_I1[0]" comment="PDU on BE queue, slot 0: TX level and Coex"/>
    <register addr="503302f0" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_BACKOFF_I1[0]" comment="PDU on BE queue, slot 0: Backoff parameters"/>
    <register addr="503302f4" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_OPTIONS_I1[0]" comment="PDU on BE queue, slot 0: Options"/>
    <register addr="503302f8" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_ADDR_I1[1]" comment="PDU on BE queue, slot 0: Start address"/>
    <register addr="503302fc" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_ID_LEN_I1[1]" comment="PDU on BE queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="50330300" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_TX_RATE_I1[1]" comment="PDU on BE queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="50330304" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_TX_LEVEL_COEX_I1[1]" comment="PDU on BE queue, slot 0: TX level and Coex"/>
    <register addr="50330308" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_BACKOFF_I1[1]" comment="PDU on BE queue, slot 0: Backoff parameters"/>
    <register addr="5033030c" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_OPTIONS_I1[1]" comment="PDU on BE queue, slot 0: Options"/>
    <register addr="50330310" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_ADDR_I1[2]" comment="PDU on BE queue, slot 0: Start address"/>
    <register addr="50330314" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_ID_LEN_I1[2]" comment="PDU on BE queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="50330318" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_TX_RATE_I1[2]" comment="PDU on BE queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="5033031c" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_TX_LEVEL_COEX_I1[2]" comment="PDU on BE queue, slot 0: TX level and Coex"/>
    <register addr="50330320" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_BACKOFF_I1[2]" comment="PDU on BE queue, slot 0: Backoff parameters"/>
    <register addr="50330324" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_BE_SLOT_OPTIONS_I1[2]" comment="PDU on BE queue, slot 0: Options"/>
    <register addr="50330328" rw_flags="R" width="4" name="MAC_PDU_BE_STATUS_I1" comment="BE status"/>
    <register addr="5033032c" rw_flags="R" width="4" name="MAC_TX_BE_STATUS_I1" comment="BE TX status"/>
    <register addr="50330330" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_ADDR_I1[0]" comment="PDU on VI queue, slot 0: Start address"/>
    <register addr="50330334" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_ID_LEN_I1[0]" comment="PDU on VI queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="50330338" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_TX_RATE_I1[0]" comment="PDU on VI queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="5033033c" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_TX_LEVEL_COEX_I1[0]" comment="PDU on VI queue, slot 0: TX level and Coex"/>
    <register addr="50330340" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_BACKOFF_I1[0]" comment="PDU on VI queue, slot 0: Backoff parameters"/>
    <register addr="50330344" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_OPTIONS_I1[0]" comment="PDU on VI queue, slot 0: Options"/>
    <register addr="50330348" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_ADDR_I1[1]" comment="PDU on VI queue, slot 0: Start address"/>
    <register addr="5033034c" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_ID_LEN_I1[1]" comment="PDU on VI queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="50330350" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_TX_RATE_I1[1]" comment="PDU on VI queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="50330354" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_TX_LEVEL_COEX_I1[1]" comment="PDU on VI queue, slot 0: TX level and Coex"/>
    <register addr="50330358" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_BACKOFF_I1[1]" comment="PDU on VI queue, slot 0: Backoff parameters"/>
    <register addr="5033035c" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_OPTIONS_I1[1]" comment="PDU on VI queue, slot 0: Options"/>
    <register addr="50330360" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_ADDR_I1[2]" comment="PDU on VI queue, slot 0: Start address"/>
    <register addr="50330364" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_ID_LEN_I1[2]" comment="PDU on VI queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="50330368" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_TX_RATE_I1[2]" comment="PDU on VI queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="5033036c" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_TX_LEVEL_COEX_I1[2]" comment="PDU on VI queue, slot 0: TX level and Coex"/>
    <register addr="50330370" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_BACKOFF_I1[2]" comment="PDU on VI queue, slot 0: Backoff parameters"/>
    <register addr="50330374" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VI_SLOT_OPTIONS_I1[2]" comment="PDU on VI queue, slot 0: Options"/>
    <register addr="50330378" rw_flags="R" width="4" name="MAC_PDU_VI_STATUS_I1" comment="VI status"/>
    <register addr="5033037c" rw_flags="R" width="4" name="MAC_TX_VI_STATUS_I1" comment="VI TX status"/>
    <register addr="50330380" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_ADDR_I1[0]" comment="PDU on VO queue, slot 0: Start address"/>
    <register addr="50330384" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_ID_LEN_I1[0]" comment="PDU on VO queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="50330388" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_TX_RATE_I1[0]" comment="PDU on VO queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="5033038c" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_TX_LEVEL_COEX_I1[0]" comment="PDU on VO queue, slot 0: TX level and Coex"/>
    <register addr="50330390" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_BACKOFF_I1[0]" comment="PDU on VO queue, slot 0: Backoff parameters"/>
    <register addr="50330394" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_OPTIONS_I1[0]" comment="PDU on VO queue, slot 0: Options"/>
    <register addr="50330398" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_ADDR_I1[1]" comment="PDU on VO queue, slot 0: Start address"/>
    <register addr="5033039c" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_ID_LEN_I1[1]" comment="PDU on VO queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="503303a0" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_TX_RATE_I1[1]" comment="PDU on VO queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="503303a4" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_TX_LEVEL_COEX_I1[1]" comment="PDU on VO queue, slot 0: TX level and Coex"/>
    <register addr="503303a8" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_BACKOFF_I1[1]" comment="PDU on VO queue, slot 0: Backoff parameters"/>
    <register addr="503303ac" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_OPTIONS_I1[1]" comment="PDU on VO queue, slot 0: Options"/>
    <register addr="503303b0" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_ADDR_I1[2]" comment="PDU on VO queue, slot 0: Start address"/>
    <register addr="503303b4" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_ID_LEN_I1[2]" comment="PDU on VO queue, slot 0: VHT Group ID and Partial AID, and Length"/>
    <register addr="503303b8" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_TX_RATE_I1[2]" comment="PDU on VO queue, slot 0: TX Rate. See MAC_MODULATION_OPTIONS"/>
    <register addr="503303bc" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_TX_LEVEL_COEX_I1[2]" comment="PDU on VO queue, slot 0: TX level and Coex"/>
    <register addr="503303c0" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_BACKOFF_I1[2]" comment="PDU on VO queue, slot 0: Backoff parameters"/>
    <register addr="503303c4" rw_flags="RW" width="4" name="MAC_PDU_REQUEST_VO_SLOT_OPTIONS_I1[2]" comment="PDU on VO queue, slot 0: Options"/>
    <register addr="503303c8" rw_flags="R" width="4" name="MAC_PDU_VO_STATUS_I1" comment="VO status"/>
    <register addr="503303cc" rw_flags="R" width="4" name="MAC_TX_VO_STATUS_I1" comment="VO TX status"/>
  </block>
  <block name="wl_mac_if_0" comment="">
    <register addr="50210000" rw_flags="RW" width="1" name="MAC_IF_CONTROL_I0" comment="General control register (state is persistant)"/>
    <register addr="50210004" rw_flags="RW" width="1" name="MAC_IF_CONTROL_AMNESIC_I0" comment="General control register (state is transitory)"/>
    <register addr="50210008" rw_flags="R" width="1" name="MAC_IF_STATUS_I0" comment="General status register"/>
    <register addr="5021000c" rw_flags="RW" width="4" name="MAC_IF_RX_BUFFER_START_I0" comment="Address of start of Receive Buffer. Multiple of 1k. Address = MAC_IF_RX_BUFFER_START*1024. Since MAC IF is connected 'directly' to RAMSW, value of 0x00_0000 =&amp;gt; start of RAMSW"/>
    <register addr="50210010" rw_flags="RW" width="1" name="MAC_IF_RX_BUFFER_SIZE_I0" comment="Size of Receive Buffer. Units of 1k bytes. Offset of 1k bytes. 0 =&amp;gt; 1k bytes,  1 =&amp;gt; 2k bytes,  63 =&amp;gt; 64k bytes"/>
    <register addr="50210014" rw_flags="R" width="2" name="MAC_IF_RX_BUFFER_GIVE_I0" comment="Receive Buffer Write Pointer (updated only at Receive Dollop boundaries)"/>
    <register addr="50210018" rw_flags="RW" width="2" name="MAC_IF_RX_BUFFER_TAKE_I0" comment="Receive Buffer Read Pointer"/>
    <register addr="5021001c" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER0_START_I0" comment="Address of start of Transmit Buffer 0. Multiple of 1k. Address = MAC_IF_TX_BUFFER0_START*1024. Since MAC IF is connected 'directly' to RAMSW, value of 0x00_0000 =&amp;gt; start of RAMSW"/>
    <register addr="50210020" rw_flags="RW" width="1" name="MAC_IF_TX_BUFFER0_SIZE_I0" comment="Size of Transmit Buffer 0. Units of 1k bytes. Offset of 1k bytes. 0 =&amp;gt; 1k bytes,  1 =&amp;gt; 2k bytes,  63 =&amp;gt; 64k bytes"/>
    <register addr="50210024" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER0_GIVE_I0" comment="Transmit Buffer 0 Write Pointer "/>
    <register addr="50210028" rw_flags="R" width="4" name="MAC_IF_TX_BUFFER0_SPACE_I0" comment="Number of bytes of free space in Transmit Buffer 0. Two lsb always 0. Note that when a MAC frame is transmitted using RTS/CTS protection, then the MAC ACC will rewind the Transmit Buffer Read Pointer by four words. Thus the value in this register may be sixteen greater than the space actually available"/>
    <register addr="5021002c" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER0_TRIGGER_I0" comment="Generate interrupt when free space in Transmit Buffer 0 is greater than or equal to this number. Two lsb ignored and treated as 0"/>
    <register addr="50210030" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER1_START_I0" comment="Address of start of Transmit Buffer 1. Multiple of 1k. Address = MAC_IF_TX_BUFFER1_START*1024. Since MAC IF is connected 'directly' to RAMSW, value of 0x00_0000 =&amp;gt; start of RAMSW"/>
    <register addr="50210034" rw_flags="RW" width="1" name="MAC_IF_TX_BUFFER1_SIZE_I0" comment="Size of Transmit Buffer 1. Units of 1k bytes. Offset of 1k bytes. 0 =&amp;gt; 1k bytes,  1 =&amp;gt; 2k bytes,  63 =&amp;gt; 64k bytes"/>
    <register addr="50210038" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER1_GIVE_I0" comment="Transmit Buffer 1 Write Pointer "/>
    <register addr="5021003c" rw_flags="R" width="4" name="MAC_IF_TX_BUFFER1_SPACE_I0" comment="Number of bytes of free space in Transmit Buffer 1. Two lsb always 0. Note that when a MAC frame is transmitted using RTS/CTS protection, then the MAC ACC will rewind the Transmit Buffer Read Pointer by four words. Thus the value in this register may be sixteen greater than the space actually available"/>
    <register addr="50210040" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER1_TRIGGER_I0" comment="Generate interrupt when free space in Transmit Buffer 1 is greater than or equal to this number. Two lsb ignored and treated as 0"/>
    <register addr="50210044" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER2_START_I0" comment="Address of start of Transmit Buffer 2. Multiple of 1k. Address = MAC_IF_TX_BUFFER2_START*1024. Since MAC IF is connected 'directly' to RAMSW, value of 0x00_0000 =&amp;gt; start of RAMSW"/>
    <register addr="50210048" rw_flags="RW" width="1" name="MAC_IF_TX_BUFFER2_SIZE_I0" comment="Size of Transmit Buffer 2. Units of 1k bytes. Offset of 1k bytes. 0 =&amp;gt; 1k bytes,  1 =&amp;gt; 2k bytes,  63 =&amp;gt; 64k bytes"/>
    <register addr="5021004c" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER2_GIVE_I0" comment="Transmit Buffer 2 Write Pointer "/>
    <register addr="50210050" rw_flags="R" width="4" name="MAC_IF_TX_BUFFER2_SPACE_I0" comment="Number of bytes of free space in Transmit Buffer 2. Two lsb always 0. Note that when a MAC frame is transmitted using RTS/CTS protection, then the MAC ACC will rewind the Transmit Buffer Read Pointer by four words. Thus the value in this register may be sixteen greater than the space actually available"/>
    <register addr="50210054" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER2_TRIGGER_I0" comment="Generate interrupt when free space in Transmit Buffer 2 is greater than or equal to this number. Two lsb ignored and treated as 0"/>
    <register addr="50210058" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER3_START_I0" comment="Address of start of Transmit Buffer 3. Multiple of 1k. Address = MAC_IF_TX_BUFFER3_START*1024. Since MAC IF is connected 'directly' to RAMSW, value of 0x00_0000 =&amp;gt; start of RAMSW"/>
    <register addr="5021005c" rw_flags="RW" width="1" name="MAC_IF_TX_BUFFER3_SIZE_I0" comment="Size of Transmit Buffer 3. Units of 1k bytes. Offset of 1k bytes. 0 =&amp;gt; 1k bytes,  1 =&amp;gt; 2k bytes,  63 =&amp;gt; 64k bytes"/>
    <register addr="50210060" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER3_GIVE_I0" comment="Transmit Buffer 3 Write Pointer "/>
    <register addr="50210064" rw_flags="R" width="4" name="MAC_IF_TX_BUFFER3_SPACE_I0" comment="Number of bytes of free space in Transmit Buffer 3. Two lsb always 0. Note that when a MAC frame is transmitted using RTS/CTS protection, then the MAC ACC will rewind the Transmit Buffer Read Pointer by four words. Thus the value in this register may be sixteen greater than the space actually available"/>
    <register addr="50210068" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER3_TRIGGER_I0" comment="Generate interrupt when free space in Transmit Buffer 3 is greater than or equal to this number. Two lsb ignored and treated as 0"/>
    <register addr="5021006c" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER4_START_I0" comment="Address of start of Transmit Buffer 4. Multiple of 1k. Address = MAC_IF_TX_BUFFER4_START*1024. Since MAC IF is connected 'directly' to RAMSW, value of 0x00_0000 =&amp;gt; start of RAMSW"/>
    <register addr="50210070" rw_flags="RW" width="1" name="MAC_IF_TX_BUFFER4_SIZE_I0" comment="Size of Transmit Buffer 4. Units of 1k bytes. Offset of 1k bytes. 0 =&amp;gt; 1k bytes,  1 =&amp;gt; 2k bytes,  63 =&amp;gt; 64k bytes"/>
    <register addr="50210074" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER4_GIVE_I0" comment="Transmit Buffer 4 Write Pointer "/>
    <register addr="50210078" rw_flags="R" width="4" name="MAC_IF_TX_BUFFER4_SPACE_I0" comment="Number of bytes of free space in Transmit Buffer 4. Two lsb always 0. Note that when a MAC frame is transmitted using RTS/CTS protection, then the MAC ACC will rewind the Transmit Buffer Read Pointer by four words. Thus the value in this register may be sixteen greater than the space actually available"/>
    <register addr="5021007c" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER4_TRIGGER_I0" comment="Generate interrupt when free space in Transmit Buffer 4 is greater than or equal to this number. Two lsb ignored and treated as 0"/>
    <register addr="50210080" rw_flags="R" width="2" name="MAC_IF_INTERRUPT_RAW_STATUS_I0" comment="Interrupt Raw Status register. This is a 'sticky' register. The (transient) interrupt sources can (only) set the bits to 1. Bits may be cleared to 0 by writing to MAC_IF_INTERRUPT_CLEAR.  When the MAC IF is Disabled, the interrupt sources are prevented from updating INTERRUPT_RAW_STATUS"/>
    <register addr="50210084" rw_flags="R" width="2" name="MAC_IF_INTERRUPT_STATUS_I0" comment="Interrupt Status register. Value in this register is MAC_IF_INTERRUPT_RAW_STATUS ANDed with MAC_IF_INTERRUPT_ENABLE. If one or more of the bits in this register are 1, then the interrupt output signal from the MAC IF will be asserted"/>
    <register addr="50210088" rw_flags="RW" width="2" name="MAC_IF_INTERRUPT_ENABLE_I0" comment="Interrupt Enable register. Allows the various interrupt sources to be enabled / masked. If masked (i.e. a bit is a 0), then the interrupt source will not cause an interrupt, but the source may still be polled via MAC_IF_INTERRUPT_RAW_STATUS"/>
    <register addr="5021008c" rw_flags="RW" width="2" name="MAC_IF_INTERRUPT_CLEAR_I0" comment="Interrupt Clear register. Writing a 1 to a bit will clear (set to 0) the corresponding bit in MAC_IF_INTERRUPT_RAW_STATUS. Writing a 0 has no effect. The clear only lasts for one clock cycle; there is no need to write a 0 after writing a 1"/>
    <register addr="50210090" rw_flags="RW" width="2" name="MAC_IF_DEBUG_SELECT_I0" comment="Debug Select"/>
    <register addr="50210094" rw_flags="R" width="2" name="MAC_IF_DEBUG_STATUS_I0" comment="Debug Status"/>
  </block>
  <block name="wl_mac_if_1" comment="">
    <register addr="50310000" rw_flags="RW" width="1" name="MAC_IF_CONTROL_I1" comment="General control register (state is persistant)"/>
    <register addr="50310004" rw_flags="RW" width="1" name="MAC_IF_CONTROL_AMNESIC_I1" comment="General control register (state is transitory)"/>
    <register addr="50310008" rw_flags="R" width="1" name="MAC_IF_STATUS_I1" comment="General status register"/>
    <register addr="5031000c" rw_flags="RW" width="4" name="MAC_IF_RX_BUFFER_START_I1" comment="Address of start of Receive Buffer. Multiple of 1k. Address = MAC_IF_RX_BUFFER_START*1024. Since MAC IF is connected 'directly' to RAMSW, value of 0x00_0000 =&amp;gt; start of RAMSW"/>
    <register addr="50310010" rw_flags="RW" width="1" name="MAC_IF_RX_BUFFER_SIZE_I1" comment="Size of Receive Buffer. Units of 1k bytes. Offset of 1k bytes. 0 =&amp;gt; 1k bytes,  1 =&amp;gt; 2k bytes,  63 =&amp;gt; 64k bytes"/>
    <register addr="50310014" rw_flags="R" width="2" name="MAC_IF_RX_BUFFER_GIVE_I1" comment="Receive Buffer Write Pointer (updated only at Receive Dollop boundaries)"/>
    <register addr="50310018" rw_flags="RW" width="2" name="MAC_IF_RX_BUFFER_TAKE_I1" comment="Receive Buffer Read Pointer"/>
    <register addr="5031001c" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER0_START_I1" comment="Address of start of Transmit Buffer 0. Multiple of 1k. Address = MAC_IF_TX_BUFFER0_START*1024. Since MAC IF is connected 'directly' to RAMSW, value of 0x00_0000 =&amp;gt; start of RAMSW"/>
    <register addr="50310020" rw_flags="RW" width="1" name="MAC_IF_TX_BUFFER0_SIZE_I1" comment="Size of Transmit Buffer 0. Units of 1k bytes. Offset of 1k bytes. 0 =&amp;gt; 1k bytes,  1 =&amp;gt; 2k bytes,  63 =&amp;gt; 64k bytes"/>
    <register addr="50310024" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER0_GIVE_I1" comment="Transmit Buffer 0 Write Pointer "/>
    <register addr="50310028" rw_flags="R" width="4" name="MAC_IF_TX_BUFFER0_SPACE_I1" comment="Number of bytes of free space in Transmit Buffer 0. Two lsb always 0. Note that when a MAC frame is transmitted using RTS/CTS protection, then the MAC ACC will rewind the Transmit Buffer Read Pointer by four words. Thus the value in this register may be sixteen greater than the space actually available"/>
    <register addr="5031002c" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER0_TRIGGER_I1" comment="Generate interrupt when free space in Transmit Buffer 0 is greater than or equal to this number. Two lsb ignored and treated as 0"/>
    <register addr="50310030" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER1_START_I1" comment="Address of start of Transmit Buffer 1. Multiple of 1k. Address = MAC_IF_TX_BUFFER1_START*1024. Since MAC IF is connected 'directly' to RAMSW, value of 0x00_0000 =&amp;gt; start of RAMSW"/>
    <register addr="50310034" rw_flags="RW" width="1" name="MAC_IF_TX_BUFFER1_SIZE_I1" comment="Size of Transmit Buffer 1. Units of 1k bytes. Offset of 1k bytes. 0 =&amp;gt; 1k bytes,  1 =&amp;gt; 2k bytes,  63 =&amp;gt; 64k bytes"/>
    <register addr="50310038" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER1_GIVE_I1" comment="Transmit Buffer 1 Write Pointer "/>
    <register addr="5031003c" rw_flags="R" width="4" name="MAC_IF_TX_BUFFER1_SPACE_I1" comment="Number of bytes of free space in Transmit Buffer 1. Two lsb always 0. Note that when a MAC frame is transmitted using RTS/CTS protection, then the MAC ACC will rewind the Transmit Buffer Read Pointer by four words. Thus the value in this register may be sixteen greater than the space actually available"/>
    <register addr="50310040" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER1_TRIGGER_I1" comment="Generate interrupt when free space in Transmit Buffer 1 is greater than or equal to this number. Two lsb ignored and treated as 0"/>
    <register addr="50310044" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER2_START_I1" comment="Address of start of Transmit Buffer 2. Multiple of 1k. Address = MAC_IF_TX_BUFFER2_START*1024. Since MAC IF is connected 'directly' to RAMSW, value of 0x00_0000 =&amp;gt; start of RAMSW"/>
    <register addr="50310048" rw_flags="RW" width="1" name="MAC_IF_TX_BUFFER2_SIZE_I1" comment="Size of Transmit Buffer 2. Units of 1k bytes. Offset of 1k bytes. 0 =&amp;gt; 1k bytes,  1 =&amp;gt; 2k bytes,  63 =&amp;gt; 64k bytes"/>
    <register addr="5031004c" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER2_GIVE_I1" comment="Transmit Buffer 2 Write Pointer "/>
    <register addr="50310050" rw_flags="R" width="4" name="MAC_IF_TX_BUFFER2_SPACE_I1" comment="Number of bytes of free space in Transmit Buffer 2. Two lsb always 0. Note that when a MAC frame is transmitted using RTS/CTS protection, then the MAC ACC will rewind the Transmit Buffer Read Pointer by four words. Thus the value in this register may be sixteen greater than the space actually available"/>
    <register addr="50310054" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER2_TRIGGER_I1" comment="Generate interrupt when free space in Transmit Buffer 2 is greater than or equal to this number. Two lsb ignored and treated as 0"/>
    <register addr="50310058" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER3_START_I1" comment="Address of start of Transmit Buffer 3. Multiple of 1k. Address = MAC_IF_TX_BUFFER3_START*1024. Since MAC IF is connected 'directly' to RAMSW, value of 0x00_0000 =&amp;gt; start of RAMSW"/>
    <register addr="5031005c" rw_flags="RW" width="1" name="MAC_IF_TX_BUFFER3_SIZE_I1" comment="Size of Transmit Buffer 3. Units of 1k bytes. Offset of 1k bytes. 0 =&amp;gt; 1k bytes,  1 =&amp;gt; 2k bytes,  63 =&amp;gt; 64k bytes"/>
    <register addr="50310060" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER3_GIVE_I1" comment="Transmit Buffer 3 Write Pointer "/>
    <register addr="50310064" rw_flags="R" width="4" name="MAC_IF_TX_BUFFER3_SPACE_I1" comment="Number of bytes of free space in Transmit Buffer 3. Two lsb always 0. Note that when a MAC frame is transmitted using RTS/CTS protection, then the MAC ACC will rewind the Transmit Buffer Read Pointer by four words. Thus the value in this register may be sixteen greater than the space actually available"/>
    <register addr="50310068" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER3_TRIGGER_I1" comment="Generate interrupt when free space in Transmit Buffer 3 is greater than or equal to this number. Two lsb ignored and treated as 0"/>
    <register addr="5031006c" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER4_START_I1" comment="Address of start of Transmit Buffer 4. Multiple of 1k. Address = MAC_IF_TX_BUFFER4_START*1024. Since MAC IF is connected 'directly' to RAMSW, value of 0x00_0000 =&amp;gt; start of RAMSW"/>
    <register addr="50310070" rw_flags="RW" width="1" name="MAC_IF_TX_BUFFER4_SIZE_I1" comment="Size of Transmit Buffer 4. Units of 1k bytes. Offset of 1k bytes. 0 =&amp;gt; 1k bytes,  1 =&amp;gt; 2k bytes,  63 =&amp;gt; 64k bytes"/>
    <register addr="50310074" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER4_GIVE_I1" comment="Transmit Buffer 4 Write Pointer "/>
    <register addr="50310078" rw_flags="R" width="4" name="MAC_IF_TX_BUFFER4_SPACE_I1" comment="Number of bytes of free space in Transmit Buffer 4. Two lsb always 0. Note that when a MAC frame is transmitted using RTS/CTS protection, then the MAC ACC will rewind the Transmit Buffer Read Pointer by four words. Thus the value in this register may be sixteen greater than the space actually available"/>
    <register addr="5031007c" rw_flags="RW" width="4" name="MAC_IF_TX_BUFFER4_TRIGGER_I1" comment="Generate interrupt when free space in Transmit Buffer 4 is greater than or equal to this number. Two lsb ignored and treated as 0"/>
    <register addr="50310080" rw_flags="R" width="2" name="MAC_IF_INTERRUPT_RAW_STATUS_I1" comment="Interrupt Raw Status register. This is a 'sticky' register. The (transient) interrupt sources can (only) set the bits to 1. Bits may be cleared to 0 by writing to MAC_IF_INTERRUPT_CLEAR.  When the MAC IF is Disabled, the interrupt sources are prevented from updating INTERRUPT_RAW_STATUS"/>
    <register addr="50310084" rw_flags="R" width="2" name="MAC_IF_INTERRUPT_STATUS_I1" comment="Interrupt Status register. Value in this register is MAC_IF_INTERRUPT_RAW_STATUS ANDed with MAC_IF_INTERRUPT_ENABLE. If one or more of the bits in this register are 1, then the interrupt output signal from the MAC IF will be asserted"/>
    <register addr="50310088" rw_flags="RW" width="2" name="MAC_IF_INTERRUPT_ENABLE_I1" comment="Interrupt Enable register. Allows the various interrupt sources to be enabled / masked. If masked (i.e. a bit is a 0), then the interrupt source will not cause an interrupt, but the source may still be polled via MAC_IF_INTERRUPT_RAW_STATUS"/>
    <register addr="5031008c" rw_flags="RW" width="2" name="MAC_IF_INTERRUPT_CLEAR_I1" comment="Interrupt Clear register. Writing a 1 to a bit will clear (set to 0) the corresponding bit in MAC_IF_INTERRUPT_RAW_STATUS. Writing a 0 has no effect. The clear only lasts for one clock cycle; there is no need to write a 0 after writing a 1"/>
    <register addr="50310090" rw_flags="RW" width="2" name="MAC_IF_DEBUG_SELECT_I1" comment="Debug Select"/>
    <register addr="50310094" rw_flags="R" width="2" name="MAC_IF_DEBUG_STATUS_I1" comment="Debug Status"/>
  </block>
  <block name="wl_radio" comment="">
    <register addr="50100000" rw_flags="RW" width="2" name="WL_RADIO_DEBUG_CONTROL" comment="This register controls the selection of debug buses to be driven out of the module."/>
    <register addr="50100004" rw_flags="RW" width="1" name="WL_RADIO_CONFIG" comment="Miscellaneous config bits"/>
    <register addr="50100008" rw_flags="RW" width="2" name="WL_RADIO_TEMP_CTRL_CONFIG" comment="Control register for block interfacing to analogue temperature sensor"/>
    <register addr="5010000c" rw_flags="RW" width="1" name="WL_RADIO_AGC_MIMO_CONFIG" comment="Select the AGC strategy for MIMO"/>
    <register addr="50100010" rw_flags="RW" width="4" name="WL_RADIO_CLOCK_CONTROL" comment="Enable/disable Radio Clocks"/>
    <register addr="50100014" rw_flags="RW" width="4" name="WL_RADIO_MISC" comment="This register reserved for miscellaneous tasks."/>
  </block>
  <block name="wl_radio_ss_0" comment="">
    <register addr="50110000" rw_flags="R" width="2" name="WL_RADIO_RX_COMP_AUTO_COEFFS_I0" comment="The current values of automatic I/Q trims can be read back from this register. The trim values are in sign/magnitude format. The phase trim is in the upper 8 bits and the amplitude trim in the lower 8 bits of this register. By setting the WL_RADIO_RX_COMP_LUT_READ_EN bit in the WL_RADIO_RX_COMP_CONFIG1 register, entries in the compensation table can also be read."/>
    <register addr="50110004" rw_flags="R" width="1" name="WL_RADIO_RX_PHASE_COMP_LUT_STATUS_I0" comment="This register reads the current phase compensation LUT entry"/>
    <register addr="50110008" rw_flags="R" width="1" name="WL_RADIO_RX_AMPL_COMP_LUT_STATUS_I0" comment="This register reads the current amplitude compensation LUT entry"/>
    <register addr="5011000c" rw_flags="R" width="1" name="WL_RADIO_DIG_GAIN_STATUS_I0" comment="This register contains the current gain settings to all digital blocks in the receive chain"/>
    <register addr="50110010" rw_flags="R" width="2" name="WL_RADIO_CHANNEL_STATUS_I0" comment="This register contains the instantaneous value of the RSSI, CCA and CS of this receive chain"/>
    <register addr="50110014" rw_flags="RW" width="1" name="WL_RADIO_INT_CLEAR_I0" comment="Writing this register clears any interrupts whose corresponding bits are set in the write data. Bit allocations are as for WL_RADIO_INT_MASK."/>
    <register addr="50110018" rw_flags="RW" width="1" name="WL_RADIO_INT_MASK_I0" comment="This register masks events from causing interrupts. Only those interrupts whose mask bit is set will be delivered to the processors"/>
    <register addr="5011001c" rw_flags="R" width="1" name="WL_RADIO_INT_STATUS_I0" comment="This register has bits set in it for any interrupt that is currently active. Bits are set for any active interrupt, whether it is masked or not"/>
    <register addr="50110020" rw_flags="R" width="1" name="WL_RADIO_INT_STATUS_RAW_I0" comment="This register has bits set in it for any interrupt that is currently active. Bits are set for any active interrupt, whether it is masked or not"/>
    <register addr="50110024" rw_flags="RW" width="1" name="WL_RADIO_RF_INT_CLEAR_I0" comment="Writing this register clears any interrupts whose corresponding bits are set in the write data. Bit allocations are as for WL_RADIO_INT_MASK."/>
    <register addr="50110028" rw_flags="RW" width="1" name="WL_RADIO_RF_INT_MASK_I0" comment="This register masks events from causing interrupts. Only those interrupts whose mask bit is set will be delivered to the processors"/>
    <register addr="5011002c" rw_flags="R" width="1" name="WL_RADIO_RF_INT_STATUS_I0" comment="This register has bits set in it for any interrupt that is currently active. Bits are set for any active interrupt, whether it is masked or not"/>
    <register addr="50110030" rw_flags="R" width="1" name="WL_RADIO_RF_INT_STATUS_RAW_I0" comment="This register has bits set in it for any interrupt that is currently active. Bits are set for any active interrupt, whether it is masked or not"/>
    <register addr="50110034" rw_flags="R" width="1" name="WL_RADIO_RF_INTS_I0" comment="This register has bits set in it for any interrupt that is currently active. Bits are set for any active interrupt, whether it is masked or not"/>
    <register addr="50110038" rw_flags="R" width="2" name="WLRF_TEMP_STATUS_I0" comment="This register contains the temperature measurements from the RF chip via speedy"/>
    <register addr="5011003c" rw_flags="RW" width="2" name="WL_RADIO_TIMER_TX_SLOT0_ENABLES_I0" comment="This register sets the radio enables for transmit timer slot 0."/>
    <register addr="50110040" rw_flags="RW" width="2" name="WL_RADIO_TIMER_TX_SLOT1_ENABLES_I0" comment="This register sets the radio enables for transmit timer slot 1."/>
    <register addr="50110044" rw_flags="RW" width="2" name="WL_RADIO_TIMER_TX_SLOT2_ENABLES_I0" comment="This register sets the radio enables for transmit timer slot 2."/>
    <register addr="50110048" rw_flags="RW" width="2" name="WL_RADIO_TIMER_TX_SLOT3_ENABLES_I0" comment="This register sets the radio enables for transmit timer slot 3."/>
    <register addr="5011004c" rw_flags="RW" width="2" name="WL_RADIO_TIMER_TX_SLOT4_ENABLES_I0" comment="This register sets the radio enables for transmit timer slot 4."/>
    <register addr="50110050" rw_flags="RW" width="2" name="WL_RADIO_TIMER_TX_SLOT5_ENABLES_I0" comment="This register sets the radio enables for transmit timer slot 5."/>
    <register addr="50110054" rw_flags="RW" width="2" name="WL_RADIO_TIMER_TX_SLOT6_ENABLES_I0" comment="This register sets the radio enables for transmit timer slot 6."/>
    <register addr="50110058" rw_flags="RW" width="2" name="WL_RADIO_TIMER_TX_SLOT7_ENABLES_I0" comment="This register sets the radio enables for transmit timer slot 7."/>
    <register addr="5011005c" rw_flags="RW" width="1" name="WL_RADIO_TIMER_TX_SLOT0_DELAY_I0" comment="This register sets the delay from Tx timer enable to slot 0 becoming active in 50ns units"/>
    <register addr="50110060" rw_flags="RW" width="1" name="WL_RADIO_TIMER_TX_SLOT1_DELAY_I0" comment="This register sets the delay from Tx timer enable to slot 1 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="50110064" rw_flags="RW" width="1" name="WL_RADIO_TIMER_TX_SLOT2_DELAY_I0" comment="This register sets the delay from Tx timer enable to slot 2 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="50110068" rw_flags="RW" width="1" name="WL_RADIO_TIMER_TX_SLOT3_DELAY_I0" comment="This register sets the delay from Tx timer enable to slot 3 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="5011006c" rw_flags="RW" width="1" name="WL_RADIO_TIMER_TX_SLOT4_DELAY_I0" comment="This register sets the delay from Tx timer enable to slot 4 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="50110070" rw_flags="RW" width="1" name="WL_RADIO_TIMER_TX_SLOT5_DELAY_I0" comment="This register sets the delay from Tx timer enable to slot 5 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="50110074" rw_flags="RW" width="1" name="WL_RADIO_TIMER_TX_SLOT6_DELAY_I0" comment="This register sets the delay from Tx timer enable to slot 6 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="50110078" rw_flags="RW" width="1" name="WL_RADIO_TIMER_TX_SLOT7_DELAY_I0" comment="This register sets the delay from Tx timer enable to slot 7 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="5011007c" rw_flags="RW" width="2" name="WL_RADIO_TIMER_TX_SLOT_ON_OFF_LAST_I0" comment="This register sets the start and end of Tx turn on and off ramps, and the slot jumped to in the case of a Tx abort"/>
    <register addr="50110080" rw_flags="RW" width="2" name="WL_RADIO_TIMER_RX_SLOT0_ENABLES_I0" comment="This register sets the radio enables for receive timer slot 0."/>
    <register addr="50110084" rw_flags="RW" width="2" name="WL_RADIO_TIMER_RX_SLOT1_ENABLES_I0" comment="This register sets the radio enables for receive timer slot 1."/>
    <register addr="50110088" rw_flags="RW" width="2" name="WL_RADIO_TIMER_RX_SLOT2_ENABLES_I0" comment="This register sets the radio enables for receive timer slot 2."/>
    <register addr="5011008c" rw_flags="RW" width="2" name="WL_RADIO_TIMER_RX_SLOT3_ENABLES_I0" comment="This register sets the radio enables for receive timer slot 3."/>
    <register addr="50110090" rw_flags="RW" width="2" name="WL_RADIO_TIMER_RX_SLOT4_ENABLES_I0" comment="This register sets the radio enables for receive timer slot 4."/>
    <register addr="50110094" rw_flags="RW" width="2" name="WL_RADIO_TIMER_RX_SLOT5_ENABLES_I0" comment="This register sets the radio enables for receive timer slot 5."/>
    <register addr="50110098" rw_flags="RW" width="2" name="WL_RADIO_TIMER_RX_SLOT6_ENABLES_I0" comment="This register sets the radio enables for receive timer slot 6."/>
    <register addr="5011009c" rw_flags="RW" width="2" name="WL_RADIO_TIMER_RX_SLOT7_ENABLES_I0" comment="This register sets the radio enables for receive timer slot 7."/>
    <register addr="501100a0" rw_flags="RW" width="1" name="WL_RADIO_TIMER_RX_SLOT0_DELAY_I0" comment="This register sets the delay from Rx timer enable to slot 0 becoming active in 50ns units"/>
    <register addr="501100a4" rw_flags="RW" width="1" name="WL_RADIO_TIMER_RX_SLOT1_DELAY_I0" comment="This register sets the delay from Rx timer enable to slot 1 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="501100a8" rw_flags="RW" width="1" name="WL_RADIO_TIMER_RX_SLOT2_DELAY_I0" comment="This register sets the delay from Rx timer enable to slot 2 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="501100ac" rw_flags="RW" width="1" name="WL_RADIO_TIMER_RX_SLOT3_DELAY_I0" comment="This register sets the delay from Rx timer enable to slot 3 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="501100b0" rw_flags="RW" width="1" name="WL_RADIO_TIMER_RX_SLOT4_DELAY_I0" comment="This register sets the delay from Rx timer enable to slot 4 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="501100b4" rw_flags="RW" width="1" name="WL_RADIO_TIMER_RX_SLOT5_DELAY_I0" comment="This register sets the delay from Rx timer enable to slot 5 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="501100b8" rw_flags="RW" width="1" name="WL_RADIO_TIMER_RX_SLOT6_DELAY_I0" comment="This register sets the delay from Rx timer enable to slot 6 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="501100bc" rw_flags="RW" width="1" name="WL_RADIO_TIMER_RX_SLOT7_DELAY_I0" comment="This register sets the delay from Rx timer enable to slot 7 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="501100c0" rw_flags="RW" width="2" name="WL_RADIO_TIMER_RX_SLOT_ON_OFF_LAST_I0" comment="This register sets the start and end of Rx turn on and off ramps, and the slot jumped to in the case of an Rx abort"/>
    <register addr="501100c4" rw_flags="R" width="1" name="WL_RADIO_TIMER_TX_SLOT_I0" comment="This register contains the current slot selected by the Tx timer"/>
    <register addr="501100c8" rw_flags="R" width="1" name="WL_RADIO_TIMER_RX_SLOT_I0" comment="This register contains the current slot selected by the Rx timer"/>
    <register addr="501100cc" rw_flags="R" width="2" name="WL_RADIO_ENABLES_STATUS_I0" comment="This register contains the current values of the Radio Enables, after all masking and multiplexing"/>
    <register addr="501100d0" rw_flags="RW" width="2" name="WL_RADIO_ENABLES_I0" comment="Default values for radio enables signals should the mask register select this rather than the timer outputs"/>
    <register addr="501100d4" rw_flags="RW" width="2" name="WL_RADIO_ENABLES_MASK_I0" comment="Selects use of RADIO_ENABLES or timer outputs. A one in a given bit selects the timer output."/>
    <register addr="501100d8" rw_flags="RW" width="2" name="WL_RADIO_ENABLES_TX_TRAIN_MASK_I0" comment="Selects use of RADIO_ENABLES or timer outputs. A one in a given bit selects the timer output. Used only when predistort training is active to allow Rx blocks to be turned on"/>
    <register addr="501100dc" rw_flags="R" width="2" name="WL_RADIO_DEBUG_STATUS_I0" comment="This read-only register returns the current state of the debug bus within radio control."/>
    <register addr="501100e0" rw_flags="RW" width="4" name="WL_RADIO_AGC_CONFIG1_I0" comment="Miscellaneous config bits for the AGC as follows:"/>
    <register addr="501100e4" rw_flags="RW" width="2" name="WL_RADIO_AGC_CONFIG2_I0" comment="Configuration bits for the AGC: initial gain settings before first update comes from RF chip"/>
    <register addr="501100e8" rw_flags="RW" width="4" name="WL_RADIO_AGC_CONFIG3_I0" comment="Configuration bits for the AGC: digital gain range definition. Also initial baseband gain until first update arrives from RF chip"/>
    <register addr="501100ec" rw_flags="RW" width="4" name="WL_RADIO_AGC_CONFIG4_I0" comment="Further configuration bits for the AGC: digital gain settings"/>
    <register addr="501100f0" rw_flags="RW" width="2" name="WL_RADIO_AGC_CONFIG5_I0" comment="Further configuration bits for the AGC: clipping detection behaviour"/>
    <register addr="501100f4" rw_flags="RW" width="4" name="WL_RADIO_AGC_CONFIG6_I0" comment="Further configuration bits for the AGC: ADC signal size nudge up thresholds"/>
    <register addr="501100f8" rw_flags="RW" width="4" name="WL_RADIO_AGC_CONFIG7_I0" comment="Further configuration bits for the AGC: ADC signal size nudge up thresholds"/>
    <register addr="501100fc" rw_flags="RW" width="1" name="WL_RADIO_AGC_CONFIG8_I0" comment="Further configuration bits for the AGC. Debug select"/>
    <register addr="50110100" rw_flags="RW" width="4" name="WL_RADIO_AGC_CONFIG9_I0" comment="Further configuration bits for the AGC: ADC signal size nudge up thresholds"/>
    <register addr="50110104" rw_flags="RW" width="4" name="WL_RADIO_AGC_CONFIG10_I0" comment="Further configuration bits for the AGC: ADC signal size nudge up thresholds"/>
    <register addr="50110108" rw_flags="RW" width="4" name="WL_RADIO_AGC_CONFIG11_I0" comment="Further configuration bits for the AGC: ADC signal size nudge up thresholds"/>
    <register addr="5011010c" rw_flags="RW" width="4" name="WL_RADIO_AGC_TIMEOUT_I0" comment="This register specifies programmable timeouts for the AGC"/>
    <register addr="50110110" rw_flags="RW" width="4" name="WL_RADIO_AGC_DIG_RSSI_TIME_I0" comment="This register specifies programmable configurations to measure digital RSSI for different purposes"/>
    <register addr="50110114" rw_flags="RW" width="4" name="WL_RADIO_AGC_DIG_RSSI_TIME2_I0" comment="This register specifies programmable configurations to measure digital RSSI for different purposes"/>
    <register addr="50110118" rw_flags="RW" width="4" name="WL_RADIO_AGC_OFDM_RSSI_TARGET_I0" comment="This register specifies the RSSI target for an OFDM receive burst after decimation."/>
    <register addr="5011011c" rw_flags="RW" width="4" name="WL_RADIO_AGC_CCK_RSSI_TARGET_I0" comment="This register specifies the RSSI target for a CCK receive burst after decimation."/>
    <register addr="50110120" rw_flags="RW" width="4" name="WL_RADIO_AGC_OFDM_RSSI_TARGET_DELTA_I0" comment="This register specifies the RSSI steps of (Maximum target + 2X dB) and (Minimum target - 2X dB) for a OFDM receive. Wheer X can be 1.5 dB or 2 dB depending on WL_RADIO_AGC_MIN_GAIN_STEP_SIZE."/>
    <register addr="50110124" rw_flags="RW" width="4" name="WL_RADIO_AGC_CCK_RSSI_TARGET_DELTA_I0" comment="This register specifies the RSSI steps of (Maximum target + 2X dB) and (Minimum target - 2X dB) for a CCK receive. Wheer X can be 1.5 dB or 2 dB depending on WL_RADIO_AGC_MIN_GAIN_STEP_SIZE."/>
    <register addr="50110128" rw_flags="RW" width="4" name="WL_RADIO_CS_CONFIG_I0" comment="This register configures the carrier sense. It is flagged when analogue gain is less than a threshold and digital RSSI is greater than a threshold. The thresholds are set in this register"/>
    <register addr="5011012c" rw_flags="RW" width="4" name="WL_RADIO_COADJ_CONFIG_I0" comment="Coadj general config register"/>
    <register addr="50110130" rw_flags="RW" width="4" name="WL_RADIO_COADJ_CONFIG2_I0" comment="Coadj general config register 2"/>
    <register addr="50110134" rw_flags="R" width="4" name="WL_RADIO_COADJ_STATUS_I0" comment="Coadj general status register"/>
    <register addr="50110138" rw_flags="RW" width="2" name="WL_RADIO_COADJ_TIMER_I0" comment="Timer initial value, downcount at core clk rate starts on write"/>
    <register addr="5011013c" rw_flags="RW" width="1" name="WL_RADIO_COADJ_MEM_ADDR_I0" comment="Coadj Code/Data Mem Address. MSBs=2'b00: DataStore, 2'b10: Core internal regs, 2'b11: Local regs"/>
    <register addr="50110140" rw_flags="RW" width="4" name="WL_RADIO_COADJ_MEM_WDATA_I0" comment="Coadj Code/Data Mem Write Data - auto increments address on write"/>
    <register addr="50110144" rw_flags="R" width="4" name="WL_RADIO_COADJ_MEM_RDATA_I0" comment="Coadj Code/Data Mem Read Data - auto increments address on read"/>
    <register addr="50110148" rw_flags="RW" width="2" name="WL_RADIO_ZIPPY_TO_RF_FLAGS_I0" comment="Zippy flag data (info and channel) to be sent to RFIC"/>
    <register addr="5011014c" rw_flags="RW" width="1" name="WL_RADIO_ZIPPY_TO_BB_FILTER_I0" comment="Filter bitmap for Zippy channels that cause an interrupt to be raised on traffic to the BBIC"/>
    <register addr="50110150" rw_flags="RW" width="1" name="WL_RADIO_ZIPPY_TO_RF_RESV_I0" comment="Zippy reserved signal for SW data to the RFIC"/>
    <register addr="50110154" rw_flags="R" width="2" name="WL_RADIO_ZIPPY_TO_BB_FLAGS_I0" comment="Zippy flag data to the BBIC, plus latched Valid and Ack"/>
  </block>
  <block name="wl_radio_ss_1" comment="">
    <register addr="50120000" rw_flags="R" width="2" name="WL_RADIO_RX_COMP_AUTO_COEFFS_I1" comment="The current values of automatic I/Q trims can be read back from this register. The trim values are in sign/magnitude format. The phase trim is in the upper 8 bits and the amplitude trim in the lower 8 bits of this register. By setting the WL_RADIO_RX_COMP_LUT_READ_EN bit in the WL_RADIO_RX_COMP_CONFIG1 register, entries in the compensation table can also be read."/>
    <register addr="50120004" rw_flags="R" width="1" name="WL_RADIO_RX_PHASE_COMP_LUT_STATUS_I1" comment="This register reads the current phase compensation LUT entry"/>
    <register addr="50120008" rw_flags="R" width="1" name="WL_RADIO_RX_AMPL_COMP_LUT_STATUS_I1" comment="This register reads the current amplitude compensation LUT entry"/>
    <register addr="5012000c" rw_flags="R" width="1" name="WL_RADIO_DIG_GAIN_STATUS_I1" comment="This register contains the current gain settings to all digital blocks in the receive chain"/>
    <register addr="50120010" rw_flags="R" width="2" name="WL_RADIO_CHANNEL_STATUS_I1" comment="This register contains the instantaneous value of the RSSI, CCA and CS of this receive chain"/>
    <register addr="50120014" rw_flags="RW" width="1" name="WL_RADIO_INT_CLEAR_I1" comment="Writing this register clears any interrupts whose corresponding bits are set in the write data. Bit allocations are as for WL_RADIO_INT_MASK."/>
    <register addr="50120018" rw_flags="RW" width="1" name="WL_RADIO_INT_MASK_I1" comment="This register masks events from causing interrupts. Only those interrupts whose mask bit is set will be delivered to the processors"/>
    <register addr="5012001c" rw_flags="R" width="1" name="WL_RADIO_INT_STATUS_I1" comment="This register has bits set in it for any interrupt that is currently active. Bits are set for any active interrupt, whether it is masked or not"/>
    <register addr="50120020" rw_flags="R" width="1" name="WL_RADIO_INT_STATUS_RAW_I1" comment="This register has bits set in it for any interrupt that is currently active. Bits are set for any active interrupt, whether it is masked or not"/>
    <register addr="50120024" rw_flags="RW" width="1" name="WL_RADIO_RF_INT_CLEAR_I1" comment="Writing this register clears any interrupts whose corresponding bits are set in the write data. Bit allocations are as for WL_RADIO_INT_MASK."/>
    <register addr="50120028" rw_flags="RW" width="1" name="WL_RADIO_RF_INT_MASK_I1" comment="This register masks events from causing interrupts. Only those interrupts whose mask bit is set will be delivered to the processors"/>
    <register addr="5012002c" rw_flags="R" width="1" name="WL_RADIO_RF_INT_STATUS_I1" comment="This register has bits set in it for any interrupt that is currently active. Bits are set for any active interrupt, whether it is masked or not"/>
    <register addr="50120030" rw_flags="R" width="1" name="WL_RADIO_RF_INT_STATUS_RAW_I1" comment="This register has bits set in it for any interrupt that is currently active. Bits are set for any active interrupt, whether it is masked or not"/>
    <register addr="50120034" rw_flags="R" width="1" name="WL_RADIO_RF_INTS_I1" comment="This register has bits set in it for any interrupt that is currently active. Bits are set for any active interrupt, whether it is masked or not"/>
    <register addr="50120038" rw_flags="R" width="2" name="WLRF_TEMP_STATUS_I1" comment="This register contains the temperature measurements from the RF chip via speedy"/>
    <register addr="5012003c" rw_flags="RW" width="2" name="WL_RADIO_TIMER_TX_SLOT0_ENABLES_I1" comment="This register sets the radio enables for transmit timer slot 0."/>
    <register addr="50120040" rw_flags="RW" width="2" name="WL_RADIO_TIMER_TX_SLOT1_ENABLES_I1" comment="This register sets the radio enables for transmit timer slot 1."/>
    <register addr="50120044" rw_flags="RW" width="2" name="WL_RADIO_TIMER_TX_SLOT2_ENABLES_I1" comment="This register sets the radio enables for transmit timer slot 2."/>
    <register addr="50120048" rw_flags="RW" width="2" name="WL_RADIO_TIMER_TX_SLOT3_ENABLES_I1" comment="This register sets the radio enables for transmit timer slot 3."/>
    <register addr="5012004c" rw_flags="RW" width="2" name="WL_RADIO_TIMER_TX_SLOT4_ENABLES_I1" comment="This register sets the radio enables for transmit timer slot 4."/>
    <register addr="50120050" rw_flags="RW" width="2" name="WL_RADIO_TIMER_TX_SLOT5_ENABLES_I1" comment="This register sets the radio enables for transmit timer slot 5."/>
    <register addr="50120054" rw_flags="RW" width="2" name="WL_RADIO_TIMER_TX_SLOT6_ENABLES_I1" comment="This register sets the radio enables for transmit timer slot 6."/>
    <register addr="50120058" rw_flags="RW" width="2" name="WL_RADIO_TIMER_TX_SLOT7_ENABLES_I1" comment="This register sets the radio enables for transmit timer slot 7."/>
    <register addr="5012005c" rw_flags="RW" width="1" name="WL_RADIO_TIMER_TX_SLOT0_DELAY_I1" comment="This register sets the delay from Tx timer enable to slot 0 becoming active in 50ns units"/>
    <register addr="50120060" rw_flags="RW" width="1" name="WL_RADIO_TIMER_TX_SLOT1_DELAY_I1" comment="This register sets the delay from Tx timer enable to slot 1 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="50120064" rw_flags="RW" width="1" name="WL_RADIO_TIMER_TX_SLOT2_DELAY_I1" comment="This register sets the delay from Tx timer enable to slot 2 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="50120068" rw_flags="RW" width="1" name="WL_RADIO_TIMER_TX_SLOT3_DELAY_I1" comment="This register sets the delay from Tx timer enable to slot 3 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="5012006c" rw_flags="RW" width="1" name="WL_RADIO_TIMER_TX_SLOT4_DELAY_I1" comment="This register sets the delay from Tx timer enable to slot 4 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="50120070" rw_flags="RW" width="1" name="WL_RADIO_TIMER_TX_SLOT5_DELAY_I1" comment="This register sets the delay from Tx timer enable to slot 5 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="50120074" rw_flags="RW" width="1" name="WL_RADIO_TIMER_TX_SLOT6_DELAY_I1" comment="This register sets the delay from Tx timer enable to slot 6 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="50120078" rw_flags="RW" width="1" name="WL_RADIO_TIMER_TX_SLOT7_DELAY_I1" comment="This register sets the delay from Tx timer enable to slot 7 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="5012007c" rw_flags="RW" width="2" name="WL_RADIO_TIMER_TX_SLOT_ON_OFF_LAST_I1" comment="This register sets the start and end of Tx turn on and off ramps, and the slot jumped to in the case of a Tx abort"/>
    <register addr="50120080" rw_flags="RW" width="2" name="WL_RADIO_TIMER_RX_SLOT0_ENABLES_I1" comment="This register sets the radio enables for receive timer slot 0."/>
    <register addr="50120084" rw_flags="RW" width="2" name="WL_RADIO_TIMER_RX_SLOT1_ENABLES_I1" comment="This register sets the radio enables for receive timer slot 1."/>
    <register addr="50120088" rw_flags="RW" width="2" name="WL_RADIO_TIMER_RX_SLOT2_ENABLES_I1" comment="This register sets the radio enables for receive timer slot 2."/>
    <register addr="5012008c" rw_flags="RW" width="2" name="WL_RADIO_TIMER_RX_SLOT3_ENABLES_I1" comment="This register sets the radio enables for receive timer slot 3."/>
    <register addr="50120090" rw_flags="RW" width="2" name="WL_RADIO_TIMER_RX_SLOT4_ENABLES_I1" comment="This register sets the radio enables for receive timer slot 4."/>
    <register addr="50120094" rw_flags="RW" width="2" name="WL_RADIO_TIMER_RX_SLOT5_ENABLES_I1" comment="This register sets the radio enables for receive timer slot 5."/>
    <register addr="50120098" rw_flags="RW" width="2" name="WL_RADIO_TIMER_RX_SLOT6_ENABLES_I1" comment="This register sets the radio enables for receive timer slot 6."/>
    <register addr="5012009c" rw_flags="RW" width="2" name="WL_RADIO_TIMER_RX_SLOT7_ENABLES_I1" comment="This register sets the radio enables for receive timer slot 7."/>
    <register addr="501200a0" rw_flags="RW" width="1" name="WL_RADIO_TIMER_RX_SLOT0_DELAY_I1" comment="This register sets the delay from Rx timer enable to slot 0 becoming active in 50ns units"/>
    <register addr="501200a4" rw_flags="RW" width="1" name="WL_RADIO_TIMER_RX_SLOT1_DELAY_I1" comment="This register sets the delay from Rx timer enable to slot 1 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="501200a8" rw_flags="RW" width="1" name="WL_RADIO_TIMER_RX_SLOT2_DELAY_I1" comment="This register sets the delay from Rx timer enable to slot 2 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="501200ac" rw_flags="RW" width="1" name="WL_RADIO_TIMER_RX_SLOT3_DELAY_I1" comment="This register sets the delay from Rx timer enable to slot 3 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="501200b0" rw_flags="RW" width="1" name="WL_RADIO_TIMER_RX_SLOT4_DELAY_I1" comment="This register sets the delay from Rx timer enable to slot 4 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="501200b4" rw_flags="RW" width="1" name="WL_RADIO_TIMER_RX_SLOT5_DELAY_I1" comment="This register sets the delay from Rx timer enable to slot 5 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="501200b8" rw_flags="RW" width="1" name="WL_RADIO_TIMER_RX_SLOT6_DELAY_I1" comment="This register sets the delay from Rx timer enable to slot 6 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="501200bc" rw_flags="RW" width="1" name="WL_RADIO_TIMER_RX_SLOT7_DELAY_I1" comment="This register sets the delay from Rx timer enable to slot 7 becoming active in 50ns units. NOTE that if the delay is less than the previous slot, the timer will roll over, increasing the slot delay."/>
    <register addr="501200c0" rw_flags="RW" width="2" name="WL_RADIO_TIMER_RX_SLOT_ON_OFF_LAST_I1" comment="This register sets the start and end of Rx turn on and off ramps, and the slot jumped to in the case of an Rx abort"/>
    <register addr="501200c4" rw_flags="R" width="1" name="WL_RADIO_TIMER_TX_SLOT_I1" comment="This register contains the current slot selected by the Tx timer"/>
    <register addr="501200c8" rw_flags="R" width="1" name="WL_RADIO_TIMER_RX_SLOT_I1" comment="This register contains the current slot selected by the Rx timer"/>
    <register addr="501200cc" rw_flags="R" width="2" name="WL_RADIO_ENABLES_STATUS_I1" comment="This register contains the current values of the Radio Enables, after all masking and multiplexing"/>
    <register addr="501200d0" rw_flags="RW" width="2" name="WL_RADIO_ENABLES_I1" comment="Default values for radio enables signals should the mask register select this rather than the timer outputs"/>
    <register addr="501200d4" rw_flags="RW" width="2" name="WL_RADIO_ENABLES_MASK_I1" comment="Selects use of RADIO_ENABLES or timer outputs. A one in a given bit selects the timer output."/>
    <register addr="501200d8" rw_flags="RW" width="2" name="WL_RADIO_ENABLES_TX_TRAIN_MASK_I1" comment="Selects use of RADIO_ENABLES or timer outputs. A one in a given bit selects the timer output. Used only when predistort training is active to allow Rx blocks to be turned on"/>
    <register addr="501200dc" rw_flags="R" width="2" name="WL_RADIO_DEBUG_STATUS_I1" comment="This read-only register returns the current state of the debug bus within radio control."/>
    <register addr="501200e0" rw_flags="RW" width="4" name="WL_RADIO_AGC_CONFIG1_I1" comment="Miscellaneous config bits for the AGC as follows:"/>
    <register addr="501200e4" rw_flags="RW" width="2" name="WL_RADIO_AGC_CONFIG2_I1" comment="Configuration bits for the AGC: initial gain settings before first update comes from RF chip"/>
    <register addr="501200e8" rw_flags="RW" width="4" name="WL_RADIO_AGC_CONFIG3_I1" comment="Configuration bits for the AGC: digital gain range definition. Also initial baseband gain until first update arrives from RF chip"/>
    <register addr="501200ec" rw_flags="RW" width="4" name="WL_RADIO_AGC_CONFIG4_I1" comment="Further configuration bits for the AGC: digital gain settings"/>
    <register addr="501200f0" rw_flags="RW" width="2" name="WL_RADIO_AGC_CONFIG5_I1" comment="Further configuration bits for the AGC: clipping detection behaviour"/>
    <register addr="501200f4" rw_flags="RW" width="4" name="WL_RADIO_AGC_CONFIG6_I1" comment="Further configuration bits for the AGC: ADC signal size nudge up thresholds"/>
    <register addr="501200f8" rw_flags="RW" width="4" name="WL_RADIO_AGC_CONFIG7_I1" comment="Further configuration bits for the AGC: ADC signal size nudge up thresholds"/>
    <register addr="501200fc" rw_flags="RW" width="1" name="WL_RADIO_AGC_CONFIG8_I1" comment="Further configuration bits for the AGC. Debug select"/>
    <register addr="50120100" rw_flags="RW" width="4" name="WL_RADIO_AGC_CONFIG9_I1" comment="Further configuration bits for the AGC: ADC signal size nudge up thresholds"/>
    <register addr="50120104" rw_flags="RW" width="4" name="WL_RADIO_AGC_CONFIG10_I1" comment="Further configuration bits for the AGC: ADC signal size nudge up thresholds"/>
    <register addr="50120108" rw_flags="RW" width="4" name="WL_RADIO_AGC_CONFIG11_I1" comment="Further configuration bits for the AGC: ADC signal size nudge up thresholds"/>
    <register addr="5012010c" rw_flags="RW" width="4" name="WL_RADIO_AGC_TIMEOUT_I1" comment="This register specifies programmable timeouts for the AGC"/>
    <register addr="50120110" rw_flags="RW" width="4" name="WL_RADIO_AGC_DIG_RSSI_TIME_I1" comment="This register specifies programmable configurations to measure digital RSSI for different purposes"/>
    <register addr="50120114" rw_flags="RW" width="4" name="WL_RADIO_AGC_DIG_RSSI_TIME2_I1" comment="This register specifies programmable configurations to measure digital RSSI for different purposes"/>
    <register addr="50120118" rw_flags="RW" width="4" name="WL_RADIO_AGC_OFDM_RSSI_TARGET_I1" comment="This register specifies the RSSI target for an OFDM receive burst after decimation."/>
    <register addr="5012011c" rw_flags="RW" width="4" name="WL_RADIO_AGC_CCK_RSSI_TARGET_I1" comment="This register specifies the RSSI target for a CCK receive burst after decimation."/>
    <register addr="50120120" rw_flags="RW" width="4" name="WL_RADIO_AGC_OFDM_RSSI_TARGET_DELTA_I1" comment="This register specifies the RSSI steps of (Maximum target + 2X dB) and (Minimum target - 2X dB) for a OFDM receive. Wheer X can be 1.5 dB or 2 dB depending on WL_RADIO_AGC_MIN_GAIN_STEP_SIZE."/>
    <register addr="50120124" rw_flags="RW" width="4" name="WL_RADIO_AGC_CCK_RSSI_TARGET_DELTA_I1" comment="This register specifies the RSSI steps of (Maximum target + 2X dB) and (Minimum target - 2X dB) for a CCK receive. Wheer X can be 1.5 dB or 2 dB depending on WL_RADIO_AGC_MIN_GAIN_STEP_SIZE."/>
    <register addr="50120128" rw_flags="RW" width="4" name="WL_RADIO_CS_CONFIG_I1" comment="This register configures the carrier sense. It is flagged when analogue gain is less than a threshold and digital RSSI is greater than a threshold. The thresholds are set in this register"/>
    <register addr="5012012c" rw_flags="RW" width="4" name="WL_RADIO_COADJ_CONFIG_I1" comment="Coadj general config register"/>
    <register addr="50120130" rw_flags="RW" width="4" name="WL_RADIO_COADJ_CONFIG2_I1" comment="Coadj general config register 2"/>
    <register addr="50120134" rw_flags="R" width="4" name="WL_RADIO_COADJ_STATUS_I1" comment="Coadj general status register"/>
    <register addr="50120138" rw_flags="RW" width="2" name="WL_RADIO_COADJ_TIMER_I1" comment="Timer initial value, downcount at core clk rate starts on write"/>
    <register addr="5012013c" rw_flags="RW" width="1" name="WL_RADIO_COADJ_MEM_ADDR_I1" comment="Coadj Code/Data Mem Address. MSBs=2'b00: DataStore, 2'b10: Core internal regs, 2'b11: Local regs"/>
    <register addr="50120140" rw_flags="RW" width="4" name="WL_RADIO_COADJ_MEM_WDATA_I1" comment="Coadj Code/Data Mem Write Data - auto increments address on write"/>
    <register addr="50120144" rw_flags="R" width="4" name="WL_RADIO_COADJ_MEM_RDATA_I1" comment="Coadj Code/Data Mem Read Data - auto increments address on read"/>
    <register addr="50120148" rw_flags="RW" width="2" name="WL_RADIO_ZIPPY_TO_RF_FLAGS_I1" comment="Zippy flag data (info and channel) to be sent to RFIC"/>
    <register addr="5012014c" rw_flags="RW" width="1" name="WL_RADIO_ZIPPY_TO_BB_FILTER_I1" comment="Filter bitmap for Zippy channels that cause an interrupt to be raised on traffic to the BBIC"/>
    <register addr="50120150" rw_flags="RW" width="1" name="WL_RADIO_ZIPPY_TO_RF_RESV_I1" comment="Zippy reserved signal for SW data to the RFIC"/>
    <register addr="50120154" rw_flags="R" width="2" name="WL_RADIO_ZIPPY_TO_BB_FLAGS_I1" comment="Zippy flag data to the BBIC, plus latched Valid and Ack"/>
  </block>
  <block name="wl_shared" comment="">
    <register addr="50600000" rw_flags="RW" width="1" name="WL_DEBUG_SEL" comment="Select for WLan_pd level debug mux"/>
    <register addr="50600004" rw_flags="R" width="2" name="WL_DEBUG_STATUS" comment="Debug data at WLan_pd level"/>
    <register addr="50600008" rw_flags="RW" width="4" name="WL_DEBUG_COMB_POSN_3_0" comment="Select for WLan_pd level debug mux"/>
    <register addr="5060000c" rw_flags="RW" width="4" name="WL_DEBUG_COMB_POSN_7_4" comment="Select for WLan_pd level debug mux"/>
    <register addr="50600010" rw_flags="RW" width="4" name="WL_DEBUG_COMB_POSN_11_8" comment="Select for WLan_pd level debug mux"/>
    <register addr="50600014" rw_flags="RW" width="4" name="WL_DEBUG_COMB_POSN_15_12" comment="Select for WLan_pd level debug mux"/>
    <register addr="50600018" rw_flags="RW" width="1" name="WL_DEBUG_COMB_BUS_0_SEL" comment="Source bus select for intermediate bus 0 (select one of up to 32 busses)"/>
    <register addr="5060001c" rw_flags="RW" width="1" name="WL_DEBUG_COMB_BUS_1_SEL" comment="Source bus select for intermediate bus 1 (select one of up to 32 busses)"/>
    <register addr="50600020" rw_flags="RW" width="1" name="WL_DEBUG_COMB_BUS_2_SEL" comment="Source bus select for intermediate bus 2 (select one of up to 32 busses)"/>
    <register addr="50600024" rw_flags="RW" width="1" name="WL_DEBUG_COMB_BUS_3_SEL" comment="Source bus select for intermediate bus 3 (select one of up to 32 busses)"/>
  </block>
  <block name="wl_speedy_0" comment="">
    <register addr="50130000" rw_flags="RW" width="4" name="WL_SPEEDY_ADDR_CTRL_I0" comment="Address and control flags for a Speedy transaction. Write this register to create an APB cycle on the remote chip (set up the write data first for write cycles)"/>
    <register addr="50130004" rw_flags="RW" width="4" name="WL_SPEEDY_WRITE_DATA_I0" comment="Data to write to APB over Speedy"/>
    <register addr="50130008" rw_flags="R" width="4" name="WL_SPEEDY_READ_DATA_I0" comment="Data read back for APB over Speedy"/>
    <register addr="5013000c" rw_flags="R" width="1" name="WL_SPEEDY_APB_STATUS_I0" comment="Status of the current APB cycle"/>
    <register addr="50130010" rw_flags="RW" width="1" name="WL_SPEEDY_ERROR_RECOVERY_I0" comment="Write this register to clear a timeout or APB access error that has been triggered by an earlier cycle"/>
  </block>
  <block name="wl_speedy_1" comment="">
    <register addr="50140000" rw_flags="RW" width="4" name="WL_SPEEDY_ADDR_CTRL_I1" comment="Address and control flags for a Speedy transaction. Write this register to create an APB cycle on the remote chip (set up the write data first for write cycles)"/>
    <register addr="50140004" rw_flags="RW" width="4" name="WL_SPEEDY_WRITE_DATA_I1" comment="Data to write to APB over Speedy"/>
    <register addr="50140008" rw_flags="R" width="4" name="WL_SPEEDY_READ_DATA_I1" comment="Data read back for APB over Speedy"/>
    <register addr="5014000c" rw_flags="R" width="1" name="WL_SPEEDY_APB_STATUS_I1" comment="Status of the current APB cycle"/>
    <register addr="50140010" rw_flags="RW" width="1" name="WL_SPEEDY_ERROR_RECOVERY_I1" comment="Write this register to clear a timeout or APB access error that has been triggered by an earlier cycle"/>
  </block>
  <block name="xdmac" comment="">
    <register addr="56300000" rw_flags="RW" width="1" name="XDMAC_RESERVED0" comment="Reserved register."/>
    <register addr="56300004" rw_flags="RW" width="1" name="XDMAC_RESERVED4" comment="Reserved register."/>
    <register addr="56300008" rw_flags="RW" width="1" name="XDMAC_RESERVED8" comment="Reserved register."/>
    <register addr="5630000c" rw_flags="R" width="1" name="XDMAC_INT_TC_STATUS" comment="Transfer Complete Interrupt Status Register."/>
    <register addr="56300010" rw_flags="W" width="1" name="XDMAC_INT_TC_CLR" comment="Transfer Complete Interrupt Clear Register (Value is not meaningful)"/>
    <register addr="56300014" rw_flags="RW" width="1" name="XDMAC_INT_TC_MASK" comment="Transfer Complete Interrupt Mask Register (0: Interrupt disabled, 1 : Interrupt enabled)"/>
    <register addr="56300018" rw_flags="R" width="1" name="XDMAC_ERR_STATUS" comment="Error Status Register"/>
    <register addr="5630001c" rw_flags="RW" width="1" name="XDMAC_RESERVED1C" comment="Reserved register."/>
    <register addr="56300020" rw_flags="RW" width="1" name="XDMAC_RESERVED20" comment="Reserved register."/>
    <register addr="56300024" rw_flags="W" width="1" name="XDMAC_START" comment="DMA Transfer Start (Value is not meaningful). Do NOT start DMA again until the previously started DMA transfer is completed."/>
    <register addr="56300028" rw_flags="RW" width="1" name="XDMAC_ICG_DISABLE" comment="Internal clock gating is disabled (0 : Clock gating enabled, 1 : Clock gatingdisabled)"/>
    <register addr="5630002c" rw_flags="RW" width="4" name="XDMAC_CONFIG" comment="Configuration Register"/>
    <register addr="56300030" rw_flags="RW" width="4" name="XDMAC_LLI_SRC_ADDR" comment="Source Address Register (Linked List Item)"/>
    <register addr="56300034" rw_flags="RW" width="4" name="XDMAC_LLI_DST_ADDR" comment="Destination Address Register (Linked List Item)"/>
    <register addr="56300038" rw_flags="RW" width="4" name="XDMAC_LLI_NXT_ADDR" comment="Next Address Register to indicate the next linked list item (Linked List Item)"/>
    <register addr="5630003c" rw_flags="RW" width="4" name="XDMAC_LLI_CTRL" comment=""/>
  </block>
  <block name="zippy_bb" comment="">
    <register addr="56100000" rw_flags="RW" width="4" name="ZIPPY_BB_ADDR_CTRL" comment="ZIPPY remote register access address and controls. The bottom 16 bits of this register (PSEL and ADDR) are actually the bottom 16 bits of the byte address of the RFIC register to be accessed (from HTML docs for example)"/>
    <register addr="56100004" rw_flags="RW" width="4" name="ZIPPY_BB_WRITE_DATA" comment="Data to write to remote register over ZIPPY. Only the number of bytes specified in the ZIPPY_BB_WIDTH field are transferred. Unwritten bytes are unchanged, if the destination register is larger than the number of bytes written"/>
    <register addr="56100008" rw_flags="R" width="4" name="ZIPPY_BB_READ_DATA" comment="Data returned from the remote register over ZIPPY. Only the number of bytes specified in the ZIPPY_BB_WIDTH field are transferred"/>
    <register addr="5610000c" rw_flags="RW" width="4" name="ZIPPY_BB_TIMEOUTS" comment="Time out control for register read data and write acknowledges (if enabled) to be returned from the RF IC"/>
    <register addr="56100010" rw_flags="RW" width="2" name="ZIPPY_BB_TRANSPORT" comment="ZIPPY baseband transport configuration. The matching configuration must also be set up in the RF chip"/>
    <register addr="56100014" rw_flags="RW" width="1" name="ZIPPY_BB_PRIORITY_INC_RATE" comment="Configure the rate at which priority increases for unserviced channels. "/>
    <register addr="56100018" rw_flags="RW" width="2" name="ZIPPY_BB_FLAGS0_CFG" comment="Type 0 (BT) flag frame configuration"/>
    <register addr="5610001c" rw_flags="RW" width="2" name="ZIPPY_BB_FLAGS1_CFG" comment="Type 1 (BT) flag frame configuration"/>
    <register addr="56100020" rw_flags="RW" width="2" name="ZIPPY_BB_FLAGS2_CFG" comment="Type 2 (BT) flag frame configuration"/>
    <register addr="56100024" rw_flags="RW" width="2" name="ZIPPY_BB_FLAGS3_CFG" comment="Type 3 (WLAN) flag frame configuration"/>
    <register addr="56100028" rw_flags="RW" width="2" name="ZIPPY_BB_FLAGS4_CFG" comment="Type 4 (WLAN) flag frame configuration"/>
    <register addr="5610002c" rw_flags="RW" width="2" name="ZIPPY_BB_FLAGS5_CFG" comment="Type 5 (WLAN) flag frame configuration"/>
    <register addr="56100030" rw_flags="RW" width="4" name="ZIPPY_BB_DATA_CFG" comment="Address/data frame configuration and write ack mask"/>
    <register addr="56100034" rw_flags="RW" width="4" name="ZIPPY_BB_INT_EN" comment="Interrupt sources enable."/>
    <register addr="56100038" rw_flags="R" width="4" name="ZIPPY_BB_INT_STATUS" comment="Status of Interrupt sources."/>
    <register addr="5610003c" rw_flags="W" width="4" name="ZIPPY_BB_INT_CLEAR" comment="Clear Interrupt Sources by writing a 1 to the register bit."/>
    <register addr="56100040" rw_flags="R" width="2" name="ZIPPY_BB_APB_STATUS" comment="Status of the RF IC register access"/>
    <register addr="56100044" rw_flags="R" width="2" name="ZIPPY_BB_DATA_COUNTS" comment="Local BB counters for data from BB to RF and RF to BB. TO be compared with equivalent ones in the RFIC"/>
    <register addr="56100048" rw_flags="RW" width="1" name="ZIPPY_BB_DEBUG_SEL" comment=""/>
  </block>
</subsystem>
